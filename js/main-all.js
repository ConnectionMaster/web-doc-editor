Ext.BLANK_IMAGE_URL="js/extjs/resources/images/default/s.gif";function log(){if(console){console.log.apply(this,arguments)}}function _(a){try{var c=i18n[a];if(c===undefined){c=a;log("FIX ME : i18n not found for the string: "+a)}return c}catch(b){return a}}function XHR(c){var b=c.success,d=c.failure,a=c.callback;c.url="./do/"+c.params.task;delete c.params.task;c.failure=c.success=Ext.emptyFn;c.callback=function(g,j,f){var i=null;try{i=Ext.decode(f.responseText)}catch(h){log("Invalid XHR JSON Response:"+f.responseText)}if(j&&i&&i.success){if(b!==undefined){Ext.callback(b,c.scope,[f,g])}}else{if(d!==undefined){Ext.callback(d,c.scope,[f,g])}}if(a!==undefined){Ext.callback(a,c.scope,[g,j,f])}};Ext.Ajax.request(c)}
/*
 * Ext JS Library 3.1.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ux.PortalColumn=Ext.extend(Ext.Container,{layout:"anchor",defaultType:"portlet",cls:"x-portal-column"});Ext.reg("portalcolumn",Ext.ux.PortalColumn);
/*
 * Ext JS Library 3.1.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ux.Portal=Ext.extend(Ext.Panel,{layout:"column",autoScroll:true,cls:"x-portal",defaultType:"portalcolumn",initComponent:function(){Ext.ux.Portal.superclass.initComponent.call(this);this.addEvents({validatedrop:true,beforedragover:true,dragover:true,beforedrop:true,drop:true})},initEvents:function(){Ext.ux.Portal.superclass.initEvents.call(this);this.dd=new Ext.ux.Portal.DropZone(this,this.dropConfig)},beforeDestroy:function(){if(this.dd){this.dd.unreg()}Ext.ux.Portal.superclass.beforeDestroy.call(this)}});Ext.reg("portal",Ext.ux.Portal);Ext.ux.Portal.DropZone=function(a,b){this.portal=a;Ext.dd.ScrollManager.register(a.body);Ext.ux.Portal.DropZone.superclass.constructor.call(this,a.bwrap.dom,b);a.body.ddScrollConfig=this.ddScrollConfig};Ext.extend(Ext.ux.Portal.DropZone,Ext.dd.DropTarget,{ddScrollConfig:{vthresh:50,hthresh:-1,animate:true,increment:200},createEvent:function(a,f,d,b,h,g){return{portal:this.portal,panel:d.panel,columnIndex:b,column:h,position:g,data:d,source:a,rawEvent:f,status:this.dropAllowed}},notifyOver:function(v,t,w){var f=t.getXY(),a=this.portal,n=v.proxy;if(!this.grid){this.grid=this.getGrid()}var b=a.body.dom.clientWidth;if(!this.lastCW){this.lastCW=b}else{if(this.lastCW!=b){this.lastCW=b;a.doLayout();this.grid=this.getGrid()}}var d=0,l=this.grid.columnX,m=false;for(var s=l.length;d<s;d++){if(f[0]<(l[d].x+l[d].w)){m=true;break}}if(!m){d--}var q,k=false,i=0,u=a.items.itemAt(d),o=u.items.items,j=false;for(var s=o.length;i<s;i++){q=o[i];var r=q.el.getHeight();if(r===0){j=true}else{if((q.el.getY()+(r/2))>f[1]){k=true;break}}}i=(k&&q?i:u.items.getCount())+(j?-1:0);var g=this.createEvent(v,t,w,d,u,i);if(a.fireEvent("validatedrop",g)!==false&&a.fireEvent("beforedragover",g)!==false){n.getProxy().setWidth("auto");if(q){n.moveProxy(q.el.dom.parentNode,k?q.el.dom:null)}else{n.moveProxy(u.el.dom,null)}this.lastPos={c:u,col:d,p:j||(k&&q)?i:false};this.scrollPos=a.body.getScroll();a.fireEvent("dragover",g);return g.status}else{return g.status}},notifyOut:function(){delete this.grid},notifyDrop:function(k,g,f){delete this.grid;if(!this.lastPos){return}var i=this.lastPos.c,b=this.lastPos.col,j=this.lastPos.p;var a=this.createEvent(k,g,f,b,i,j!==false?j:i.items.getCount());if(this.portal.fireEvent("validatedrop",a)!==false&&this.portal.fireEvent("beforedrop",a)!==false){k.proxy.getProxy().remove();k.panel.el.dom.parentNode.removeChild(k.panel.el.dom);if(j!==false){if(i==k.panel.ownerCt&&(i.items.items.indexOf(k.panel)<=j)){j++}i.insert(j,k.panel)}else{i.add(k.panel)}i.doLayout();this.portal.fireEvent("drop",a);var l=this.scrollPos.top;if(l){var h=this.portal.body.dom;setTimeout(function(){h.scrollTop=l},10)}}delete this.lastPos},getGrid:function(){var a=this.portal.bwrap.getBox();a.columnX=[];this.portal.items.each(function(b){a.columnX.push({x:b.el.getX(),w:b.el.getWidth()})});return a},unreg:function(){Ext.ux.Portal.DropZone.superclass.unreg.call(this)}});
/*
 * Ext JS Library 3.1.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ux.Portlet=Ext.extend(Ext.Panel,{anchor:"100%",frame:true,collapsible:true,draggable:true,cls:"x-portlet"});Ext.reg("portlet",Ext.ux.Portlet);
/*
 * Ext JS Library 3.0.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ns("Ext.ux.grid");Ext.ux.grid.RowEditor=Ext.extend(Ext.Panel,{floating:true,shadow:false,layout:"hbox",cls:"x-small-editor",buttonAlign:"center",baseCls:"x-row-editor",elements:"header,footer,body",frameWidth:5,buttonPad:3,clicksToEdit:"auto",monitorValid:true,focusDelay:250,errorSummary:true,defaults:{normalWidth:true},initComponent:function(){Ext.ux.grid.RowEditor.superclass.initComponent.call(this);this.addEvents("beforeedit","validateedit","afteredit")},init:function(a){this.grid=a;this.ownerCt=a;if(this.clicksToEdit===2){a.on("rowdblclick",this.onRowDblClick,this)}else{a.on("rowclick",this.onRowClick,this);if(Ext.isIE){a.on("rowdblclick",this.onRowDblClick,this)}}a.getStore().on("remove",function(){this.stopEditing(false)},this);a.on({scope:this,keydown:this.onGridKey,columnresize:this.verifyLayout,columnmove:this.refreshFields,reconfigure:this.refreshFields,destroy:this.destroy,bodyscroll:{buffer:250,fn:this.positionButtons}});a.getColumnModel().on("hiddenchange",this.verifyLayout,this,{delay:1});a.getView().on("refresh",this.stopEditing.createDelegate(this,[]))},refreshFields:function(){this.initFields();this.verifyLayout()},isDirty:function(){var a;this.items.each(function(b){if(String(this.values[b.id])!==String(b.getValue())){a=true;return false}},this);return a},startEditing:function(k,p){if(this.editing&&this.isDirty()){this.showTooltip(_("You need to commit or cancel your changes"));return}this.editing=true;if(typeof k=="object"){k=this.grid.getStore().indexOf(k)}if(this.fireEvent("beforeedit",this,k)!==false){var e=this.grid,l=e.getView();var o=l.getRow(k);var c=e.store.getAt(k);this.record=c;this.rowIndex=k;this.values={};if(!this.rendered){this.render(l.getEditorParent())}var m=Ext.fly(o).getWidth();this.setSize(m);if(!this.initialized){this.initFields()}var n=e.getColumnModel(),d=this.items.items,j,a;for(var b=0,h=n.getColumnCount();b<h;b++){a=this.preEditValue(c,n.getDataIndex(b));j=d[b];j.setValue(a);this.values[j.id]=a||""}this.verifyLayout(true);if(!this.isVisible()){this.setPagePosition(Ext.fly(o).getXY())}else{this.el.setXY(Ext.fly(o).getXY(),{duration:0.15})}if(!this.isVisible()){this.show().doLayout()}if(p!==false){this.doFocus.defer(this.focusDelay,this)}}},stopEditing:function(n){this.editing=false;if(!this.isVisible()){return}if(n===false||!this.isValid()){this.hide();return}var h={},b=this.record,j=false;var m=this.grid.colModel,f=this.items.items;for(var e=0,g=m.getColumnCount();e<g;e++){if(!m.isHidden(e)){var c=m.getDataIndex(e);if(!Ext.isEmpty(c)){var a=b.data[c];var l=this.postEditValue(f[e].getValue(),a,b,c);if(String(a)!==String(l)){h[c]=l;j=true}}}}if(j&&this.fireEvent("validateedit",this,h,b,this.rowIndex)!==false){b.beginEdit();for(var d in h){if(h.hasOwnProperty(d)){b.set(d,h[d])}}b.endEdit();this.fireEvent("afteredit",this,h,b,this.rowIndex)}this.hide()},verifyLayout:function(e){if(this.el&&(this.isVisible()||e===true)){var g=this.grid.getView().getRow(this.rowIndex);this.setSize(Ext.fly(g).getWidth(),Ext.isIE?Ext.fly(g).getHeight()+(Ext.isBorderBox?9:0):undefined);var c=this.grid.colModel,b=this.items.items;for(var d=0,a=c.getColumnCount();d<a;d++){if(!c.isHidden(d)){var f=0;if(d===0){f+=0}if(d===(a-1)){f+=3}else{f+=1}b[d].show();b[d].setWidth(c.getColumnWidth(d)-f)}else{b[d].hide()}}this.doLayout();this.positionButtons()}},slideHide:function(){this.hide()},initFields:function(){var b=this.grid.getColumnModel(),f=Ext.layout.ContainerLayout.prototype.parseMargins;this.removeAll(false);for(var e=0,a=b.getColumnCount();e<a;e++){var g=b.getColumnAt(e);var d=g.getEditor();if(!d){d=g.displayEditor||new Ext.form.DisplayField()}if(e==0){d.margins=f("0 1 2 1")}else{if(e==a-1){d.margins=f("0 0 2 1")}else{d.margins=f("0 1 2")}}d.setWidth(b.getColumnWidth(e));d.column=g;if(d.ownerCt!==this){d.on("focus",this.ensureVisible,this);d.on("specialkey",this.onKey,this)}this.insert(e,d)}this.initialized=true},onKey:function(a,b){if(b.getKey()===b.ENTER){this.stopEditing(true);b.stopPropagation()}},onGridKey:function(c){if(c.getKey()===c.ENTER&&!this.isVisible()){var b=this.grid.getSelectionModel().getSelected();if(b){var a=this.grid.store.indexOf(b);this.startEditing(a);c.stopPropagation()}}},ensureVisible:function(a){if(this.isVisible()){this.grid.getView().ensureVisible(this.rowIndex,this.grid.colModel.getIndexById(a.column.id),true)}},onRowClick:function(b,d,c){if(this.clicksToEdit=="auto"){var a=this.lastClickIndex;this.lastClickIndex=d;if(a!=d&&!this.isVisible()){return}}this.startEditing(d,false);this.doFocus.defer(this.focusDelay,this,[c.getPoint()])},onRowDblClick:function(a,c,b){this.startEditing(c,false);this.doFocus.defer(this.focusDelay,this,[b.getPoint()])},onRender:function(){Ext.ux.grid.RowEditor.superclass.onRender.apply(this,arguments);this.el.swallowEvent(["keydown","keyup","keypress"]);this.btns=new Ext.Panel({baseCls:"x-plain",cls:"x-btns",elements:"body",layout:"table",width:(this.minButtonWidth*2)+(this.frameWidth*2)+(this.buttonPad*4),items:[{ref:"saveBtn",itemId:"saveBtn",xtype:"button",text:this.saveText||"Save",width:this.minButtonWidth,handler:this.stopEditing.createDelegate(this,[true])},{xtype:"button",text:this.cancelText||"Cancel",width:this.minButtonWidth,handler:this.stopEditing.createDelegate(this,[false])}]});this.btns.render(this.bwrap)},afterRender:function(){Ext.ux.grid.RowEditor.superclass.afterRender.apply(this,arguments);this.positionButtons();if(this.monitorValid){this.startMonitoring()}},onShow:function(){if(this.monitorValid){this.startMonitoring()}Ext.ux.grid.RowEditor.superclass.onShow.apply(this,arguments)},onHide:function(){Ext.ux.grid.RowEditor.superclass.onHide.apply(this,arguments);this.stopMonitoring();this.grid.getView().focusRow(this.rowIndex)},positionButtons:function(){if(this.btns){var d=this.el.dom.clientHeight;var b=this.grid.getView();var a=b.scroller.dom.scrollLeft;var c=b.mainBody.getWidth();var e=this.btns.getWidth();this.btns.el.shift({left:(c/2)-(e/2)+a,top:d-2,stopFx:true,duration:0.2})}},preEditValue:function(a,c){var b=a.data[c];return this.autoEncode&&typeof b==="string"?Ext.util.Format.htmlDecode(b):b},postEditValue:function(c,a,b,d){return this.autoEncode&&typeof c=="string"?Ext.util.Format.htmlEncode(c):c},doFocus:function(f){if(this.isVisible()){var d=0;if(f){d=this.getTargetColumnIndex(f)}var b=this.grid.getColumnModel();for(var e=d||0,a=b.getColumnCount();e<a;e++){var g=b.getColumnAt(e);if(!g.hidden&&g.getEditor()){g.getEditor().focus();break}}}},getTargetColumnIndex:function(k){var a=this.grid,j=a.view;var h=k.left;var f=a.colModel.config;var b=0,d=false;for(var e=f.length,g;g=f[b];b++){if(!g.hidden){if(Ext.fly(j.getHeaderCell(b)).getRegion().right>=h){d=b;break}}}return d},startMonitoring:function(){if(!this.bound&&this.monitorValid){this.bound=true;Ext.TaskMgr.start({run:this.bindHandler,interval:this.monitorPoll||200,scope:this})}},stopMonitoring:function(){this.bound=false;if(this.tooltip){this.tooltip.hide()}},isValid:function(){var a=true;this.items.each(function(b){if(!b.isValid(true)){a=false;return false}});return a},bindHandler:function(){if(!this.bound){return false}var a=this.isValid();if(!a&&this.errorSummary){this.showTooltip(this.getErrorText().join(""))}this.btns.saveBtn.setDisabled(!a);this.fireEvent("validation",this,a)},showTooltip:function(b){var a=this.tooltip;if(!a){a=this.tooltip=new Ext.ToolTip({maxWidth:600,cls:"errorTip",width:300,title:_("Errors"),autoHide:false,anchor:"left",anchorToTarget:true,mouseOffset:[40,0]})}a.initTarget(this.items.last().getEl());if(!a.rendered){a.show();a.hide()}a.body.update(b);a.doAutoWidth();a.show()},getErrorText:function(){var a=["<ul>"];this.items.each(function(b){if(!b.isValid(true)){a.push("<li>",b.activeError,"</li>")}});a.push("</ul>");return a}});Ext.preg("roweditor",Ext.ux.grid.RowEditor);Ext.override(Ext.form.Field,{markInvalid:function(c){if(!this.rendered||this.preventMark){return}c=c||this.invalidText;var a=this.getMessageHandler();if(a){a.mark(this,c)}else{if(this.msgTarget){this.el.addClass(this.invalidClass);var b=Ext.getDom(this.msgTarget);if(b){b.innerHTML=c;b.style.display=this.msgDisplay}}}this.activeError=c;this.fireEvent("invalid",this,c)}});Ext.override(Ext.ToolTip,{doAutoWidth:function(){var a=this.body.getTextWidth();if(this.title){a=Math.max(a,this.header.child("span").getTextWidth(this.title))}a+=this.getFrameWidth()+(this.closable?20:0)+this.body.getPadding("lr")+20;this.setWidth(a.constrain(this.minWidth,this.maxWidth));if(Ext.isIE7&&!this.repainted){this.el.repaint();this.repainted=true}}});
/*
 * Ext JS Library 3.0.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ux.StatusBar=Ext.extend(Ext.Toolbar,{cls:"x-statusbar",busyIconCls:"x-status-busy",busyText:"Loading...",autoClear:5000,activeThreadId:0,initComponent:function(){if(this.statusAlign=="right"){this.cls+=" x-status-right"}Ext.ux.StatusBar.superclass.initComponent.call(this)},afterRender:function(){Ext.ux.StatusBar.superclass.afterRender.call(this);var a=this.statusAlign=="right";this.statusEl=new Ext.Toolbar.TextItem({cls:"x-status-text "+(this.iconCls||this.defaultIconCls||""),text:this.text||this.defaultText||""});if(a){this.add("->");this.add(this.statusEl)}else{this.insert(0,this.statusEl);this.insert(1,"->")}},setStatus:function(d){d=d||{};if(typeof d=="string"){d={text:d}}if(d.text!==undefined){this.setText(d.text)}if(d.iconCls!==undefined){this.setIcon(d.iconCls)}if(d.clear){var e=d.clear,b=this.autoClear,a={useDefaults:true,anim:true};if(typeof e=="object"){e=Ext.applyIf(e,a);if(e.wait){b=e.wait}}else{if(typeof e=="number"){b=e;e=a}else{if(typeof e=="boolean"){e=a}}}e.threadId=this.activeThreadId;this.clearStatus.defer(b,this,[e])}return this},clearStatus:function(c){c=c||{};if(c.threadId&&c.threadId!==this.activeThreadId){return this}var b=c.useDefaults?this.defaultText:"",a=c.useDefaults?(this.defaultIconCls?this.defaultIconCls:""):"";if(c.anim){this.statusEl.fadeOut({remove:false,useDisplay:true,scope:this,callback:function(){this.setStatus({text:b,iconCls:a});this.statusEl.show()}})}else{this.statusEl.hide();this.setStatus({text:b,iconCls:a});this.statusEl.show()}return this},setText:function(a){this.activeThreadId++;this.text=a||"";if(this.rendered){this.statusEl.setText(this.text)}return this},getText:function(){return this.text},setIcon:function(a){this.activeThreadId++;a=a||"";if(this.rendered){if(this.currIconCls){this.statusEl.removeClass(this.currIconCls);this.currIconCls=null}if(a.length>0){this.statusEl.addClass(a);this.currIconCls=a}}else{this.currIconCls=a}return this},showBusy:function(a){if(typeof a=="string"){a={text:a}}a=Ext.applyIf(a||{},{text:this.busyText,iconCls:this.busyIconCls});return this.setStatus(a)}});Ext.reg("statusbar",Ext.ux.StatusBar);
/*
 * Ext JS Library 3.0.0
 * Copyright(c) 2006-2009 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.ux.TabCloseMenu=function(){var a,c,b;this.init=function(e){a=e;a.on("contextmenu",d)};function d(h,g,i){if(!c){c=new Ext.menu.Menu({items:[{id:a.id+"-close",text:_("Close Tab"),handler:function(){a.remove(b)}},{id:a.id+"-close-others",iconCls:"iconCloseOthersTabs",text:_("Close Other Tabs"),handler:function(){a.items.each(function(e){if(e.closable&&e!=b){a.remove(e)}})}}]})}b=g;var f=c.items;f.get(a.id+"-close").setDisabled(!g.closable);var j=true;a.items.each(function(){if(this!=g&&this.closable){j=false;return false}});f.get(a.id+"-close-others").setDisabled(j);i.stopEvent();c.showAt(i.getPoint())}};Ext.preg("tabclosemenu",Ext.ux.TabCloseMenu);Ext.util.md5=function(o,a,m,j){a=(typeof a==="undefined"?false:a);m=(typeof m==="undefined"?false:m);j=(typeof j==="undefined"?8:j);function h(p,s){var r=((p&65535)+(s&65535)),q=((p>>16)+(s>>16)+(r>>16));return(q<<16)|(r&65535)}function l(p,q){return(p<<q)|(p>>>(32-q))}function d(y,u,r,p,w,v){return h(l(h(h(u,y),h(p,v)),w),r)}function i(r,q,y,w,p,v,u){return d((q&y)|((~q)&w),r,q,p,v,u)}function c(r,q,y,w,p,v,u){return d((q&w)|(y&(~w)),r,q,p,v,u)}function k(r,q,y,w,p,v,u){return d(q^y^w,r,q,p,v,u)}function g(r,q,y,w,p,v,u){return d(y^(q|(~w)),r,q,p,v,u)}function f(A,u){var z=1732584193,y=-271733879,w=-1732584194,v=271733878,r,t,s,q,p;A[u>>5]|=128<<((u)%32);A[(((u+64)>>>9)<<4)+14]=u;for(r=0;r<A.length;r+=16){t=z;s=y;q=w;p=v;z=i(z,y,w,v,A[r+0],7,-680876936);v=i(v,z,y,w,A[r+1],12,-389564586);w=i(w,v,z,y,A[r+2],17,606105819);y=i(y,w,v,z,A[r+3],22,-1044525330);z=i(z,y,w,v,A[r+4],7,-176418897);v=i(v,z,y,w,A[r+5],12,1200080426);w=i(w,v,z,y,A[r+6],17,-1473231341);y=i(y,w,v,z,A[r+7],22,-45705983);z=i(z,y,w,v,A[r+8],7,1770035416);v=i(v,z,y,w,A[r+9],12,-1958414417);w=i(w,v,z,y,A[r+10],17,-42063);y=i(y,w,v,z,A[r+11],22,-1990404162);z=i(z,y,w,v,A[r+12],7,1804603682);v=i(v,z,y,w,A[r+13],12,-40341101);w=i(w,v,z,y,A[r+14],17,-1502002290);y=i(y,w,v,z,A[r+15],22,1236535329);z=c(z,y,w,v,A[r+1],5,-165796510);v=c(v,z,y,w,A[r+6],9,-1069501632);w=c(w,v,z,y,A[r+11],14,643717713);y=c(y,w,v,z,A[r+0],20,-373897302);z=c(z,y,w,v,A[r+5],5,-701558691);v=c(v,z,y,w,A[r+10],9,38016083);w=c(w,v,z,y,A[r+15],14,-660478335);y=c(y,w,v,z,A[r+4],20,-405537848);z=c(z,y,w,v,A[r+9],5,568446438);v=c(v,z,y,w,A[r+14],9,-1019803690);w=c(w,v,z,y,A[r+3],14,-187363961);y=c(y,w,v,z,A[r+8],20,1163531501);z=c(z,y,w,v,A[r+13],5,-1444681467);v=c(v,z,y,w,A[r+2],9,-51403784);w=c(w,v,z,y,A[r+7],14,1735328473);y=c(y,w,v,z,A[r+12],20,-1926607734);z=k(z,y,w,v,A[r+5],4,-378558);v=k(v,z,y,w,A[r+8],11,-2022574463);w=k(w,v,z,y,A[r+11],16,1839030562);y=k(y,w,v,z,A[r+14],23,-35309556);z=k(z,y,w,v,A[r+1],4,-1530992060);v=k(v,z,y,w,A[r+4],11,1272893353);w=k(w,v,z,y,A[r+7],16,-155497632);y=k(y,w,v,z,A[r+10],23,-1094730640);z=k(z,y,w,v,A[r+13],4,681279174);v=k(v,z,y,w,A[r+0],11,-358537222);w=k(w,v,z,y,A[r+3],16,-722521979);y=k(y,w,v,z,A[r+6],23,76029189);z=k(z,y,w,v,A[r+9],4,-640364487);v=k(v,z,y,w,A[r+12],11,-421815835);w=k(w,v,z,y,A[r+15],16,530742520);y=k(y,w,v,z,A[r+2],23,-995338651);z=g(z,y,w,v,A[r+0],6,-198630844);v=g(v,z,y,w,A[r+7],10,1126891415);w=g(w,v,z,y,A[r+14],15,-1416354905);y=g(y,w,v,z,A[r+5],21,-57434055);z=g(z,y,w,v,A[r+12],6,1700485571);v=g(v,z,y,w,A[r+3],10,-1894986606);w=g(w,v,z,y,A[r+10],15,-1051523);y=g(y,w,v,z,A[r+1],21,-2054922799);z=g(z,y,w,v,A[r+8],6,1873313359);v=g(v,z,y,w,A[r+15],10,-30611744);w=g(w,v,z,y,A[r+6],15,-1560198380);y=g(y,w,v,z,A[r+13],21,1309151649);z=g(z,y,w,v,A[r+4],6,-145523070);v=g(v,z,y,w,A[r+11],10,-1120210379);w=g(w,v,z,y,A[r+2],15,718787259);y=g(y,w,v,z,A[r+9],21,-343485551);z=h(z,t);y=h(y,s);w=h(w,q);v=h(v,p)}return[z,y,w,v]}function b(s){var r=[],p=((1<<j)-1),q;for(q=0;q<s.length*j;q+=j){r[q>>5]|=(s.charCodeAt(q/j)&p)<<(q%32)}return r}function e(r){var s="",p=((1<<j)-1),q;for(q=0;q<r.length*32;q+=j){s+=String.fromCharCode((r[q>>5]>>>(q%32))&p)}return s}function n(r){var q=((m)?"0123456789ABCDEF":"0123456789abcdef"),s="",p;for(p=0;p<r.length*4;p++){s+=q.charAt((r[p>>2]>>((p%4)*8+4))&15)+q.charAt((r[p>>2]>>((p%4)*8))&15)}return s}return(a?e(f(b(o),o.length*j)):n(f(b(o),o.length*j)))};Ext.ux.CodeMirror=Ext.extend(Ext.BoxComponent,{readOnly:(this.readOnly)?this.readOnly:false,width:"auto",height:"auto",autoResize:true,initialised:false,documentDurty:false,parser:(this.parser)?this.parser:"xml",parserFile:"parsexml.js",parserStylesheet:"js/ux/codemirror/css/xmlcolors.css",initComponent:function(){Ext.ux.CodeMirror.superclass.initComponent.apply(this);this.addEvents({initialize:true,codemodified:true,coderestored:true,cursormove:true,scroll:true});if(this.parser==="xml"){this.parserFile="parsexml.js";this.parserStylesheet="js/ux/codemirror/css/xmlcolors.css"}if(this.parser==="html"){this.parserFile=["parsexml.js","parsecss.js","tokenizejavascript.js","parsejavascript.js","parsehtmlmixed.js"];this.parserStylesheet=["js/ux/codemirror/css/xmlcolors.css","js/ux/codemirror/css/jscolors.css","js/ux/codemirror/css/csscolors.css"]}if(this.parser==="php"){this.parserFile=["parsexml.js","parsecss.js","tokenizejavascript.js","parsejavascript.js","../contrib/php/js/tokenizephp.js","../contrib/php/js/parsephp.js","../contrib/php/js/parsephphtmlmixed.js"];this.parserStylesheet=["js/ux/codemirror/css/xmlcolors.css","js/ux/codemirror/css/jscolors.css","js/ux/codemirror/css/csscolors.css","js/ux/codemirror/contrib/php/css/phpcolors.css"]}},onRender:function(b,a){Ext.ux.CodeMirror.superclass.onRender.apply(this,[b,a])},resize:function(){this.mirror.frame.style.height=this.ownerCt.lastSize.height-85+"px";this.mirror.frame.style.width=this.ownerCt.lastSize.width-35+"px"},onInit:function(a,b){var c=Ext.getCmp(b),d=c.mirror;c.ownerCt.fireEvent("resize");c.fireEvent("initialize");c.initialised=true;c.documentDurty=false;d.editor.keyUp=function(h){var g=d.cursorPosition(),f=d.lineNumber(g.line),i=g.character;c.fireEvent("cursormove",f,i);c.manageCodeChange(b)};Ext.EventManager.addListener(d.frame.contentWindow,"scroll",function(f){c.monitorScroll(f,c)},this)},manageCodeChange:function(c){var d=Ext.getCmp(c),e=d.mirror,a=e.originalContent,b=e.getCode();if(a){if(a===b){if(d.documentDurty===true){d.fireEvent("coderestored");d.documentDurty=false}}else{d.ownerCt.topToolbar.items.items[5].enable();if(d.documentDurty===false){d.fireEvent("codemodified");d.documentDurty=true}}}},saveFunction:function(a){var b=Ext.getCmp(a),c=b.ownerCt.topToolbar.items.items[1];if(!c.disabled){c.handler.call(c.scope||c,c)}},monitorScroll:function(b,a){a.fireEvent("scroll",b.target.body.scrollTop,this)},afterRender:function(){this.mirror=new CodeMirror(CodeMirror.replace(Ext.get(this.id).dom),{textWrapping:false,saveFunction:this.saveFunction,width:"100%",height:this.ownerCt.lastSize.height,readOnly:this.readOnly,content:this.value,originalContent:false,parserfile:this.parserFile,parserConfig:{alignCDATA:true,useHTMLKludges:false},indentUnit:1,cmId:this.id,lineNumbers:true,continuousScanning:(this.readOnly)?false:500,stylesheet:this.parserStylesheet,path:"js/ux/codemirror/js/",initCallback:this.onInit,autoMatchParens:true,disableSpellcheck:false,onChange:this.manageCodeChange});this.ownerCt.on("resize",function(b,c,e,a,d){this.resize()},this)},getCode:function(){return this.mirror.getCode()},setCode:function(a){if(!this.initialised){var b=new Ext.util.DelayedTask(function(){this.setCode(a)},this);b.delay(500)}else{this.mirror.setCode(a);this.mirror.originalContent=a}},reIndentAll:function(){this.mirror.reindent()},undo:function(a){this.mirror.undo();a.topToolbar.items.items[6].enable();if(!this.mirror.editor.history.history.length){a.topToolbar.items.items[5].disable()}},redo:function(a){this.mirror.redo();a.topToolbar.items.items[5].enable();if(!this.mirror.editor.history.redoHistory.length){a.topToolbar.items.items[6].disable()}},insertIntoLine:function(b,a,d){var c=this.mirror.nthLine(b);this.mirror.insertIntoLine(c,a,d)},scrollTo:function(a){this.mirror.frame.contentWindow.document.body.scrollTop=a},focus:function(){this.mirror.focus()},setOriginalCode:function(){this.mirror.originalContent=this.getCode();this.documentDurty=false},getCursorPosition:function(){var b=this.mirror.cursorPosition(),a=this.mirror.lineNumber(b.line),c=b.character;return"{line:"+a+", caracter:"+c+"}"},nthLine:function(a){return this.mirror.nthLine(a)}});Ext.reg("codemirror",Ext.ux.CodeMirror);Ext.ns("Ext.ux.grid");Ext.ux.grid.GridSummary=function(a){Ext.apply(this,a)};Ext.extend(Ext.ux.grid.GridSummary,Ext.util.Observable,{init:function(b){this.grid=b;this.cm=b.getColumnModel();this.view=b.getView();var a=this.view;a.onLayout=this.onLayout;a.afterMethod("render",this.refreshSummary,this);a.afterMethod("refresh",this.refreshSummary,this);a.afterMethod("syncScroll",this.syncSummaryScroll,this);a.afterMethod("onColumnWidthUpdated",this.doWidth,this);a.afterMethod("onAllColumnWidthsUpdated",this.doAllWidths,this);a.afterMethod("onColumnHiddenUpdated",this.doHidden,this);b.store.on({add:this.refreshSummary,remove:this.refreshSummary,clear:this.refreshSummary,update:this.refreshSummary,scope:this});if(!this.rowTpl){this.rowTpl=new Ext.Template('<div class="x-grid3-summary-row x-grid3-gridsummary-row-offset">','<table class="x-grid3-summary-table" border="0" cellspacing="0" cellpadding="0" style="{tstyle}">',"<tbody><tr>{cells}</tr></tbody>","</table>","</div>");this.rowTpl.disableFormats=true}this.rowTpl.compile();if(!this.cellTpl){this.cellTpl=new Ext.Template('<td class="x-grid3-col x-grid3-cell x-grid3-td-{id} {css}" style="{style}">','<div class="x-grid3-cell-inner x-grid3-col-{id}" unselectable="on" {attr}>{value}</div>',"</td>");this.cellTpl.disableFormats=true}this.cellTpl.compile()},calculate:function(c,l){var e={},k=l.config,f,b,g,d,a,h,m;for(f=0,h=k.length;f<h;f++){b=k[f];g=b.dataIndex;e[g]=0;if(b.summaryType){for(d=0,m=c.length;d<m;d++){a=c[d];e[g]=Ext.ux.grid.GridSummary.Calculations[b.summaryType](a.get(g),a,g,e,d)}}}return e},onLayout:function(a,b){if(Ext.type(b)!=="number"){return}if(!this.grid.getGridEl().hasClass("x-grid-hide-gridsummary")){this.scroller.setHeight(b-this.summary.getHeight())}},syncSummaryScroll:function(){var a=this.view.scroller.dom;this.view.summaryWrap.dom.scrollLeft=a.scrollLeft;this.view.summaryWrap.dom.scrollLeft=a.scrollLeft},doWidth:function(c,a,b){var d=this.view.summary.dom;d.firstChild.style.width=b;d.firstChild.rows[0].childNodes[c].style.width=a},doAllWidths:function(a,b){var e=this.view.summary.dom,f=a.length,d,c;e.firstChild.style.width=b;d=e.firstChild.rows[0].childNodes;for(c=0;c<f;c++){d[c].style.width=a[c]}},doHidden:function(b,d,a){var c=this.view.summary.dom,e=d?"none":"";c.firstChild.style.width=a;c.firstChild.rows[0].childNodes[b].style.display=e},renderSummary:function(d,h,l){h=h||this.view.getColumnData();var j=l.config,e=[],m=h.length-1,k,b,a,f,g;for(f=0,g=h.length;f<g;f++){k=h[f];b=j[f];a={};a.id=k.id;a.style=k.style;a.css=f===0?"x-grid3-cell-first ":(f===m?"x-grid3-cell-last ":"");if(b.summaryType||b.summaryRenderer){a.value=(b.summaryRenderer||k.renderer)(d.data[k.name],a,d)}else{a.value=""}if(a.value===undefined||a.value===""){a.value="&#160;"}e[e.length]=this.cellTpl.apply(a)}return this.rowTpl.apply({tstyle:"width:"+this.view.getTotalWidth()+";",cells:e.join("")})},refreshSummary:function(){var e=this.grid,h=e.store,d=this.view.getColumnData(),a=this.cm,b=h.getRange(),f=this.calculate(b,a),c=this.renderSummary({data:f},d,a);if(!this.view.summaryWrap){this.view.summaryWrap=Ext.DomHelper.insertAfter(this.view.scroller,{tag:"div",cls:"x-grid3-gridsummary-row-inner"},true)}this.view.summary=this.view.summaryWrap.update(c).first()},toggleSummary:function(b){var a=this.grid.getGridEl();if(a){if(b===undefined){b=a.hasClass("x-grid-hide-gridsummary")}a[b?"removeClass":"addClass"]("x-grid-hide-gridsummary");this.view.layout()}},getSummaryNode:function(){return this.view.summary}});Ext.reg("gridsummary",Ext.ux.grid.GridSummary);Ext.ux.grid.GridSummary.Calculations={sum:function(b,a,c,e,d){return e[c]+Ext.num(b,0)},count:function(b,a,c,e,d){return d+1},max:function(b,a,c,e,d){return Math.max(Ext.num(b,0),e[c])},min:function(b,a,c,e,d){return Math.min(Ext.num(b,0),e[c])},average:function(b,a,d,g,f){var c=g[d]+Ext.num(b,0),e=a.store.getCount();return f===e-1?(c/e):c}};Ext.ux.IFrameComponent=Ext.extend(Ext.BoxComponent,{onRender:function(b,a){this.el=b.createChild({tag:"iframe",id:this.id,frameBorder:0,src:this.url})}});Ext.namespace("Ext.ux");Ext.ux.NotificationMgr={positions:[]};Ext.ux.Notification=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{iconCls:this.iconCls||"x-icon-information",cls:"x-notification",width:250,autoHeight:true,draggable:false,bodyStyle:"text-align:center; padding: 10px;"});if(this.autoDestroy){this.task=new Ext.util.DelayedTask(this.hide,this)}else{this.closable=true}Ext.ux.Notification.superclass.initComponent.call(this)},setMessage:function(a){this.body.update(a)},setTitle:function(b,a){Ext.ux.Notification.superclass.setTitle.call(this,b,a||this.iconCls)},onRender:function(b,a){Ext.ux.Notification.superclass.onRender.call(this,b,a)},onDestroy:function(){Ext.ux.NotificationMgr.positions.remove(this.pos);Ext.ux.Notification.superclass.onDestroy.call(this)},cancelHiding:function(){this.addClass("fixed");if(this.autoDestroy){this.task.cancel()}},afterShow:function(){Ext.ux.Notification.superclass.afterShow.call(this);Ext.fly(this.body.dom).on("click",this.cancelHiding,this);if(this.autoDestroy){this.task.delay(this.hideDelay||5000)}},animShow:function(){this.pos=0;while(Ext.ux.NotificationMgr.positions.indexOf(this.pos)>-1){this.pos++}Ext.ux.NotificationMgr.positions.push(this.pos);this.setSize(200,100);this.el.alignTo(document,"br-br",[-20,-20-((this.getSize().height+10)*this.pos)]);this.el.slideIn("b",{duration:1,callback:this.afterShow,scope:this})},animHide:function(){Ext.ux.NotificationMgr.positions.remove(this.pos);this.el.shadow.hide();this.el.ghost("b",{duration:1,remove:false,callback:function(){Ext.ux.NotificationMgr.positions.remove(this.pos);this.destroy()}.createDelegate(this)})},focus:Ext.emptyFn});Ext.namespace("ui","ui.task");ui.task.AcceptPatchTask=function(a){Ext.apply(this,a);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}Ext.MessageBox.confirm(_("Confirm"),_("This action will accept this patch, send an email to his author, save the file and close this tab."),function(b){if(b==="yes"){Ext.getCmp("PP-PATCH-PANEL-btn-save-"+this.fid).disable();Ext.getCmp("PP-PATCH-FILE-"+this.fid).isModified=false;Ext.getCmp("PP-PATCH-PANEL-"+this.fid).setTitle(Ext.getCmp("PP-PATCH-PANEL-"+this.fid).originTitle);Ext.getCmp("PP-"+this.fid).setTitle(Ext.getCmp("PP-"+this.fid).originTitle);var c=Ext.MessageBox.wait(_("Saving data..."));XHR({scope:this,params:{task:"saveFile",filePath:this.fpath,fileName:this.fname,fileLang:"all",fileContent:Ext.getCmp("PP-PATCH-FILE-"+this.fid).getCode()},success:function(d){var f=Ext.util.JSON.decode(d.responseText),e=ui.component.PendingPatchGrid.getInstance();ui.component.PendingCommitGrid.getInstance().addRecord(f.id,this.fpath,this.fname,"update");e.store.remove(this.storeRecord);e.store.fireEvent("add",e.store);XHR({scope:this,params:{task:"afterPatchAccept",PatchUniqID:this.fuid}});c.hide();Ext.getCmp("main-panel").remove("PP-"+this.fid)},failure:function(d){c.hide()}})}},this)};Ext.namespace("ui","ui.task","ui.task._CheckBuildTask");ui.task._CheckBuildTask.display=function(){XHR({params:{task:"getLogFile",file:"log_check_build_"+phpDoc.userLang},success:function(a){var b=Ext.util.JSON.decode(a.responseText);Ext.getBody().unmask();ui.task.PingTask.getInstance().delay(30000);if(Ext.getCmp("main-panel").findById("check_build_panel_"+phpDoc.userLang)){Ext.getCmp("main-panel").remove("check_build_panel_"+phpDoc.userLang)}Ext.getCmp("main-panel").add({xtype:"panel",id:"check_build_panel_"+phpDoc.userLang,title:String.format(_("Check Build Result for {0}"),Ext.util.Format.uppercase(phpDoc.userLang)),tabTip:String.format(_("Check Build Result for the documentation {0}"),Ext.util.Format.uppercase(phpDoc.userLang)),closable:true,autoScroll:true,iconCls:"iconCheckBuild",html:'<div class="check-build-content">'+b.mess+"</div>"});Ext.getCmp("main-panel").setActiveTab("check_build_panel_"+phpDoc.userLang)}})};ui.task._CheckBuildTask.poll=new Ext.util.DelayedTask(function(){XHR({params:{task:"checkLockFile",lockFile:"lock_check_build_"+phpDoc.userLang},success:function(a){ui.task._CheckBuildTask.poll.delay(5000)},failure:function(a){var c=Ext.util.JSON.decode(a.responseText),b;if(c&&c.success===false){b=new ui.task._CheckBuildTask.display()}else{ui.task._CheckBuildTask.poll.delay(5000)}}})});ui.task.CheckBuildTask=function(a){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait until the build is checked..."));ui.task.PingTask.getInstance().cancel();XHR({params:{task:"checkBuild",xmlDetails:Ext.getCmp("option-xml-details").checked},success:function(b){var c=new ui.task._CheckBuildTask.display()},failure:function(b){var c=Ext.util.JSON.decode(b.responseText);if(c&&c.success===false){ui.task.PingTask.getInstance().delay(30000);Ext.getBody().unmask();phpDoc.winForbidden()}else{ui.task._CheckBuildTask.poll.delay(5000)}}})};Ext.namespace("ui","ui.task","ui.task._CheckEntitiesTask");ui.task._CheckEntitiesTask.display=function(){BtnViewResult=Ext.getCmp("btn-check-entities-view-last-result");Ext.getBody().unmask();ui.task.PingTask.getInstance().delay(30000);if(Ext.getCmp("main-panel").findById("tab-check-entities")){Ext.getCmp("main-panel").remove("tab-check-entities")}BtnViewResult.handler.call(BtnViewResult.scope||BtnViewResult,BtnViewResult)};ui.task._CheckEntitiesTask.poll=new Ext.util.DelayedTask(function(){XHR({params:{task:"checkLockFile",lockFile:"lock_check_entities"},success:function(a){ui.task._CheckEntitiesTask.poll.delay(5000)},failure:function(a){var c=Ext.util.JSON.decode(a.responseText),b;if(c&&c.success===false){b=new ui.task._CheckEntitiesTask.display()}else{ui.task._CheckEntitiesTask.poll.delay(5000)}}})});ui.task.CheckEntitiesTask=function(a){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait until entities are checked..."));ui.task.PingTask.getInstance().cancel();XHR({params:{task:"checkEntities"},success:function(b){var c=new ui.task._CheckEntitiesTask.display()},failure:function(b){var c=Ext.util.JSON.decode(b.responseText);if(c&&c.success===false){ui.task.PingTask.getInstance().delay(30000);Ext.getBody().unmask();phpDoc.winForbidden()}else{ui.task._CheckEntitiesTask.poll.delay(5000)}}})};Ext.namespace("ui","ui.task");ui.task.CheckFileTask=function(a){Ext.apply(this,a);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Checking for error. Please, wait..."));XHR({scope:this,params:{task:"checkFileError",FilePath:this.fpath,FileName:this.fname,FileLang:this.lang,FileContent:Ext.getCmp(this.prefix+"-"+this.ftype+"-FILE-"+this.fid).getCode()},success:function(b){Ext.getBody().unmask();var d=Ext.util.JSON.decode(b.responseText),c;if(d.error&&d.error_first!=="-No error-"){Ext.getCmp("main-panel").add({id:"FE-help-"+this.fid,title:"Error in "+this.fname,iconCls:"iconFilesError",closable:true,autoScroll:true,autoLoad:"./error?dir="+this.fpath+"&file="+this.fname});Ext.getCmp("main-panel").setActiveTab("FE-help-"+this.fid)}else{Ext.MessageBox.show({title:_("Check for errors"),msg:_("There is no error."),buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.INFO})}c=new ui.task.SaveLangFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,storeRecord:this.storeRecord});if(this.prefix==="FE"){Ext.getCmp("FE-error-desc-"+this.fid).body.updateManager.refresh()}ui.component.ErrorFileGrid.getInstance().store.reload()}})};Ext.namespace("ui","ui.task");ui.task.ClearLocalChangeTask=function(a){Ext.apply(this,a);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}Ext.MessageBox.confirm(_("Confirm"),_("This action will clear your local modification and take back this file from his original stats.<br/>You need confirm."),function(b){if(b==="yes"){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait..."));if(Ext.getCmp("main-panel").findById("FNU-"+Ext.util.md5("FNU-"+this.fpath+this.fname))){Ext.getCmp("main-panel").remove("FNU-"+Ext.util.md5("FNU-"+this.fpath+this.fname))}XHR({scope:this,params:{task:"clearLocalChange",FileType:this.ftype,FilePath:this.fpath,FileName:this.fname},success:function(d){var c=ui.component.PendingCommitGrid.getInstance(),f=Ext.util.JSON.decode(d.responseText);c.store.remove(this.storeRecord);c.store.fireEvent("add",c.store);if(f.lang==="en"&&this.ftype==="update"){ui.component.StaleFileGrid.getInstance().store.each(function(g){if((g.data.path)==="/"+f.path&&g.data.name===f.name){g.set("needCommitEN",false);g.set("en_revision",f.revision);g.commit()}},this);var e=ui.component.RepositoryTree.getInstance().getNodeById("/"+this.fpath+this.fname);if(e){e.getUI().removeClass("modified")}Ext.getBody().unmask();return}ui.component.NotInENGrid.getInstance().store.each(function(g){if((phpDoc.userLang+g.data.path)===this.fpath&&g.data.name===this.fname){g.set("needcommit",false)}},this);ui.component.PendingReviewGrid.getInstance().store.each(function(g){if((phpDoc.userLang+g.data.path)===this.fpath&&g.data.name===this.fname){g.set("needcommit",false)}},this);ui.component.StaleFileGrid.getInstance().store.each(function(g){if((phpDoc.userLang+g.data.path)===this.fpath&&g.data.name===this.fname){g.set("needCommitLang",false);g.set("revision",f.revision);g.set("maintainer",f.maintainer);g.commit()}},this);ui.component.ErrorFileGrid.getInstance().store.each(function(g){if((phpDoc.userLang+g.data.path)===this.fpath&&g.data.name===this.fname){g.set("needcommit",false)}},this);var e=ui.component.RepositoryTree.getInstance().getNodeById("/"+this.fpath+this.fname);if(e){e.getUI().removeClass("modified")}Ext.getBody().unmask()},failure:function(c){Ext.getBody().unmask();phpDoc.winForbidden()}})}},this)};Ext.namespace("ui","ui.task");ui.task.GetFileTask=function(b){Ext.apply(this,b);var a=this.prefix+"-"+this.ftype,c=(this.ftype=="NotInEN")?true:false;Ext.get(a+"-PANEL-"+this.fid).mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Loading..."));XHR({scope:this,params:{task:"getFile",FilePath:this.fpath,FileName:this.fname,readOriginal:c},success:function(d){var h=Ext.util.JSON.decode(d.responseText),g="http://"+window.location.host+":"+window.location.port+window.location.pathname+"?perm=/"+this.fpath.split("/")[0]+"/"+h.xmlid.split("|")[0]+".php",e='&nbsp;<a href="'+g+'" target="_blank">permlink</a>',f=Ext.getCmp(a+"-PANEL-"+this.fid);if(this.prefix==="PP"&&this.ftype==="ORIGIN"){f.permlink=""}else{f.permlink=(h.xmlid!="NULL")?e:"";f.setTitle(f.originTitle+f.permlink)}Ext.getCmp(a+"-FILE-"+this.fid).setCode(h.content);Ext.get(a+"-PANEL-"+this.fid).unmask();if(h.warn_tab){Ext.MessageBox.show({title:"Warning",msg:String.format(_("The file <b> {0}</b> contains some tab caracters.<br>The editor have replace it with space caracters."),this.fpath+this.fname),buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});Ext.getCmp(a+"-FILE-"+this.fid).manageCodeChange(a+"-FILE-"+this.fid)}},callback:function(){if(phpDoc.filePendingOpen[0]){phpDoc.filePendingOpen.shift();if(phpDoc.filePendingOpen[0]){if(phpDoc.filePendingOpen[0].fpath){ui.component.RepositoryTree.getInstance().openFile(phpDoc.filePendingOpen[0].fpath,phpDoc.filePendingOpen[0].fname)}}}}})};Ext.namespace("ui","ui.task");ui.task.LoadConfigTask=function(a){Ext.apply(this,a);XHR({params:{task:"getConf"},success:function(b){var c=Ext.decode(b.responseText);phpDoc.userLogin=c.mess.userLogin;phpDoc.userLang=c.mess.userLang;phpDoc.userConf=c.mess.userConf;Ext.get("appTheme").dom.href=phpDoc.userConf.theme;phpDoc.drawInterface()}})};Ext.namespace("ui","ui.task");ui.task.MarkDeleteTask=function(a){Ext.apply(this,a);Ext.MessageBox.confirm(_("Confirm"),_("This action will mark this file as need deleted.<br/><br/>You need commit this change to take it effect.<br/><br/>Please, confirm this action."),function(b){if(b==="yes"){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait..."));XHR({scope:this,params:{task:"markAsNeedDelete",FilePath:phpDoc.userLang+this.fpath,FileName:this.fname},success:function(c){var d=Ext.util.JSON.decode(c.responseText);Ext.getBody().unmask();ui.component.PendingCommitGrid.getInstance().addRecord(d.id,phpDoc.userLang+this.fpath,this.fname,"delete");this.storeRecord.set("needcommit",true)}})}},this)};Ext.namespace("ui","ui.task","ui.task._PingTask");ui.task.PingTask=function(){this.task=new Ext.util.DelayedTask(function(){XHR({params:{task:"ping"},success:function(a){var c=Ext.util.JSON.decode(a.responseText);if(c.ping!=="pong"){window.location.href="./"}else{if(c.lastupdate==="in_progress"){Ext.getDom("lastUpdateTime").innerHTML=_("update in progress...")}else{var b=Date.parseDate(c.lastupdate,"Y-m-d H:i:s");Ext.getDom("lastUpdateTime").innerHTML=b.format(_("Y-m-d, H:i"))}}},failure:function(){window.location.href="./"}});this.task.delay(30000)},this)};ui.task.PingTask.prototype.delay=function(b,d,c,a){this.task.delay(b,d,c,a)};ui.task.PingTask.prototype.cancel=function(){this.task.cancel()};ui.task._PingTask.instance=null;ui.task.PingTask.getInstance=function(){if(!ui.task._PingTask.instance){ui.task._PingTask.instance=new ui.task.PingTask()}return ui.task._PingTask.instance};Ext.namespace("ui","ui.task");ui.task.RejectPatchTask=function(a){Ext.apply(this,a);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}Ext.MessageBox.confirm(_("Confirm"),_("This action will <b>reject</b> this patch, send an email to his author and close this tab."),function(b){if(b==="yes"){var c=Ext.MessageBox.wait(_("Please, wait..."));XHR({scope:this,params:{task:"afterPatchReject",PatchUniqID:this.fuid},success:function(d){var e=ui.component.PendingPatchGrid.getInstance();e.store.remove(this.storeRecord);e.store.fireEvent("add",e.store);Ext.getCmp("main-panel").remove("PP-"+this.fid);c.hide()},failure:function(d){c.hide();phpDoc.winForbidden()}})}},this)};Ext.namespace("ui","ui.task");ui.task.SaveENFileTask=function(b){Ext.apply(this,b);var a=this.prefix+"-"+this.ftype,c=Ext.MessageBox.wait(_("Saving data..."));if(phpDoc.userLogin==="anonymous"){c.hide();phpDoc.winForbidden();return}XHR({scope:this,params:{task:"saveFile",filePath:this.fpath,fileName:this.fname,fileLang:"en",fileContent:Ext.getCmp(this.prefix+"-"+this.ftype+"-FILE-"+this.fid).getCode()},success:function(d){var e=Ext.util.JSON.decode(d.responseText);if(this.prefix==="FNU"){this.storeRecord.set("en_revision",e.revision);this.storeRecord.set("needCommitEN",true);this.storeRecord.commit()}if(this.prefix==="FE"){this.storeRecord.set("needcommit",true)}if(this.prefix==="FNR"){this.storeRecord.set("needcommit",true)}if(this.prefix==="AF"){this.storeRecord.getUI().addClass("modified")}ui.component.PendingCommitGrid.getInstance().addRecord(e.id,"en"+this.fpath,this.fname,"update");Ext.getCmp(a+"-PANEL-btn-save-"+this.fid).disable();Ext.getCmp(a+"-FILE-"+this.fid).isModified=false;Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle);if(this.ftype==="ALL"||!Ext.getCmp(this.prefix+"-LANG-FILE-"+this.fid).isModified){Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle)}c.hide();phpDoc.notify("info",_("Document saved"),String.format(_("Document <br><br><b>{0}</b><br><br> was saved successfully !"),"en"+this.fpath+this.fname))},failure:function(d){var e=Ext.util.JSON.decode(d.responseText);c.hide();if(e.type){phpDoc.winForbidden(e.type)}else{phpDoc.winForbidden()}}})};Ext.namespace("ui","ui.task");ui.task.SaveLangFileTask=function(b){Ext.apply(this,b);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}var a=this.prefix+"-"+this.ftype,c=Ext.MessageBox.wait(_("Saving data..."));XHR({scope:this,params:{task:"saveFile",filePath:this.fpath,fileName:this.fname,fileLang:this.lang,fileContent:Ext.getCmp(this.prefix+"-"+this.ftype+"-FILE-"+this.fid).getCode()},success:function(d){var e=Ext.util.JSON.decode(d.responseText);if(this.prefix==="FE"){this.storeRecord.set("needcommit",true);this.storeRecord.set("maintainer",e.maintainer);this.storeRecord.commit()}if(this.prefix==="FNU"){this.storeRecord.set("revision",e.en_revision);this.storeRecord.set("needCommitLang",true);this.storeRecord.set("maintainer",e.maintainer);this.storeRecord.commit()}if(this.prefix==="FNR"){this.storeRecord.set("needcommit",true);this.storeRecord.set("maintainer",e.maintainer);this.storeRecord.set("reviewed",e.reviewed);this.storeRecord.commit()}if(this.prefix==="AF"){this.storeRecord.getUI().addClass("modified")}ui.component.PendingCommitGrid.getInstance().addRecord(e.id,this.lang+this.fpath,this.fname,"update");Ext.getCmp(a+"-PANEL-btn-save-"+this.fid).disable();Ext.getCmp(a+"-FILE-"+this.fid).isModified=false;Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle);if(this.ftype==="ALL"||!Ext.getCmp(this.prefix+"-EN-FILE-"+this.fid).isModified){Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle)}c.hide();phpDoc.notify("info",_("Document saved"),String.format(_("Document <br><br><b>{0}</b><br><br> was saved successfully !"),this.lang+this.fpath+this.fname))},failure:function(d){var e=Ext.util.JSON.decode(d.responseText);c.hide();if(e.type){phpDoc.winForbidden(e.type)}else{phpDoc.winForbidden()}}})};Ext.namespace("ui","ui.task");ui.task.SavePatchTask=function(b){Ext.apply(this,b);var a=this.prefix+"-"+this.ftype,c=Ext.MessageBox.wait(_("Saving data as a patch..."));Ext.getCmp(a+"-PANEL-btn-saveas-"+this.fid).disable();Ext.getCmp(a+"-FILE-"+this.fid).isModified=false;Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle);if((this.prefix==="AF")||(this.lang==="en"&&Ext.getCmp(this.prefix+"-LANG-FILE-"+this.fid).isModified===false)||(this.lang!=="en"&&Ext.getCmp(this.prefix+"-EN-FILE-"+this.fid).isModified===false)){Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle)}XHR({scope:this,params:{task:"saveFile",filePath:this.fpath,fileName:this.fname,fileLang:this.lang,fileContent:Ext.getCmp(a+"-FILE-"+this.fid).getCode(),type:"patch",emailAlert:this.email},success:function(d){var f=Ext.util.JSON.decode(d.responseText),e=ui.component.PendingPatchGrid.getInstance();e.store.insert(0,new e.store.recordType({id:Ext.id("",""),path:this.lang+this.fpath,name:this.fname,by:phpDoc.userLogin,uniqID:f.uniqId,date:new Date()}));c.hide();phpDoc.notify("info",_("Patch saved"),_("Patch saved successfully !"))}})};Ext.namespace("ui","ui.task");ui.task.SaveTransFileTask=function(b){Ext.apply(this,b);if(phpDoc.userLogin==="anonymous"){phpDoc.winForbidden();return}var a=this.prefix+"-"+this.ftype,c=Ext.MessageBox.wait(_("Saving data..."));XHR({scope:this,params:{task:"saveFile",type:"trans",filePath:this.fpath,fileName:this.fname,fileLang:this.lang,fileContent:Ext.getCmp(this.prefix+"-"+this.ftype+"-FILE-"+this.fid).getCode()},success:function(d){var e=Ext.util.JSON.decode(d.responseText);this.storeRecord.set("needcommit",true);this.storeRecord.commit();ui.component.PendingCommitGrid.getInstance().addRecord(e.id,this.lang+this.fpath,this.fname,"new");Ext.getCmp(a+"-PANEL-btn-save-"+this.fid).disable();Ext.getCmp(a+"-FILE-"+this.fid).isModified=false;Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle);Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle);c.hide();phpDoc.notify("info",_("Document saved"),String.format(_("Document <br><br><b>{0}</b><br><br> was saved successfully !"),this.lang+this.fpath+this.fname))},failure:function(d){c.hide();phpDoc.winForbidden()}})};Ext.namespace("ui","ui.task","ui.task._SystemUpdateTask");ui.task._SystemUpdateTask.refresh_ui=function(){Ext.get("wizard-step-3").replaceClass("wizard-step-before","wizard-step-working");phpDoc.reloadAllStore();Ext.get("wizard-step-3").replaceClass("wizard-step-working","wizard-step-done");Ext.getCmp("btn-start-refresh").setIconClass("iconFinishRefresh");Ext.getCmp("btn-start-refresh").setText(_("Finish !"));Ext.getCmp("btn-start-refresh").setHandler(function(){Ext.getCmp("sys-update-win").close()});Ext.getCmp("btn-start-refresh").enable();ui.task.PingTask.getInstance().delay(30000);Ext.getCmp("sys-update-win").tools.close.setVisible(true)};ui.task._SystemUpdateTask.poll_apply_tool=new Ext.util.DelayedTask(function(){XHR({params:{task:"checkLockFile",lockFile:"lock_apply_tools"},success:function(a){ui.task._SystemUpdateTask.poll_apply_tool.delay(5000)},failure:function(a){var c=Ext.util.JSON.decode(a.responseText),b;if(c&&c.success===false){Ext.get("wizard-step-2").replaceClass("wizard-step-working","wizard-step-done");b=new ui.task._SystemUpdateTask.refresh_ui()}else{ui.task._SystemUpdateTask.poll_apply_tool.delay(5000)}}})});ui.task._SystemUpdateTask.apply_tool=function(){Ext.get("wizard-step-2").replaceClass("wizard-step-before","wizard-step-working");XHR({params:{task:"applyTools"},success:function(a){var b;Ext.get("wizard-step-2").replaceClass("wizard-step-working","wizard-step-done");b=new ui.task._SystemUpdateTask.refresh_ui()},failure:function(a){ui.task._SystemUpdateTask.poll_apply_tool.delay(5000)}})};ui.task._SystemUpdateTask.vcs_poll=new Ext.util.DelayedTask(function(){XHR({params:{task:"checkLockFile",lockFile:"lock_update_repository"},success:function(a){ui.task._SystemUpdateTask.vcs_poll.delay(5000)},failure:function(a){var c=Ext.util.JSON.decode(a.responseText),b;if(c&&c.success===false){Ext.get("wizard-step-1").replaceClass("wizard-step-working","wizard-step-done");Ext.get("wizard-step-1.1").replaceClass("wizard-show","wizard-wait");b=new ui.task._SystemUpdateTask.apply_tool()}else{ui.task._SystemUpdateTask.vcs_poll.delay(5000)}}})});ui.task.SystemUpdateTask=function(){ui.task.PingTask.getInstance().cancel();Ext.get("wizard-step-1").replaceClass("wizard-step-before","wizard-step-working");Ext.get("wizard-step-1.1").replaceClass("wizard-wait","wizard-show");XHR({params:{task:"updateRepository"},success:function(a){var b;Ext.get("wizard-step-1").replaceClass("wizard-step-working","wizard-step-done");Ext.get("wizard-step-1.1").replaceClass("wizard-show","wizard-wait");b=new ui.task._SystemUpdateTask.apply_tool()},failure:function(a){var b=Ext.util.JSON.decode(a.responseText);if(b&&b.success===false){Ext.getCmp("sys-update-win").close();phpDoc.winForbidden()}else{ui.task._SystemUpdateTask.vcs_poll.delay(5000)}}})};Ext.namespace("ui","ui.task");ui.task.UpdateConfTask=function(a){Ext.apply(this,a);XHR({scope:this,params:{task:"confUpdate",item:this.item,value:this.value},success:function(b){phpDoc.userConf[this.item]=this.value;if(this.item=="errorSkipNbLiteralTag"){ui.component.ErrorFileGrid.getInstance().store.reload()}phpDoc.notify("info",_("Option saved"),_("Option has been saved successfully !"))}})};Ext.namespace("ui","ui.task","ui.task._VCSCommitTask");ui.task._VCSCommitTask.getCommitResponse=function(){XHR({params:{task:"getCommitResponse"},success:function(a){var b=Ext.util.JSON.decode(a.responseText);ui.task._VCSCommitTask.afterCommit(b.mess)}})};ui.task._VCSCommitTask.poll=new Ext.util.DelayedTask(function(){XHR({params:{task:"checkLockFile",lockFile:"lock_"+phpDoc.userLogin+"_commit"},success:function(a){ui.task._VCSCommitTask.poll.delay(5000)},failure:function(a){var c=Ext.util.JSON.decode(a.responseText),b;if(c&&c.success===false){b=new ui.task._VCSCommitTask.getCommitResponse()}else{ui.task._VCSCommitTask.poll.delay(5000)}}})});ui.task._VCSCommitTask.afterCommit=function(b){var b,a;Ext.getBody().unmask();ui.task.PingTask.getInstance().delay(30000);a=new Ext.Window({title:_("Status"),width:450,height:350,resizable:false,modal:true,autoScroll:true,bodyStyle:"background-color: white; padding: 5px;",html:b.join("<br/>"),buttons:[{text:_("Close"),handler:function(){this.ownerCt.ownerCt.close()}}]}).show();phpDoc.reloadAllStore()};ui.task._VCSCommitTask.commit=function(f){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait until commit..."));var a=[],e,d,c,b;for(b=0;b<f.length;b=b+1){e=Ext.getCmp("commit-tree-panel").getNodeById(f[b].id);a.push(e.attributes.FileDBID)}d=Ext.getCmp("form-commit-message-log").getValue();d=Ext.util.Format.trim(d);if(Ext.isEmpty(d)){Ext.getBody().unmask();Ext.getCmp("form-commit-message-log").markInvalid(_("The log message is required."));Ext.MessageBox.alert(_("Error"),_("The log message is required."));return}Ext.getCmp("winVCSCommit").close();ui.task.PingTask.getInstance().cancel();XHR({params:{task:"vcsCommit",nodes:Ext.util.JSON.encode(a),logMessage:d},success:function(g){var h=Ext.util.JSON.decode(g.responseText);ui.task._VCSCommitTask.afterCommit(h.mess)},failure:function(g){var h=Ext.util.JSON.decode(g.responseText);if(h&&h.success===false){ui.task.PingTask.getInstance().delay(30000);Ext.getBody().unmask();phpDoc.winForbidden()}else{ui.task._VCSCommitTask.poll.delay(5000)}}})};ui.task.VCSCommitTask=function(){if(phpDoc.userLogin==="anonymous"){Ext.getCmp("winVCSCommit").close();phpDoc.winForbidden();return}var a=Ext.getCmp("commit-tree-panel").getChecked(),g=[],k,m,b,d,c,l,h="",f;for(f=0;f<a.length;++f){k=a[f].attributes;m="FE-"+Ext.util.md5("FE-"+k.FilePath+k.FileName);b="FNU-"+Ext.util.md5("FNU-"+k.FilePath+k.FileName);d="FNR-"+Ext.util.md5("FNR-"+k.FilePath+k.FileName);c="FNT-"+Ext.util.md5("FNT-"+k.FilePath+k.FileName);if(Ext.getCmp("main-panel").findById(m)||Ext.getCmp("main-panel").findById(b)||Ext.getCmp("main-panel").findById(d)||Ext.getCmp("main-panel").findById(c)){if(Ext.getCmp("main-panel").findById(m)){l=m}if(Ext.getCmp("main-panel").findById(b)){l=b}if(Ext.getCmp("main-panel").findById(d)){l=d}if(Ext.getCmp("main-panel").findById(c)){l=c}g.push([l,k.FileName])}}if(g.length>0){for(var e=0;e<g.length;++e){h+=g[e][1]+"<br/>"}Ext.MessageBox.show({title:"Warning",icon:Ext.MessageBox.INFO,buttons:Ext.MessageBox.YESNOCANCEL,msg:(g.length>1)?String.format(_("There is {0} files to close before commit.<br><br>{1}<br/><br/>Would you like I close it for you ?"),g.length,h):String.format(_("There is {0} file to close before commit.<br><br>{1}<br/><br/>Would you like I close it for you ?"),g.length,h),fn:function(n){if(n==="yes"){for(var i=0;i<g.length;++i){Ext.getCmp("main-panel").remove(g[i][0])}ui.task._VCSCommitTask.commit(a)}}})}else{ui.task._VCSCommitTask.commit(a)}};Ext.namespace("ui","ui.component");ui.component.About=Ext.extend(Ext.Window,{id:"win-about",iconCls:"iconHelp",layout:"fit",width:515,height:320,modal:true,plain:true,bodyStyle:"color:#000",buttons:[{text:_("Close"),handler:function(){Ext.getCmp("win-about").close()}}],initComponent:function(){Ext.apply(this,{title:String.format(_("About {0}"),phpDoc.appName),items:{xtype:"tabpanel",activeTab:0,autoTabs:true,border:false,defaults:{autoScroll:true},items:[{title:_("About"),html:'<div id="phd-oe-about"><img src="themes/img/logo.png" alt="'+phpDoc.appName+'" /></div><div id="phd-oe-about-info">'+phpDoc.appName+" ver "+phpDoc.appVer+"<br/>UI: "+phpDoc.uiRevision+"<br/> Copyright &copy; 2008-2009 The PHP Group<br/>"+_("Author:")+' <a href="mailto:yannick@php.net">Yannick Torr&egrave;s</a> '+_('and <a href="http://svn.php.net/viewvc/web/doc-editor/" target="_blank">others</a>')+"</div>"},{title:_("Credits"),bodyStyle:"padding:15px",html:'<div id="phd-oe-credit"><ul><li><a href="http://extjs.com" target="_blank">ExtJs Team</a><div class="phd-oe-credit-info">'+_("Javascript FrameWork")+'</div></li><li><a href="http://marijn.haverbeke.nl/codemirror/" target="_blank">CodeMirror</a><div class="phd-oe-credit-info">'+_("Code editor")+'</div></li><li><a href="http://famfamfam.com" target="_blank">famfamfam.com</a><div class="phd-oe-credit-info">'+_("Icon pack")+"</div></li></ul></div>"},{title:_("License"),autoLoad:{url:"./LICENSE"}}]}});ui.component.About.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._BuildStatus");ui.component._BuildStatus.display=function(a){Ext.apply(this,a);if(Ext.getCmp("main-panel").findById("last_failed_build_"+this.lang)){Ext.getCmp("main-panel").remove("last_failed_build_"+this.lang)}Ext.getCmp("main-panel").add({xtype:"panel",id:"last_failed_build_"+this.lang,title:String.format(_("Last failed build for {0}"),Ext.util.Format.uppercase(this.lang)),tabTip:String.format(_("Last failed build for the documentation {0}"),Ext.util.Format.uppercase(this.lang)),closable:true,autoScroll:true,iconCls:"iconCheckBuild",html:'<div class="check-build-content" id="check-build-content"></div>'});Ext.getCmp("main-panel").setActiveTab("last_failed_build_"+this.lang);Ext.getCmp("main-panel").el.mask(_("Please, wait..."));XHR({scope:this,params:{task:"getFailedBuildData",idFailedBuild:this.idFailedBuild},success:function(b){var c=Ext.decode(b.responseText),d=c.mess.join("<br/>");if(c.state==="truncate"){Ext.get("check-build-content").dom.innerHTML=d+'<div style="text-align: center; margin: 20px 0 20px 0" class="x-toolbar">'+_("This log is too large and have been truncated. Use the following button to download the full content of it.")+'<div id="check-build-content-download-btn"></div></div>';new Ext.Button({scope:this,text:_("Download the full content of this log"),renderTo:"check-build-content-download-btn",style:{margin:"auto"},handler:function(){window.location.href="./do/downloadFailedBuildLog?idFailedBuild="+this.idFailedBuild}})}else{Ext.get("check-build-content").dom.innerHTML=d}Ext.getCmp("main-panel").el.unmask()}})};ui.component._BuildStatus.ds=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getFailedBuild"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"lang",mapping:"lang"},{name:"date",mapping:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]))});ui.component._BuildStatus.ds.setDefaultSort("date","desc");ui.component._BuildStatus.rendererLanguage=function(a){return'<div><div class="flags flag-'+a+'" style="float: left;"></div><div style="padding-left: 24px">'+a+"</div></div>"};ui.component._BuildStatus.columns=[{id:"date",header:_("Date"),sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))},{header:_("Language"),width:45,sortable:true,dataIndex:"lang",renderer:ui.component._BuildStatus.rendererLanguage}];ui.component._BuildStatus.menu=Ext.extend(Ext.menu.Menu,{setRowIndex:function(a){this.rowIndex=a},initComponent:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("View in a new Tab")+"</b>",iconCls:"iconOpenInTab",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIndex,this.event)}}]});ui.component._BuildStatus.menu.superclass.initComponent.call(this)}});ui.component.BuildStatus=Ext.extend(Ext.grid.GridPanel,{loadMask:true,bodyBorder:false,autoExpandColumn:"date",store:ui.component._BuildStatus.ds,columns:ui.component._BuildStatus.columns,view:new Ext.grid.GridView({forceFit:true}),listeners:{render:function(a){this.store.load.defer(20,this.store)}},onRowdblclick:function(b,f,d){var c=this.store.getAt(f),a=new ui.component._BuildStatus.display({idFailedBuild:c.id,lang:c.data.lang})},onRowContextMenu:function(a,c,b){if(!this.menu){this.menu=new ui.component._BuildStatus.menu({grid:a,rowIdx:"",event:b})}b.stopEvent();this.getSelectionModel().selectRow(c);this.menu.setRowIndex(c);this.menu.showAt(b.getXY())},initComponent:function(a){ui.component.BuildStatus.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowdblclick",this.onRowdblclick,this);this.on("rowcontextmenu",this.onRowContextMenu,this)}});Ext.namespace("ui","ui.component");ui.component.CheckBuildPrompt=Ext.extend(Ext.Window,{title:_("Check Build"),iconCls:"iconCheckBuild",layout:"form",width:350,height:200,resizable:false,modal:true,bodyStyle:"padding:5px 5px 0",labelAlign:"top",buttons:[{id:"win-check-build-btn-submit",text:_("Go !"),handler:function(){var a=new ui.task.CheckBuildTask();this.ownerCt.close()}}],initComponent:function(){Ext.apply(this,{items:[{xtype:"panel",modal:false,baseCls:"x-plain",bodyStyle:"padding:5px 5px 0",html:_("You're about to check the build via this command:")+"<br/><br/>/usr/bin/php configure.php --with-lang="+phpDoc.userLang+'<span id="option-xml-details-span" style="color: red; visibility: hidden;"> --enable-xml-details</span><br/><div id="option-xml-details-div" style="text-align: center; color: red; visibility: hidden;">'+_("<b>WARNING !</b><br/> This option use a lot of server ressource. If you don't know what are the consequence, please, don't use it.")+"</div>"},{xtype:"checkbox",id:"option-xml-details",name:"option-xml-details",checked:false,hideLabel:true,boxLabel:_("Enable detailed XML error messages"),listeners:{check:function(b,a){Ext.get("option-xml-details-span").dom.style.visibility=(a)?"visible":"hidden";Ext.get("option-xml-details-div").dom.style.visibility=(a)?"visible":"hidden"}}}]});ui.component.CheckBuildPrompt.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._CheckDoc");ui.component._CheckDoc.ds=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getCheckDocData"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"extension",mapping:"extension"},{name:"check_oldstyle",mapping:"check_oldstyle",type:"int"},{name:"check_undoc",mapping:"check_undoc",type:"int"},{name:"check_roleerror",mapping:"check_roleerror",type:"int"},{name:"check_badorder",mapping:"check_badorder",type:"int"},{name:"check_noseealso",mapping:"check_noseealso",type:"int"},{name:"check_noreturnvalues",mapping:"check_noreturnvalues",type:"int"},{name:"check_noparameters",mapping:"check_noparameters",type:"int"},{name:"check_noexamples",mapping:"check_noexamples",type:"int"},{name:"check_noerrors",mapping:"check_noerrors",type:"int"}]))});ui.component._CheckDoc.ds.setDefaultSort("extension","asc");ui.component._CheckDoc.renderer=function(b,a){if(b>0){a.css="check_doc_cell";a.attr="ext:qtip=\"<img src='themes/img/help.png' style='vertical-align: middle;' /> "+_("Double-click the cell to open the file selection")+'"';return b}else{return}};ui.component._CheckDoc.columns=[new Ext.grid.RowNumberer(),{id:"extension",header:_("Extension"),sortable:true,dataIndex:"extension"},{header:_("Not documented"),width:45,sortable:true,dataIndex:"check_undoc",renderer:ui.component._CheckDoc.renderer},{header:_("Old style"),width:45,sortable:true,dataIndex:"check_oldstyle",renderer:ui.component._CheckDoc.renderer},{header:_("Bad refsect1 order"),width:45,sortable:true,dataIndex:"check_badorder",renderer:ui.component._CheckDoc.renderer},{header:_("No parameters"),width:45,sortable:true,dataIndex:"check_noparameters",renderer:ui.component._CheckDoc.renderer},{header:_("No return values"),width:45,sortable:true,dataIndex:"check_noreturnvalues",renderer:ui.component._CheckDoc.renderer},{header:_("No examples"),width:45,sortable:true,dataIndex:"check_noexamples",renderer:ui.component._CheckDoc.renderer},{header:_("No errors section"),width:45,sortable:true,dataIndex:"check_noerrors",renderer:ui.component._CheckDoc.renderer},{header:_("No see also"),width:45,sortable:true,dataIndex:"check_noseealso",renderer:ui.component._CheckDoc.renderer},{header:_("Refsect1 role error"),width:45,sortable:true,dataIndex:"check_roleerror",renderer:ui.component._CheckDoc.renderer}];ui.component._CheckDoc.fs=new Ext.data.SimpleStore({fields:[{name:"id"},{name:"file"}]});ui.component._CheckDoc.FileGrid=Ext.extend(Ext.grid.GridPanel,{id:"check-doc-file-grid",store:ui.component._CheckDoc.fs,loadMask:true,bodyBorder:false,autoExpandColumn:"file",sm:new Ext.grid.RowSelectionModel({}),columns:[new Ext.grid.RowNumberer(),{id:"file",header:_("Files"),sortable:true,dataIndex:"file"}],onRowClick:function(a,c,b){Ext.getCmp("check-doc-btn-open-selected-files").enable()},onRowContextMenu:function(a,c,b){b.stopEvent();a.getSelectionModel().selectRow(c)},onRowDblClick:function(a,c,b){ui.component.RepositoryTree.getInstance().openFile("en"+a.fpath,a.store.getAt(c).data.file);Ext.getCmp("check-doc-file-win").close()},initComponent:function(a){ui.component._CheckDoc.FileGrid.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowcontextmenu",this.onRowContextMenu,this);this.on("rowdblclick",this.onRowDblClick,this);this.on("rowclick",this.onRowClick,this)}});ui.component._CheckDoc.FileWin=Ext.extend(Ext.Window,{id:"check-doc-file-win",title:_("Files"),width:450,height:350,labelWidth:50,resizable:false,modal:true,autoScroll:true,layout:"fit",iconCls:"iconFiles",buttons:[{text:_("Open all files"),handler:function(){var c=Ext.getCmp("check-doc-file-win"),a=ui.component._CheckDoc.fs,b;phpDoc.filePendingOpen=[];for(b=0;b<a.getCount();++b){phpDoc.filePendingOpen[b]={fpath:"en"+c.fpath,fname:a.getAt(b).data.file}}ui.component.RepositoryTree.getInstance().openFile(phpDoc.filePendingOpen[0].fpath,phpDoc.filePendingOpen[0].fname);c.close()}},{text:_("Open selected files"),id:"check-doc-btn-open-selected-files",disabled:true,handler:function(){var c=Ext.getCmp("check-doc-file-win"),b=Ext.getCmp("check-doc-file-grid").getSelectionModel().getSelections(),a;phpDoc.filePendingOpen=[];for(a=0;a<b.length;++a){phpDoc.filePendingOpen[a]={fpath:"en"+c.fpath,fname:b[a].data.file}}ui.component.RepositoryTree.getInstance().openFile(phpDoc.filePendingOpen[0].fpath,phpDoc.filePendingOpen[0].fname);c.close()}}]});ui.component.CheckDoc=Ext.extend(Ext.grid.GridPanel,{loadMask:true,bodyBorder:false,store:ui.component._CheckDoc.ds,columns:ui.component._CheckDoc.columns,autoExpandColumn:"extension",sm:new Ext.grid.CellSelectionModel({singleSelect:true}),view:new Ext.grid.GridView({forceFit:true}),listeners:{render:function(a){this.store.load.defer(20,a.store)}},onCellContextMenu:function(b,d,a,c){c.stopEvent();this.sm.select(d,a)},onCellDblClick:function(c,i,d,h){var a=this.store.getAt(i),g=this.getColumnModel().getDataIndex(d),f=a.get(g),b=a.data.path;this.el.mask(_("Please, wait..."));if(Ext.num(f,false)&&f!==0){XHR({params:{task:"getCheckDocFiles",path:b,errorType:g},success:function(e){var l=Ext.decode(e.responseText),k,j;ui.component._CheckDoc.fs.removeAll();for(k=0;k<l.files.length;++k){ui.component._CheckDoc.fs.insert(0,new ui.component._CheckDoc.fs.recordType({id:k,file:l.files[k].name}))}ui.component._CheckDoc.fs.sort("file","asc");c.el.unmask();j=new ui.component._CheckDoc.FileWin({fpath:b,items:[new ui.component._CheckDoc.FileGrid({fpath:b})]}).show()}})}},initComponent:function(a){ui.component.CheckDoc.superclass.initComponent.call(this);Ext.apply(this,a);this.on("celldblclick",this.onCellDblClick,this);this.on("cellcontextmenu",this.onCellContextMenu,this)}});Ext.namespace("ui","ui.component","ui.component._CheckEntities");ui.component._CheckEntities.ds=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getCheckEntitiesData"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"entities",mapping:"entities"},{name:"url",mapping:"url"},{name:"result",mapping:"result"},{name:"date",mapping:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]))});ui.component._CheckEntities.ds.setDefaultSort("entities","asc");ui.component._CheckEntities.rendererEntities=function(b,a){return"&"+b+";"};ui.component._CheckEntities.columns=[new Ext.grid.RowNumberer(),{id:"entities",header:_("Entities"),sortable:true,dataIndex:"entities",width:30,renderer:ui.component._CheckEntities.rendererEntities},{header:_("Url"),sortable:true,dataIndex:"url"},{header:_("Result"),width:30,sortable:true,dataIndex:"result"},{header:_("Date"),width:30,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))}];ui.component.CheckEntities=Ext.extend(Ext.grid.GridPanel,{id:"check-entities-grid",loadMask:true,bodyBorder:false,store:ui.component._CheckEntities.ds,columns:ui.component._CheckEntities.columns,autoExpandColumn:"url",sm:new Ext.grid.RowSelectionModel({singleSelect:true}),view:new Ext.grid.GridView({forceFit:true}),listeners:{render:function(){this.store.load.defer(20,this.store)}},openTab:function(c){var b=this.store.getAt(c),a=b.data.url;urlMd5=Ext.util.md5(a),tabId="tab-check-entities-"+urlMd5,tab=Ext.getCmp(tabId);if(!tab){Ext.getCmp("main-panel").add({id:tabId,xtype:"panel",title:Ext.util.Format.ellipsis(a,20),tabTip:a,iconCls:"iconCheckEntities",closable:true,layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-"+tabId,url:a})]})}Ext.getCmp("main-panel").setActiveTab(tabId)},onRowdblclick:function(a,c,b){this.openTab(c)},onContextClick:function(a,c,b){if(!this.menu){this.menu=new Ext.menu.Menu({id:"submenu-checkentities",items:[{scope:this,text:"<b>"+_("Open in a new Tab")+"</b>",iconCls:"iconOpenInTab",handler:function(){this.openTab(this.ctxRowIndex);this.menu.hide()}}]})}this.getSelectionModel().selectRow(c);b.stopEvent();if(this.ctxRowIndex){this.ctxRowIndex=null}this.ctxRowIndex=c;this.menu.showAt(b.getXY())},initComponent:function(a){this.tbar=[{xtype:"label",text:_("Status: ")},{xtype:"combo",typeAhead:true,triggerAction:"all",lazyRender:true,mode:"local",store:new Ext.data.ArrayStore({id:0,fields:["myId","displayText"],data:[["all",_("All status")],["FTP_CONNECT","FTP_CONNECT"],["FTP_LOGIN","FTP_LOGIN"],["FTP_NO_FILE","FTP_NO_FILE"],["HTTP_CONNECT","HTTP_CONNECT"],["HTTP_INTERNAL_ERROR","HTTP_INTERNAL_ERROR"],["HTTP_NOT_FOUND","HTTP_NOT_FOUND"],["HTTP_MOVED","HTTP_MOVED"],["HTTP_WRONG_HEADER","HTTP_WRONG_HEADER"],["SUCCESS","SUCCESS"],["UNKNOWN_HOST","UNKNOWN_HOST"]]}),value:"all",valueField:"myId",displayField:"displayText",editable:false,listeners:{select:function(f,b,d){var e=b.id;if(e==="all"){Ext.getCmp("check-entities-grid").store.clearFilter()}else{Ext.getCmp("check-entities-grid").store.filter("result",b.id)}}}}];ui.component.CheckEntities.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowdblclick",this.onRowdblclick,this);this.on("rowcontextmenu",this.onContextClick,this)}});Ext.namespace("ui","ui.component");ui.component.CheckEntitiesPrompt=Ext.extend(Ext.Window,{title:_("Check Entities"),iconCls:"iconRun",id:"win-check-entities",layout:"fit",width:250,height:140,resizable:false,modal:true,bodyStyle:"padding:5px 5px 0; text-align: center;",labelAlign:"top",closeAction:"hide",buttons:[{id:"win-check-entities-btn",text:_("Go !"),handler:function(){var a=new ui.task.CheckEntitiesTask();Ext.getCmp("win-check-entities").hide()}}],initComponent:function(){Ext.apply(this,{items:[{xtype:"panel",modal:false,baseCls:"x-plain",bodyStyle:"padding:5px 5px 0",html:_("You're about to check all entities.<br><br>This action takes time.")}]});ui.component.CheckEntitiesPrompt.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._CommitLogManager");ui.component._CommitLogManager.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getCommitLogMessage"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"text",mapping:"text"}]))});ui.component._CommitLogManager.editor=new Ext.ux.grid.RowEditor({saveText:_("Update"),cancelText:_("Cancel"),listeners:{afteredit:function(c,b,a,d){XHR({params:{task:"saveLogMessage",messID:a.data.id,mess:a.data.text},success:function(e){a.commit();phpDoc.notify("info",_("Message updated"),_("Log Message was updated successfully !"))},failure:function(e){phpDoc.winForbidden()}})}}});ui.component._CommitLogManager.cm=new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),{id:"log_msg",header:_("Log message"),dataIndex:"text",editor:{xtype:"textarea"},renderer:function(a){return a.split("\n").join("<br/>")}}]);ui.component._CommitLogManager.sm=new Ext.grid.RowSelectionModel({singleSelect:true});ui.component._CommitLogManager.menu=Ext.extend(Ext.menu.Menu,{setRowIdx:function(a){this.rowIdx=a},initComponent:function(a){Ext.apply(this,{items:[{scope:this,text:_("Delete this Log Message"),iconCls:"iconDelete",handler:function(){XHR({scope:this,params:{task:"deleteLogMessage",messID:ui.component._CommitLogManager.store.getAt(this.rowIdx).data.id},success:function(b){ui.component._CommitLogManager.store.remove(ui.component._CommitLogManager.store.getAt(this.rowIdx));phpDoc.notify("info",_("Message deleted"),_("Log Message was deleted successfully !"))},failure:function(b){phpDoc.winForbidden()}})}}]});ui.component._CommitLogManager.menu.superclass.initComponent.call(this)}});ui.component._CommitLogManager.grid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,autoExpandColumn:"log_msg",cm:ui.component._CommitLogManager.cm,sm:ui.component._CommitLogManager.sm,store:ui.component._CommitLogManager.store,plugins:[ui.component._CommitLogManager.editor],listeners:{render:function(a){a.store.load()}},onRowContextMenu:function(a,c,b){b.stopEvent();this.getSelectionModel().selectRow(c);if(!this.menu){this.menu=new ui.component._CommitLogManager.menu()}this.menu.setRowIdx(c);this.menu.showAt(b.getXY())},initComponent:function(a){ui.component._CommitLogManager.grid.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowcontextmenu",this.onRowContextMenu,this)}});ui.component.CommitLogManager=Ext.extend(Ext.Window,{id:"commit-log-win",title:_("Manage Log Message"),iconCls:"iconWinManageLog",width:650,height:350,layout:"fit",resizable:false,modal:true,autoScroll:true,closeAction:"hide",store:ui.component._CommitLogManager.store,buttons:[{text:_("Close"),handler:function(){Ext.getCmp("commit-log-win").hide()}}],initComponent:function(){Ext.apply(this,{items:[new ui.component._CommitLogManager.grid()]});ui.component.CommitLogManager.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component");ui.component.CommitPrompt=Ext.extend(Ext.Window,{id:"winVCSCommit",layout:"form",title:_("VCS commit"),closable:false,width:400,height:480,resizable:false,modal:true,bodyStyle:"padding:5px 5px 0",labelAlign:"top",tools:[{id:"gear",qtip:_("Configure this tools"),handler:function(){if(!Ext.getCmp("commit-log-win")){var a=new ui.component.CommitLogManager()}Ext.getCmp("commit-log-win").show(this.id)}}],buttons:[{id:"win-commit-btn-submit",text:_("Submit"),handler:function(){var a=new ui.task.VCSCommitTask()}},{id:"win-commit-btn-close",text:_("Close"),handler:function(){Ext.getCmp("winVCSCommit").close()}}],initComponent:function(){var a=new Ext.tree.TreeNode({text:"root",expanded:true}),b;for(b=0;b<this.files.length;++b){a.appendChild(new Ext.tree.TreeNode({id:"need-commit-"+this.files[b].fid,text:this.files[b].fpath+this.files[b].fname,FileDBID:this.files[b].fdbid,FilePath:this.files[b].fpath,FileName:this.files[b].fname,leaf:true,checked:true}))}Ext.apply(this,{items:[{xtype:"treepanel",id:"commit-tree-panel",anchor:"100%",height:180,autoScroll:true,rootVisible:false,root:a},{xtype:"combo",name:"first2",fieldLabel:_("Older messages"),editable:false,anchor:"100%",store:ui.component._CommitLogManager.store,triggerAction:"all",tpl:'<tpl for="."><div class="x-combo-list-item">{[values.text.split("\n").join("<br/>")]}</div></tpl>',valueField:"id",displayField:"text",listeners:{select:function(e,c,d){Ext.getCmp("form-commit-message-log").setValue(c.data.text)}}},{xtype:"textarea",id:"form-commit-message-log",name:"first3",fieldLabel:_("Log message"),anchor:"100%",height:150,value:""}]});ui.component.CommitPrompt.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._EditorConf");ui.component._EditorConf.tplMenu=new Ext.XTemplate('<tpl for=".">','<div class="thumb-wrap" id="tplMenu-{id}">','<div class="thumb"><img src="themes/img/{img}" title=""></div>',"<span>{label}</span>","</div>","</tpl>");ui.component._EditorConf.tplMenu.compile();ui.component._EditorConf.menuDefEn=[["1","go-home.png",_("Main")],["5","view-list-tree.png",_('Module "All files"')],["6","view-media-playlist.png",_('Module "Pending Patch"')]];ui.component._EditorConf.menuDefNonEn=[["1","go-home.png",_("Main")],["2","edit-redo.png",_('Module "Files Need Update"')],["3","dialog-cancel.png",_('Module "Files with Error"')],["4","document-properties.png",_('Module "Files need Reviewed"')],["5","view-list-tree.png",_('Module "All files"')],["6","view-media-playlist.png",_('Module "Pending Patch"')]];ui.component._EditorConf.menuStore=new Ext.data.SimpleStore({id:0,fields:[{name:"id"},{name:"img"},{name:"label"}]});ui.component._EditorConf.viewMenu=Ext.extend(Ext.DataView,{id:"conf-menu-view",tpl:ui.component._EditorConf.tplMenu,singleSelect:true,overClass:"x-view-over",itemSelector:"div.thumb-wrap",store:ui.component._EditorConf.menuStore,listeners:{selectionchange:function(b,a){var c=b.getSelectedRecords();Ext.getCmp("confCard").layout.setActiveItem("conf-card-"+c[0].data.id)}}});ui.component._EditorConf.themeStore=new Ext.data.SimpleStore({fields:["themeFile",{name:"themeName",type:"string"}],data:[["themes/ExtJsThemes/black/css/xtheme-black.css",_("Black")],["themes/empty.css",_("Default")],["themes/ExtJsThemes/darkgray/css/xtheme-darkgray.css",_("DarkGray")],["js/extjs/resources/css/xtheme-gray.css",_("Gray")],["themes/ExtJsThemes/gray-extend/css/xtheme-gray-extend.css",_("Gray Extend")],["themes/ExtJsThemes/indigo/css/xtheme-indigo.css",_("Indigo")],["themes/ExtJsThemes/midnight/css/xtheme-midnight.css",_("Midnight")],["themes/ExtJsThemes/olive/css/xtheme-olive.css",_("Olive")],["themes/ExtJsThemes/purple/css/xtheme-purple.css",_("Purple")],["themes/ExtJsThemes/silverCherry/css/xtheme-silverCherry.css",_("SilverCherry")],["themes/ExtJsThemes/ubuntu_human/css/xtheme-human.css",_("Ubuntu Human")]]});ui.component._EditorConf.card1=Ext.extend(Ext.form.FormPanel,{id:"conf-card-1",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Themes"),autoHeight:true,defaults:{hideLabel:true},items:[{xtype:"combo",id:"conf-combo-theme",valueField:"themeFile",displayField:"themeName",triggerAction:"all",mode:"local",forceSelection:true,editable:false,value:phpDoc.userConf.theme,store:ui.component._EditorConf.themeStore,listeners:{render:function(){Ext.getCmp("conf-combo-theme").store.sort("themeName")},select:function(f,a,d){var e=f.getValue(),b;Ext.get("appTheme").dom.href=e;b=new ui.task.UpdateConfTask({item:"theme",value:e})}}}]},{xtype:"fieldset",title:_("External Data"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"mainAppLoadMailsAtStartUp",checked:phpDoc.userConf.mainAppLoadMailsAtStartUp,boxLabel:_("Load Mails at startUp"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"mainAppLoadMailsAtStartUp",value:b.getValue()})}}},{autoHeight:true,name:"mainAppLoadBugsAtStartUp",checked:phpDoc.userConf.mainAppLoadBugsAtStartUp,boxLabel:_("Load Bugs at startUp"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"mainAppLoadBugsAtStartUp",value:b.getValue()})}}}]}]});ui.component._EditorConf.card1.superclass.initComponent.call(this)}});ui.component._EditorConf.card2=Ext.extend(Ext.form.FormPanel,{id:"conf-card-2",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Diff view"),autoHeight:true,defaults:{hideLabel:true},defaultType:"radio",items:[{autoHeight:true,name:"needUpdateDiff",checked:(phpDoc.userConf.needUpdateDiff==="using-viewvc")?true:false,boxLabel:_("Using ViewVc from php web site"),inputValue:"using-viewvc",listeners:{check:function(b){if(b.checked){var a=new ui.task.UpdateConfTask({item:"needUpdateDiff",value:b.getRawValue()})}}}},{autoHeight:true,name:"needUpdateDiff",checked:(phpDoc.userConf.needUpdateDiff==="using-exec")?true:false,boxLabel:_("Using diff -kk -u command line"),inputValue:"using-exec",listeners:{check:function(b){if(b.checked){var a=new ui.task.UpdateConfTask({item:"needUpdateDiff",value:b.getRawValue()})}}}}]},{xtype:"fieldset",title:_("Editor"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"needUpdateScrollbars",checked:phpDoc.userConf.needUpdateScrollbars,boxLabel:_("Synchronize scroll bars"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"needUpdateScrollbars",value:b.getValue()})}}},{autoHeight:true,name:"needUpdateDisplaylog",checked:phpDoc.userConf.needUpdateDisplaylog,boxLabel:_("Automatically load the log when displaying the file"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"needUpdateDisplaylog",value:b.getValue()})}}}]}]});ui.component._EditorConf.card2.superclass.initComponent.call(this)}});ui.component._EditorConf.card3=Ext.extend(Ext.form.FormPanel,{id:"conf-card-3",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Error type"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"errorSkipNbLiteralTag",checked:phpDoc.userConf.errorSkipNbLiteralTag,boxLabel:_("Skip nbLiteralTag error"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"errorSkipNbLiteralTag",value:b.getValue()})}}}]},{xtype:"fieldset",title:_("Editor"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"errorScrollbars",checked:phpDoc.userConf.errorScrollbars,boxLabel:_("Synchronize scroll bars"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"errorScrollbars",value:b.getValue()})}}},{autoHeight:true,name:"errorDisplayLog",checked:phpDoc.userConf.errorDisplayLog,boxLabel:_("Automatically load the log when displaying the file"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"errorDisplayLog",value:b.getValue()})}}}]}]});ui.component._EditorConf.card3.superclass.initComponent.call(this)}});ui.component._EditorConf.card4=Ext.extend(Ext.form.FormPanel,{id:"conf-card-4",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Editor"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"reviewedScrollbars",checked:phpDoc.userConf.reviewedScrollbars,boxLabel:_("Synchronize scroll bars"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"reviewedScrollbars",value:b.getValue()})}}},{autoHeight:true,name:"reviewedDisplaylog",checked:phpDoc.userConf.reviewedDisplaylog,boxLabel:_("Automatically load the log when displaying the file"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"reviewedDisplaylog",value:b.getValue()})}}}]}]});ui.component._EditorConf.card4.superclass.initComponent.call(this)}});ui.component._EditorConf.card5=Ext.extend(Ext.form.FormPanel,{id:"conf-card-5",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Editor"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"allFilesDisplayLog",checked:phpDoc.userConf.allFilesDisplayLog,boxLabel:_("Automatically load the log when displaying the file"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"allFilesDisplayLog",value:b.getValue()})}}}]}]});ui.component._EditorConf.card5.superclass.initComponent.call(this)}});ui.component._EditorConf.card6=Ext.extend(Ext.form.FormPanel,{id:"conf-card-6",bodyStyle:"padding: 10px;",initComponent:function(){Ext.apply(this,{items:[{xtype:"fieldset",title:_("Editor"),autoHeight:true,defaults:{hideLabel:true},defaultType:"checkbox",items:[{autoHeight:true,name:"patchScrollbars",checked:phpDoc.userConf.patchScrollbars,boxLabel:_("Synchronize scroll bars"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"patchScrollbars",value:b.getValue()})}}},{autoHeight:true,name:"patchDisplayLog",checked:phpDoc.userConf.patchDisplayLog,boxLabel:_("Automatically load the log when displaying the file"),listeners:{check:function(b){var a=new ui.task.UpdateConfTask({item:"patchDisplayLog",value:b.getValue()})}}}]}]});ui.component._EditorConf.card6.superclass.initComponent.call(this)}});ui.component.EditorConf=Ext.extend(Ext.Window,{id:"win-conf",layout:"border",width:550,height:400,iconCls:"iconConf",title:_("Configuration"),modal:true,plain:true,bodyBorder:false,closeAction:"hide",buttons:[{text:_("Close"),handler:function(){Ext.getCmp("win-conf").hide()}}],listeners:{show:function(){var a=Ext.getCmp("conf-menu-view");a.select(a.getNode(0))}},initComponent:function(){if(phpDoc.userLang==="en"){ui.component._EditorConf.menuStore.loadData(ui.component._EditorConf.menuDefEn)}else{ui.component._EditorConf.menuStore.loadData(ui.component._EditorConf.menuDefNonEn)}Ext.apply(this,{items:[{id:"confMenu",region:"west",border:false,width:190,autoScroll:true,items:[new ui.component._EditorConf.viewMenu()]},{id:"confCard",region:"center",border:false,layout:"card",width:375,frame:true,activeItem:0,bbar:new Ext.ux.StatusBar({defaultText:_("All changes take effect immediately"),defaultIconCls:"confStatusBar"}),items:[new ui.component._EditorConf.card1(),new ui.component._EditorConf.card2(),new ui.component._EditorConf.card3(),new ui.component._EditorConf.card4(),new ui.component._EditorConf.card5(),new ui.component._EditorConf.card6()]}]});ui.component.EditorConf.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._EmailPrompt");ui.component.EmailPrompt=Ext.extend(Ext.Window,{title:_("Send an email"),width:500,height:300,minWidth:300,minHeight:200,layout:"fit",plain:true,bodyStyle:"padding:5px;",buttonAlign:"center",iconCls:"iconSendEmail",closeAction:"hide",buttons:[{text:_("Send"),handler:function(){var b=this.ownerCt.ownerCt,a=b.findByType("form").shift().getForm().getValues();XHR({params:{task:"sendEmail",to:a.to,subject:a.subject,msg:a.msg},success:function(c){b.hide();Ext.Msg.alert(_("Status"),String.format(_("Email sent to {0} with success!"),b.name),Ext.emptyFn)}})}},{text:_("Cancel"),handler:function(){this.ownerCt.ownerCt.hide()}}],setData:function(b,a){this.name=b;this.email=a;this.items.items[0].items.items[0].setValue('"'+this.name+'" <'+this.email+">");this.items.items[0].items.items[1].setValue("");this.items.items[0].items.items[2].setValue("")},initComponent:function(){Ext.apply(this,{items:new Ext.form.FormPanel({baseCls:"x-plain",labelWidth:55,defaultType:"textfield",items:[{name:"to",fieldLabel:_("Send To"),readOnly:true,anchor:"100%",value:""},{name:"subject",fieldLabel:_("Subject"),anchor:"100%"},{name:"msg",xtype:"textarea",hideLabel:true,anchor:"100% -53"}]})});ui.component.EmailPrompt.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._ErrorFileGrid");ui.component._ErrorFileGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"maintainer",mapping:"maintainer"},{name:"type",mapping:"type"},{name:"value_en",mapping:"value_en"},{name:"value_lang",mapping:"value_lang"},{name:"needcommit",mapping:"needcommit"}])),sortInfo:{field:"path",direction:"ASC"},groupField:"path",listeners:{datachanged:function(a){Ext.getDom("acc-error-nb").innerHTML=a.getCount()}}});ui.component._ErrorFileGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Type"),width:45,sortable:true,dataIndex:"type"},{header:_("Maintainer"),width:45,sortable:true,dataIndex:"maintainer"},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._ErrorFileGrid.view=new Ext.grid.GroupingView({emptyText:'<div style="text-align: center;">'+_("No Files")+"</div>",deferEmptyText:false,forceFit:true,startCollapsed:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',getRowClass:function(a,d,c,b){if(a.data.needcommit){return"file-need-commit"}}});ui.component._ErrorFileGrid.menu=function(a){Ext.apply(this,a);this.init();ui.component._ErrorFileGrid.menu.superclass.constructor.call(this)};Ext.extend(ui.component._ErrorFileGrid.menu,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconFilesError",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},{scope:this,hidden:this.hideCommit,text:("View Diff"),iconCls:"iconViewDiff",handler:function(){Ext.getCmp("main-panel").add({xtype:"panel",id:"diff_panel_"+this.rowIdx,title:_("Diff"),tabTip:_("Diff"),closable:true,autoScroll:true,iconCls:"iconTabLink",html:'<div id="diff_content_'+this.rowIdx+'" class="diff-content"></div>'});Ext.getCmp("main-panel").setActiveTab("diff_panel_"+this.rowIdx);Ext.get("diff_panel_"+this.rowIdx).mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" />'+_("Please, wait..."));XHR({scope:this,params:{task:"getDiff",FilePath:this.lang+this.fpath,FileName:this.fname},success:function(a){var b=Ext.util.JSON.decode(a.responseText);Ext.get("diff_content_"+this.rowIdx).dom.innerHTML=b.content;Ext.get("diff_panel_"+this.rowIdx).unmask()}})}},"-",{text:_("About error type"),iconCls:"iconHelp",handler:function(){if(!Ext.getCmp("main-panel").findById("FE-help")){Ext.getCmp("main-panel").add({id:"FE-help",title:_("About error type"),iconCls:"iconHelp",closable:true,autoScroll:true,autoLoad:"./error"})}Ext.getCmp("main-panel").setActiveTab("FE-help")}}]})}});ui.component.ErrorFileGrid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,border:false,autoExpandColumn:"name",view:ui.component._ErrorFileGrid.view,columns:ui.component._ErrorFileGrid.columns,listeners:{render:function(a){a.view.refresh()},rowcontextmenu:function(c,g,f){f.stopEvent();var d=c.store.getAt(g).data.path,a=c.store.getAt(g).data.name,b;c.getSelectionModel().selectRow(g);b=new ui.component._ErrorFileGrid.menu({hideCommit:(c.store.getAt(g).data.needcommit===false),grid:c,event:f,rowIdx:g,lang:phpDoc.userLang,fpath:d,fname:a}).showAt(f.getXY())},rowdblclick:function(a,c,b){this.openFile(a.store.getAt(c).data.id)}},openFile:function(f){var d=this.store.getById(f),c=d.data.path,a=d.data.name,e=Ext.util.md5("FE-"+phpDoc.userLang+c+a),b=[];if(!Ext.getCmp("main-panel").findById("FE-"+e)){b=[];this.store.each(function(g){if(g.data.path===c&&g.data.name===a&&!b[g.data.type]){b.push(g.data.type)}});Ext.getCmp("main-panel").add({id:"FE-"+e,title:a,layout:"border",iconCls:"iconTabError",closable:true,originTitle:a,defaults:{split:true},tabTip:String.format(_("File with error : in {0}"),c),listeners:{resize:function(g){Ext.getCmp("FE-EN-PANEL-"+e).setWidth(g.getWidth()/2)}},items:[{xtype:"panel",id:"FE-error-desc-"+e,region:"north",layout:"fit",title:_("Error description"),height:150,collapsible:true,collapsed:true,autoScroll:true,autoLoad:"./error?dir="+c+"&file="+a},{region:"west",xtype:"panel",title:_("VCSLog"),collapsible:true,collapsed:true,layout:"fit",bodyBorder:false,width:375,items:{xtype:"tabpanel",activeTab:0,tabPosition:"bottom",defaults:{autoScroll:true},items:[new ui.component.VCSLogGrid({layout:"fit",title:phpDoc.userLang,prefix:"FE-LANG",fid:e,fpath:phpDoc.userLang+c,fname:a,loadStore:phpDoc.userConf.errorDisplayLog}),new ui.component.VCSLogGrid({layout:"fit",title:"en",prefix:"FE-EN",fid:e,fpath:"en"+c,fname:a,loadStore:phpDoc.userConf.errorDisplayLog})]}},new ui.component.FilePanel({id:"FE-LANG-PANEL-"+e,region:"center",title:String.format(_("{0} File: "),phpDoc.userLang)+c+a,prefix:"FE",ftype:"LANG",fid:e,fpath:c,fname:a,lang:phpDoc.userLang,parser:"xml",storeRecord:d,syncScrollCB:true,syncScroll:true,syncScrollConf:"errorScrollbars"}),new ui.component.FilePanel({id:"FE-EN-PANEL-"+e,region:"east",title:_("en File: ")+c+a,prefix:"FE",ftype:"EN",fid:e,fpath:c,fname:a,lang:"en",parser:"xml",storeRecord:d,syncScroll:true,syncScrollConf:"errorScrollbars"})]});Ext.getCmp("main-panel").setActiveTab("FE-"+e);if(Ext.getCmp("FE-"+e).getLayout().north.collapsedEl){Ext.getCmp("FE-"+e).getLayout().north.collapsedEl.addClass("x-layout-collapsed-east-error-desc")}}else{Ext.getCmp("main-panel").setActiveTab("FE-"+e)}},initComponent:function(){Ext.apply(this,{store:new ui.component._ErrorFileGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesError"})}),tbar:[_("Filter: ")," ",new Ext.form.TwinTriggerField({id:"FE-filter",width:180,hideTrigger1:true,enableKeyEvents:true,validateOnBlur:false,validationEvent:false,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",listeners:{keypress:function(b,a){if(a.getKey()===a.ENTER){this.onTrigger2Click()}}},onTrigger1Click:function(){this.setValue("");this.triggers[0].hide();ui.component._ErrorFileGrid.instance.store.clearFilter()},onTrigger2Click:function(){var a=this.getValue();if(a===""||a.length<3){this.markInvalid(_("Your filter must contain at least 3 characters"));return}this.clearInvalid();this.triggers[0].show();ui.component._ErrorFileGrid.instance.store.filter("maintainer",a)}})]});ui.component.ErrorFileGrid.superclass.initComponent.call(this)}});ui.component._ErrorFileGrid.instance=null;ui.component.ErrorFileGrid.getInstance=function(a){if(!ui.component._ErrorFileGrid.instance){if(!a){a={}}ui.component._ErrorFileGrid.instance=new ui.component.ErrorFileGrid(a)}return ui.component._ErrorFileGrid.instance};Ext.namespace("ui","ui.component");ui.component.ExecDiff=Ext.extend(Ext.Panel,{layout:"fit",title:_("Diff From VCS"),height:150,autoScroll:true,listeners:{render:function(){XHR({scope:this,params:{task:"getDiff2",FilePath:"en"+this.fpath,FileName:this.fname,Rev1:this.rev1,Rev2:this.rev2},success:function(a){var b=Ext.util.JSON.decode(a.responseText);Ext.get(this.prefix+"-diff-"+this.fid).dom.innerHTML=b.content}})}},initComponent:function(){Ext.apply(this,{html:'<div id="'+this.prefix+"-diff-"+this.fid+'" class="diff-content"></div>'});ui.component.ExecDiff.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._FilePanel");Ext.namespace("ui.component._FilePanel.tbar.menu");ui.component._FilePanel.tbar.menu.lang=function(a){Ext.apply(this,a);this.init();ui.component._FilePanel.tbar.menu.lang.superclass.constructor.call(this)};Ext.extend(ui.component._FilePanel.tbar.menu.lang,Ext.Toolbar.Button,{text:_("MarkUp"),iconCls:"iconInsertCode",init:function(){Ext.apply(this,{menu:new Ext.menu.Menu({items:[{scope:this,text:_("Reviewed tag"),handler:function(){Ext.getCmp(this.comp_id).insertIntoLine(2,"end","\n<!-- Reviewed: no -->");Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Revcheck tag"),handler:function(){Ext.getCmp(this.comp_id).insertIntoLine(2,"end","\n<!-- EN-Revision: XX Maintainer: "+phpDoc.userLogin+" Status: ready -->");Ext.getCmp(this.comp_id).focus()}}]})})}});ui.component._FilePanel.tbar.menu.en=function(a){Ext.apply(this,a);this.init();ui.component._FilePanel.tbar.menu.en.superclass.constructor.call(this)};Ext.extend(ui.component._FilePanel.tbar.menu.en,Ext.Toolbar.Button,{text:_("MarkUp"),iconCls:"iconInsertCode",init:function(){Ext.apply(this,{menu:new Ext.menu.Menu({items:[{scope:this,text:_("Description section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,[' <refsect1 role="description"><!-- {{{ -->\r\n  ',"&reftitle.description;\r\n  ","<methodsynopsis>\r\n   ","<!-- Example: All functions have this -->\r\n   ","<type>thereturned type</type><methodname>func_name</methodname>\r\n   ","<!-- Example: Required parameter -->\r\n   ","<methodparam><type>param1type</type><parameter>firstparameter</parameter></methodparam>\r\n   ","<!-- Example: Optional parameter, also by reference -->\r\n   ",'<methodparam choice="opt"><type>int</type><parameter role="reference">secondparameter</parameter></methodparam>\r\n   ',"<!-- Example: If no methodparams exist (void), use this -->\r\n   ","<void />\r\n  ","</methodsynopsis>\r\n  ","<para>\r\n   ","The function description goes here.\r\n  ","</para>\r\n ","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Parameters section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="parameters"><!-- {{{ -->\r\n',"&reftitle.parameters;\r\n","<para>\r\n","<variablelist>\r\n","<varlistentry>\r\n","<term><parameter>firstparameter</parameter></term>\r\n","<listitem>\r\n","<para>\r\n","Its description\r\n","</para>\r\n","</listitem>\r\n","</varlistentry>\r\n","<varlistentry>\r\n","<term>\r\n","<parameter>secondparameter</parameter>\r\n","</term>\r\n","<listitem>\r\n","<para>\r\n","Its description\r\n","</para>\r\n","</listitem>\r\n","</varlistentry>\r\n","</variablelist>\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Return section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="returnvalues"><!-- {{{ -->\r\n',"&reftitle.returnvalues;\r\n","<para>\r\n","What this function returns, first on success, then failure.\r\n","If simply true on success and false on failure, just use &return.success; here.\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Error section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="errors"><!-- {{{ -->\r\n',"&reftitle.errors;\r\n","<para>\r\n","When does this function issue E_* level errors, and/or throw exceptions.\r\n","</para>\r\n","</refsect1><!-- }}} -->\r\n"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Unicode section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="unicode"><!-- {{{ -->\r\n',"&reftitle.unicode;\r\n","<para>\r\n","Information specific to unicode, from the PHP 6 changes.\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Changelog section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="changelog"><!-- {{{ -->\r\n',"&reftitle.changelog;\r\n","<para>\r\n","<informaltable>\r\n",'<tgroup cols="2">\r\n',"<thead>\r\n","<row>\r\n","<entry>&Version;</entry>\r\n","<entry>&Description;</entry>\r\n","</row>\r\n","</thead>\r\n","<tbody>\r\n","<row>\r\n","<entry>Enter the version of change here</entry>\r\n","<entry>\r\n","Describe the change\r\n","</entry>\r\n","</row>\r\n","</tbody>\r\n","</tgroup>\r\n","</informaltable>\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Examples section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="examples"><!-- {{{ -->\r\n',"&reftitle.examples;\r\n","<para>\r\n",'<example xml:id="function-name.example.basic"><!-- {{{ -->\r\n',"<title><function>function-name</function> example</title>\r\n","<para>\r\n","Any text that describes the purpose of the example, or what\r\n","goes on in the example should be here. (Inside the <example> tag, not out).\r\n","</para>\r\n",'<programlisting role="php">\r\n',"<![CDATA[\r\n","<?php\r\n","if ($anexample === true) {\r\n","echo 'Use the PEAR Coding standards';\r\n","}\r\n","if ($thereisoutput === 'and it is multiple lines') {\r\n","echo 'Use a screen like we did below';\r\n","}\r\n","?>\r\n","]]>\r\n","</programlisting>\r\n","&example.outputs.similar;\r\n","<screen>\r\n","<![CDATA[\r\n","Use the PEAR Coding standards\r\n","Use a screen like we did below\r\n","]]>\r\n","</screen>\r\n","</example><!-- }}} -->\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("Notes section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="notes"><!-- {{{ -->\r\n',"&reftitle.notes;\r\n","<caution>\r\n","<para>\r\n","Any notes that don't fit anywhere else should go here.\r\n","90% of the time, notes, warnings or cautions are better placed in the\r\n","parameters section. Consider that before using this section!\r\n","</para>\r\n","</caution>\r\n","&note.language-construct;\r\n","&note.not-bin-safe;\r\n","&note.registerglobals;\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}},{scope:this,text:_("SeeAlso section"),handler:function(){var a=Ext.util.JSON.decode(Ext.getCmp(this.comp_id).getCursorPosition());Ext.getCmp(this.comp_id).insertIntoLine(a.line,0,['\r\n<refsect1 role="seealso"><!-- {{{ -->\r\n',"&reftitle.seealso;\r\n","<para>\r\n","<simplelist>\r\n","<member><function>somefunc</function></member>\r\n","<member><function>another_func</function></member>\r\n",'<member>The <link linkend="something">something appendix</link></member>\r\n',"</simplelist>\r\n","</para>\r\n","</refsect1><!-- }}} -->"].join(""));Ext.getCmp(this.comp_id).focus()}}]})})}});ui.component.FilePanel=Ext.extend(Ext.form.FormPanel,{activeScroll:false,initComponent:function(){var a=this.prefix+"-"+this.ftype;this.bbar=(this.syncScrollCB)?[{xtype:"checkbox",name:"needUpdateScrollbars",hideLabel:true,checked:phpDoc.userConf[this.syncScrollConf],boxLabel:_("Synchronize scroll bars"),listeners:{scope:this,check:function(d){var b=new ui.task.UpdateConfTask({item:this.syncScrollConf,value:d.getValue()})},render:function(b){Ext.DomHelper.insertHtml("beforeBegin",b.el.dom,['<div style="display: inline;" class="x-statusbar">','<span class="x-status-text-panel">',_("Line: "),'<span id="',a,"-status-line-",this.fid,'">-</span></span>','&nbsp;&nbsp;<span class="x-status-text-panel">',_("Col: "),'<span id="',a,"-status-col-",this.fid,'">-</span></span>',"</div>&nbsp;&nbsp;"].join(""))}}}]:[{xtype:"panel",height:26,baseCls:"",bodyStyle:"padding-top:5px;",html:['<div style="display: inline;" class="x-statusbar">','<span class="x-status-text-panel">',_("Line: "),'<span id="',a,"-status-line-",this.fid,'">-</span></span>','&nbsp;&nbsp;<span class="x-status-text-panel">',_("Col: "),'<span id="',a,"-status-col-",this.fid,'">-</span></span>',"</div>&nbsp;&nbsp;"].join("")}];if(!this.readOnly){this.tbar=(this.isPatch)?[{scope:this,tooltip:_("Close Tab"),iconCls:"iconClose",handler:function(){Ext.getCmp("main-panel").remove(this.prefix+"-"+this.fid)}},"-",{id:a+"-PANEL-btn-save-"+this.fid,scope:this,tooltip:_("<b>Accept</b> this patch and <b>Save</b> the file (CTRL+s)"),iconCls:"iconSaveFile",handler:function(){var b=new ui.task.AcceptPatchTask({fid:this.fid,fpath:this.fpath,fname:this.fname,fuid:this.fuid,storeRecord:this.storeRecord})}},{id:a+"-PANEL-btn-reject-"+this.fid,scope:this,tooltip:_("<b>Reject</b> this patch"),iconCls:"iconPageDelete",handler:function(){var b=new ui.task.RejectPatchTask({fid:this.fid,fuid:this.fuid,storeRecord:this.storeRecord})}},"-",{scope:this,tooltip:_("<b>Undo</b>"),disabled:true,iconCls:"iconUndo",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).undo(this)}},{scope:this,tooltip:_("<b>Redo</b>"),disabled:true,iconCls:"iconRedo",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).redo(this)}},"-",{scope:this,tooltip:_("<b>Re-indent</b> all this file"),iconCls:"iconIndent",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).reIndentAll()}}]:[{scope:this,tooltip:_("Close Tab"),iconCls:"iconClose",handler:function(){Ext.getCmp("main-panel").remove(this.prefix+"-"+this.fid)}},"-",{id:a+"-PANEL-btn-save-"+this.fid,scope:this,tooltip:_("<b>Save</b> this file (CTRL+s)"),iconCls:"iconSaveFile",disabled:true,handler:function(){var b;if(this.lang==="en"){b=new ui.task.SaveENFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,storeRecord:this.storeRecord});Ext.getCmp(a+"-FILE-"+this.fid).setOriginalCode()}else{if(this.prefix==="AF"){b=new ui.task.SaveLangFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,storeRecord:this.storeRecord});Ext.getCmp(a+"-FILE-"+this.fid).setOriginalCode();return}if(this.prefix==="FNT"){b=new ui.task.SaveTransFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,storeRecord:this.storeRecord});Ext.getCmp(a+"-FILE-"+this.fid).setOriginalCode();return}Ext.MessageBox.show({title:_("Confirm"),msg:_("Do you want to check for error before saving?"),icon:Ext.MessageBox.INFO,buttons:Ext.MessageBox.YESNOCANCEL,scope:this,fn:function(c){if(c==="no"){b=new ui.task.SaveLangFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,storeRecord:this.storeRecord});Ext.getCmp(a+"-FILE-"+this.fid).setOriginalCode()}else{if(c==="yes"){b=new ui.task.CheckFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,storeRecord:this.storeRecord});Ext.getCmp(a+"-FILE-"+this.fid).setOriginalCode()}}}})}}},{id:a+"-PANEL-btn-saveas-"+this.fid,scope:this,tooltip:_("<b>Save as</b> a patch"),iconCls:"iconSaveAsFile",disabled:true,handler:function(){var b=new ui.component.PatchPrompt({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:this.fpath,fname:this.fname,lang:this.lang,defaultEmail:(phpDoc.userLogin!=="anonymous")?phpDoc.userLogin+"@php.net":""}).show()}},"-",{scope:this,tooltip:_("<b>Undo</b>"),disabled:true,iconCls:"iconUndo",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).undo(this)}},{scope:this,tooltip:_("<b>Redo</b>"),disabled:true,iconCls:"iconRedo",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).redo(this)}},"-",{scope:this,tooltip:_("<b>Re-indent</b> all this file"),iconCls:"iconIndent",handler:function(){Ext.getCmp(a+"-FILE-"+this.fid).reIndentAll()}},(this.lang==="en")?new ui.component._FilePanel.tbar.menu.en({comp_id:a+"-FILE-"+this.fid}):new ui.component._FilePanel.tbar.menu.lang({comp_id:a+"-FILE-"+this.fid})]}else{this.tbar=[{}]}Ext.apply(this,{title:this.title,cls:"code-mirror-panel",originTitle:this.title,items:[{xtype:"codemirror",id:a+"-FILE-"+this.fid,readOnly:this.readOnly,parser:this.parser,isModified:false,listeners:{scope:this,initialize:function(){var d,b,c;if(this.isPatch){d=this.fpath;b=this.fname+"."+this.fuid+".patch"}else{if(this.isTrans){if(this.storeRecord.data.needcommit){d=this.lang+this.fpath;b=this.fname+".new"}else{d="en"+this.fpath;b=this.fname}}else{d=this.lang+this.fpath;b=this.fname}}c=new ui.task.GetFileTask({prefix:this.prefix,ftype:this.ftype,fid:this.fid,fpath:d,fname:b})},coderestored:function(){if(Ext.getCmp(a+"-FILE-"+this.fid).isModified){Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle+Ext.getCmp(a+"-PANEL-"+this.fid).permlink);Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle);Ext.getCmp(a+"-PANEL-btn-save-"+this.fid).disable();if(this.isPatch){Ext.getCmp(a+"-PANEL-btn-reject-"+this.fid).disable()}else{Ext.getCmp(a+"-PANEL-btn-saveas-"+this.fid).disable()}Ext.getCmp(a+"-FILE-"+this.fid).isModified=false}},codemodified:function(){if(!Ext.getCmp(a+"-FILE-"+this.fid).isModified){Ext.getCmp(a+"-PANEL-"+this.fid).setTitle(Ext.getCmp(a+"-PANEL-"+this.fid).originTitle+' <span style="color:#ff0000; font-weight: bold;">['+_("modified")+"]</span>"+Ext.getCmp(a+"-PANEL-"+this.fid).permlink);Ext.getCmp(this.prefix+"-"+this.fid).setTitle(Ext.getCmp(this.prefix+"-"+this.fid).originTitle+' <t style="color:#ff0000; font-weight: bold;">*</t>');Ext.getCmp(a+"-PANEL-btn-save-"+this.fid).enable();if(this.isPatch){Ext.getCmp(a+"-PANEL-btn-reject-"+this.fid).enable()}else{Ext.getCmp(a+"-PANEL-btn-saveas-"+this.fid).enable()}Ext.getCmp(a+"-PANEL-"+this.fid).getTopToolbar().items.items[5].enable();Ext.getCmp(a+"-FILE-"+this.fid).isModified=true}},cursormove:function(b,c){Ext.get(a+"-status-line-"+this.fid).dom.innerHTML=b;Ext.get(a+"-status-col-"+this.fid).dom.innerHTML=c},scroll:function(e){if(this.syncScroll&&phpDoc.userConf[this.syncScrollConf]){var c;switch(this.ftype){case"EN":c=this.prefix+"-LANG";break;case"LANG":c=this.prefix+"-EN";break;case"PATCH":c=this.prefix+"-ORIGIN";break;case"ORIGIN":c=this.prefix+"-PATCH";break}var d=Ext.getCmp(c+"-PANEL-"+this.fid),b=Ext.getCmp(c+"-FILE-"+this.fid);if(d.activeScroll===false){this.activeScroll=true;b.scrollTo(e)}else{d.activeScroll=false}}}}}]});ui.component.FilePanel.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._MainMenu");ui.component.MainMenu=function(a){Ext.apply(this,a);this.init();ui.component.MainMenu.superclass.constructor.call(this)};ui.component._MainMenu.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getAvailableLanguage"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"code"},Ext.data.Record.create([{name:"code",mapping:"code"},{name:"iconCls",mapping:"iconCls"},{name:"name",mapping:"name"}]))});ui.component._MainMenu.store.on("load",function(a){var b;a.each(function(c){b=new Ext.menu.Item({text:c.data.name,iconCls:"mainMenuLang flags "+c.data.iconCls,disabled:(c.data.code===phpDoc.userLang),handler:function(){XHR({params:{task:"switchLang",lang:c.data.code},success:function(){window.location.reload()}})}});Ext.getCmp("MenuLang-ct").add(b)})},this);Ext.extend(ui.component.MainMenu,Ext.menu.Menu,{id:"mainMenu",init:function(){var a=new Ext.menu.Menu({id:"MenuLang-ct"});Ext.apply(this,{items:[{text:_("Refresh all data"),disabled:(phpDoc.userLogin==="anonymous")?true:false,iconCls:"iconRefresh",handler:function(){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Verify if there is an update in progress. Please, wait..."));XHR({params:{task:"getLastUpdate"},success:function(b){Ext.getBody().unmask();var d=Ext.util.JSON.decode(b.responseText),c;if(d.lastupdate==="in_progress"){Ext.MessageBox.show({title:_("Status"),msg:_("There is currently an update in progress.<br/>You can't perform an update now."),buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.INFO})}else{c=new ui.component.SystemUpdatePrompt().show(Ext.get("acc-need-update"))}}})}},{text:_("Build tools"),handler:function(){return false},menu:new Ext.menu.Menu({items:[{text:_("Check Build"),disabled:(phpDoc.userLogin==="anonymous"),iconCls:"iconCheckBuild",handler:function(){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Verify if there is a check in progress. Please, wait..."));XHR({params:{task:"checkLockFile",lockFile:"lock_check_build_"+phpDoc.userLang},success:function(){Ext.getBody().unmask();Ext.MessageBox.show({title:_("Status"),msg:_("There is currently a check in progress for this language.<br/>You can't perform a new check now."),buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.INFO})},failure:function(){Ext.getBody().unmask();var b=new ui.component.CheckBuildPrompt().show(Ext.get("acc-need-update"))}})}},{text:_("Last failed build"),iconCls:"iconBuildStatus",handler:function(){var b=Ext.getCmp("tab-build-status");if(!b){Ext.getCmp("main-panel").add({id:"tab-build-status",title:_("Last failed build"),iconCls:"iconBuildStatus",layout:"fit",closable:true,items:[new ui.component.BuildStatus()]})}Ext.getCmp("main-panel").setActiveTab("tab-build-status")}}]})},{text:_("EN tools"),handler:function(){return false},menu:new Ext.menu.Menu({items:[{text:_("Script Check Entities"),iconCls:"iconCheckEntities",handler:function(){return false},menu:new Ext.menu.Menu({items:[{text:_("View the last result"),id:"btn-check-entities-view-last-result",iconCls:"iconTabView",handler:function(){var b=Ext.getCmp("tab-check-entities");if(!b){Ext.getCmp("main-panel").add({id:"tab-check-entities",title:_("Check Entities"),iconCls:"iconCheckEntities",layout:"fit",closable:true,items:[new ui.component.CheckEntities()]})}Ext.getCmp("main-panel").setActiveTab("tab-check-entities")}},{text:_("Run this script"),iconCls:"iconRun",handler:function(){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Verify if there is an entities check in progress. Please, wait..."));XHR({params:{task:"checkLockFile",lockFile:"lock_check_entities"},success:function(){Ext.getBody().unmask();Ext.MessageBox.show({title:_("Status"),msg:_("There is currently a check in progress for the entities.<br/>You can't perform a new check now."),buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.INFO})},failure:function(){Ext.getBody().unmask();if(!Ext.getCmp("win-check-entities")){var b=new ui.component.CheckEntitiesPrompt()}Ext.getCmp("win-check-entities").show(Ext.get("mainMenu"))}})}}]})},{text:_("Script Check doc"),iconCls:"iconCheckDoc",handler:function(){var b=Ext.getCmp("tab-check-doc");if(!b){Ext.getCmp("main-panel").add({id:"tab-check-doc",title:"Check Doc",iconCls:"iconCheckDoc",layout:"fit",closable:true,items:[new ui.component.CheckDoc()]})}Ext.getCmp("main-panel").setActiveTab("tab-check-doc")}}]})},"-",{text:_("Configure"),iconCls:"iconConf",tooltip:"<b>Configure</b> this tool",id:"winconf-btn",handler:function(){if(!Ext.getCmp("win-conf")){var b=new ui.component.EditorConf()}Ext.getCmp("win-conf").show(Ext.get("mainMenu"))}},"-",{text:_("Erase my personal data"),disabled:(phpDoc.userLogin==="anonymous")?true:false,iconCls:"iconErasePersonalData",handler:function(){Ext.MessageBox.confirm(_("Confirm"),_("This action will erase your personal data. All content about this account will be deleted definitively. Are you sure you want to do that ?"),function(b){if(b==="yes"){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait..."));XHR({params:{task:"erasePersonalData"},success:function(c){Ext.getBody().unmask();Ext.MessageBox.show({title:_("Thanks !"),msg:_("Thank you for using this application !"),icon:Ext.MessageBox.INFO,buttons:Ext.MessageBox.OK,fn:function(){window.location.href="./do/logout"}})},failure:function(c){phpDoc.winForbidden()}})}})}},"-",{id:"menuLang",text:_("Switch to language..."),handler:function(){return false},menu:a},{text:_("Log out"),iconCls:"iconLogOut",handler:function(){Ext.MessageBox.confirm(_("Confirm"),_("Are you sure you want to logout?"),function(b){if(b==="yes"){window.location.href="./do/logout"}})}},"-",{id:"tab-report-bug-btn",text:_("Report bugs"),iconCls:"iconBugs",handler:function(){if(!Ext.getCmp("main-panel").findById("tab-report-bug")){Ext.getCmp("main-panel").add({id:"tab-report-bug",xtype:"panel",title:_("Report bugs"),iconCls:"iconBugs",closable:true,layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-tab-report-bug",url:"http://bugs.php.net/"})]});Ext.getCmp("main-panel").setActiveTab("tab-report-bug")}else{Ext.getCmp("main-panel").setActiveTab("tab-report-bug")}}},{id:"tab-documentation-btn",text:_("Documentation"),iconCls:"iconBook",handler:function(){if(!Ext.getCmp("main-panel").findById("tab-documentation")){Ext.getCmp("main-panel").add({id:"tab-documentation",xtype:"panel",title:_("Documentation"),iconCls:"iconBook",closable:true,layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-tab-documentation",url:"http://wiki.php.net/doc/editor/"})]});Ext.getCmp("main-panel").setActiveTab("tab-documentation")}else{Ext.getCmp("main-panel").setActiveTab("tab-documentation")}}},"-",{id:"winabout-btn",text:_("About"),iconCls:"iconHelp",handler:function(){var b=new ui.component.About().show(Ext.get("winabout-btn"))}}]})}});Ext.namespace("ui","ui.component","ui.component._NotInENGrid");ui.component._NotInENGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"needcommit",mapping:"needcommit"}])),sortInfo:{field:"path",direction:"ASC"},groupField:"path",listeners:{datachanged:function(a){Ext.getDom("acc-notInEn-nb").innerHTML=a.getCount()}}});ui.component._NotInENGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._NotInENGrid.view=new Ext.grid.GroupingView({forceFit:true,startCollapsed:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',deferEmptyText:false,emptyText:'<div style="text-align: center;">'+_("No Files")+"</div>",getRowClass:function(a,d,c,b){if(a.data.needcommit){return"file-need-commit"}}});ui.component._NotInENGrid.menu=function(a){Ext.apply(this,a);this.init();ui.component._NotInENGrid.menu.superclass.constructor.call(this)};Ext.extend(ui.component._NotInENGrid.menu,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("View in a new Tab")+"</b>",iconCls:"iconView",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},{scope:this,text:_("Remove this file"),iconCls:"iconDelete",handler:function(){var d=this.grid.store.getAt(this.rowIdx),c=d.data.path,a=d.data.name,b;b=new ui.task.MarkDeleteTask({fpath:c,fname:a,storeRecord:d})}}]})}});ui.component.NotInENGrid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,border:false,autoExpandColumn:"name",view:ui.component._NotInENGrid.view,columns:ui.component._NotInENGrid.columns,listeners:{rowcontextmenu:function(b,d,c){c.stopEvent();b.getSelectionModel().selectRow(d);if(!b.store.getAt(d).data.needcommit){var a=new ui.component._NotInENGrid.menu({grid:b,rowIdx:d,event:c}).showAt(c.getXY())}},rowdblclick:function(b,g,f){var d=b.store.getAt(g),c=d.data.path,a=d.data.name;this.openFile(c,a)}},openFile:function(b,a){var c=Ext.util.md5("FNIEN-"+phpDoc.userLang+b+a);if(!Ext.getCmp("main-panel").findById("FNIEN-"+c)){Ext.getCmp("main-panel").add({id:"FNIEN-"+c,layout:"border",title:a,originTitle:a,iconCls:"iconTabView",closable:true,defaults:{split:true},tabTip:String.format(_("Not In EN: in {0}"),b),items:[new ui.component.FilePanel({id:"FNIEN-NotInEN-PANEL-"+c,region:"center",title:_("File: ")+b+a,prefix:"FNIEN",ftype:"NotInEN",fid:c,fpath:b,fname:a,readOnly:true,lang:phpDoc.userLang,parser:"xml",storeRecord:"",syncScroll:false})]})}Ext.getCmp("main-panel").setActiveTab("FNIEN-"+c)},initComponent:function(){Ext.apply(this,{store:new ui.component._NotInENGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesNotInEn"})})});ui.component.NotInENGrid.superclass.initComponent.call(this)}});ui.component._NotInENGrid.instance=null;ui.component.NotInENGrid.getInstance=function(a){if(!ui.component._NotInENGrid.instance){if(!a){a={}}ui.component._NotInENGrid.instance=new ui.component.NotInENGrid(a)}return ui.component._NotInENGrid.instance};Ext.namespace("ui","ui.component");ui.component.PatchPrompt=Ext.extend(Ext.Window,{title:_("Do you want to be alerted ?"),iconCls:"iconPatchAlert",layout:"form",bodyStyle:"padding: 5px;",labelWidth:50,width:350,height:150,resizable:false,modal:true,autoScroll:true,initComponent:function(){Ext.apply(this,{items:[{xtype:"panel",baseCls:"x-plain",bodyStyle:"padding-bottom: 10px;",html:_("If you want to be notified when your patch will be dealt with, thank you to leave an email address below.")},{id:"patch-email-alert",xtype:"textfield",name:"patch-email-alert",fieldLabel:_("Email"),anchor:"100%",value:this.defaultEmail}],buttons:[{scope:this,text:_("Save"),handler:function(){var a=new ui.task.SavePatchTask({prefix:this.prefix,fid:this.fid,ftype:this.ftype,lang:this.lang,fpath:this.fpath,fname:this.fname,email:Ext.getCmp("patch-email-alert").getValue()});this.close()}},{scope:this,text:_("Cancel"),handler:function(){this.close()}}]});ui.component.PatchPrompt.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component","ui.component._PendingCommitGrid");ui.component._PendingCommitGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"by",mapping:"by"},{name:"date",mapping:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"type",mapping:"type"}])),sortInfo:{field:"name",direction:"ASC"},groupField:"path",listeners:{add:function(a){Ext.getDom("acc-pendingCommit-nb").innerHTML=a.getCount()},datachanged:function(a){Ext.getDom("acc-pendingCommit-nb").innerHTML=a.getCount()}}});ui.component._PendingCommitGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Modified by"),width:45,sortable:true,dataIndex:"by"},{header:_("Date"),width:45,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._PendingCommitGrid.view=new Ext.grid.GroupingView({forceFit:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',emptyText:'<div style="text-align: center;">'+_("No pending for Commit")+"</div>",deferEmptyText:false,getRowClass:function(a,d,c,b){if(a.data.type==="update"){return"file-needcommit-update"}if(a.data.type==="delete"){return"file-needcommit-delete"}if(a.data.type==="new"){return"file-needcommit-new"}}});Ext.namespace("ui.component._PendingCommitGrid.menu");ui.component._PendingCommitGrid.menu.common=function(a){Ext.apply(this,a);this.init();ui.component._PendingCommitGrid.menu.common.superclass.constructor.call(this)};Ext.extend(ui.component._PendingCommitGrid.menu.common,Ext.menu.Item,{init:function(){Ext.apply(this,{text:_("Commit..."),iconCls:"iconCommitFileVcs",disabled:(phpDoc.userLogin==="anonymous"),handler:function(){return false},menu:new Ext.menu.Menu({items:[{scope:this,text:_("...this file"),iconCls:"iconCommitFileVcs",handler:function(){var a=ui.component.PendingCommitGrid.getInstance().store.getAt(this.rowIdx),d=a.data.id,c=a.data.path,f=a.data.name,e=Ext.util.md5(c+f),b;b=new ui.component.CommitPrompt({files:[{fid:e,fpath:c,fname:f,fdbid:d}]}).show()}},{scope:this,text:_("...all files modified by me"),iconCls:"iconCommitFileVcs",handler:function(){var c=[],b=ui.component.PendingCommitGrid.getInstance(),a;b.store.each(function(d){if(d.data.by===phpDoc.userLogin){var f=d.data.id,e=d.data.path,h=d.data.name,g=Ext.util.md5(e+h);c.push({fid:g,fpath:e,fname:h,fdbid:f})}});a=new ui.component.CommitPrompt({files:c}).show()}},{scope:this,text:_("...all files modified"),iconCls:"iconCommitFileVcs",handler:function(){var c=[],b=ui.component.PendingCommitGrid.getInstance(),a;b.store.each(function(d){var f=d.data.id,e=d.data.path,h=d.data.name,g=Ext.util.md5(e+h);c.push({fid:g,fpath:e,fname:h,fdbid:f})});a=new ui.component.CommitPrompt({files:c}).show()}}]})})}});ui.component._PendingCommitGrid.menu.update=function(a){Ext.apply(this,a);this.init();ui.component._PendingCommitGrid.menu.update.superclass.constructor.call(this)};Ext.extend(ui.component._PendingCommitGrid.menu.update,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconPendingCommit",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},"-",{scope:this,text:_("View Diff"),iconCls:"iconViewDiff",handler:function(){if(!Ext.getCmp("main-panel").findById("diff_panel_pending_"+this.rowIdx)){Ext.getCmp("main-panel").add({xtype:"panel",id:"diff_panel_pending_"+this.rowIdx,iconCls:"iconTabLink",title:_("Diff"),tabTip:String.format(_("Diff for file: {0}"),this.fpath+this.fname),closable:true,autoScroll:true,html:'<div id="diff_content_pending_'+this.rowIdx+'" class="diff-content"></div>'});Ext.get("diff_panel_pending_"+this.rowIdx).mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait..."));XHR({scope:this,params:{task:"getDiff",FilePath:this.fpath,FileName:this.fname},success:function(a){var b=Ext.util.JSON.decode(a.responseText);Ext.get("diff_content_pending_"+this.rowIdx).dom.innerHTML=b.content;Ext.get("diff_panel_pending_"+this.rowIdx).unmask()}})}Ext.getCmp("main-panel").setActiveTab("diff_panel_pending_"+this.rowIdx)}},{scope:this,text:_("Download the diff as a patch"),iconCls:"iconCommitFileVcs",handler:function(){window.location.href="./do/downloadPatch?FilePath="+this.fpath+"&FileName="+this.fname}},"-",{scope:this,text:_("Clear this change"),iconCls:"iconPageDelete",disabled:(phpDoc.userLogin==="anonymous"),handler:function(){var a=new ui.task.ClearLocalChangeTask({storeRecord:this.grid.store.getAt(this.rowIdx),ftype:"update",fpath:this.fpath,fname:this.fname})}},"-",new ui.component._PendingCommitGrid.menu.common({rowIdx:this.rowIdx})]})}});ui.component._PendingCommitGrid.menu.del=function(a){Ext.apply(this,a);this.init();ui.component._PendingCommitGrid.menu.del.superclass.constructor.call(this)};Ext.extend(ui.component._PendingCommitGrid.menu.del,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("View in a new Tab")+"</b>",iconCls:"iconPendingCommit",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},{scope:this,text:_("Cancel this deletion"),iconCls:"iconPageDelete",disabled:(phpDoc.userLogin==="anonymous"),handler:function(){var c=this.grid.store.getAt(this.rowIdx),b=c.data.path,a=c.data.name;tmp=new ui.task.ClearLocalChangeTask({storeRecord:c,ftype:"delete",fpath:b,fname:a})}},"-",new ui.component._PendingCommitGrid.menu.common({rowIdx:this.rowIdx})]})}});ui.component._PendingCommitGrid.menu.newFile=function(a){Ext.apply(this,a);this.init();ui.component._PendingCommitGrid.menu.newFile.superclass.constructor.call(this)};Ext.extend(ui.component._PendingCommitGrid.menu.newFile,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconPendingCommit",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},"-",{scope:this,text:_("Clear this change"),iconCls:"iconPageDelete",disabled:(phpDoc.userLogin==="anonymous"),handler:function(){var d=this.grid.store.getAt(this.rowIdx),c=d.data.path,a=d.data.name,b=new ui.task.ClearLocalChangeTask({storeRecord:d,ftype:"new",fpath:c,fname:a})}},"-",new ui.component._PendingCommitGrid.menu.common({rowIdx:this.rowIdx})]})}});ui.component.PendingCommitGrid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,border:false,autoExpandColumn:"name",columns:ui.component._PendingCommitGrid.columns,view:ui.component._PendingCommitGrid.view,listeners:{rowcontextmenu:function(d,i,h){h.stopEvent();var g=d.store.getAt(i),b=g.data.type,f=g.data.path,a=g.data.name,c;d.getSelectionModel().selectRow(i);if(b==="new"){c=new ui.component._PendingCommitGrid.menu.newFile({grid:d,rowIdx:i,event:h}).showAt(h.getXY())}if(b==="delete"){c=new ui.component._PendingCommitGrid.menu.del({grid:d,rowIdx:i,event:h}).showAt(h.getXY())}if(b==="update"){c=new ui.component._PendingCommitGrid.menu.update({fpath:f,fname:a,grid:d,rowIdx:i,event:h}).showAt(h.getXY())}},rowdblclick:function(b,i,g){var h=b.store.getAt(i),j=h.data.type,a=h.data.path,c=h.data.name,d,f,k;if(j==="new"){f=a.split("/");d=f[0];f.shift();a="/"+f.join("/");ui.component.PendingTranslateGrid.getInstance().store.each(function(e){if((e.data.path)===a&&e.data.name===c){ui.component.PendingTranslateGrid.getInstance().openFile(e.data.id);return}})}if(j==="update"){f=a.split("/");d=f[0];f.shift();a="/"+f.join("/");if(d==="en"){ui.component.RepositoryTree.getInstance().openFile(d+a,c)}else{k=false;ui.component.StaleFileGrid.getInstance().store.each(function(e){if((e.data.path)===a&&e.data.name===c){ui.component.StaleFileGrid.getInstance().openFile(e.data.id);k=true;return}});if(!k){ui.component.ErrorFileGrid.getInstance().store.each(function(e){if((e.data.path)===a&&e.data.name===c){ui.component.ErrorFileGrid.getInstance().openFile(e.data.id);k=true;return}})}if(!k){ui.component.PendingReviewGrid.getInstance().store.each(function(e){if((e.data.path)===a&&e.data.name===c){ui.component.PendingReviewGrid.getInstance().openFile(e.data.id);k=true;return}})}if(!k){ui.component.RepositoryTree.getInstance().openFile(d+a,c)}}}if(j==="delete"){f=a.split("/");f.shift();ui.component.NotInENGrid.getInstance().openFile("/"+f.join("/"),c)}}},initComponent:function(){Ext.apply(this,{store:new ui.component._PendingCommitGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesPendingCommit"})})});ui.component.PendingCommitGrid.superclass.initComponent.call(this)},addRecord:function(d,a,e,c){var b=false;this.store.each(function(f){if(f.data.path===a&&f.data.name===e){b=true}});if(!b){this.store.insert(0,new this.store.recordType({id:d,path:a,name:e,by:phpDoc.userLogin,date:new Date(),type:c}));this.store.groupBy("path",true)}}});ui.component._PendingCommitGrid.instance=null;ui.component.PendingCommitGrid.getInstance=function(a){if(!ui.component._PendingCommitGrid.instance){if(!a){a={}}ui.component._PendingCommitGrid.instance=new ui.component.PendingCommitGrid(a)}return ui.component._PendingCommitGrid.instance};Ext.namespace("ui","ui.component","ui.component._PendingPatchGrid");ui.component._PendingPatchGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"by",mapping:"by"},{name:"uniqID",mapping:"uniqID"},{name:"date",mapping:"date",type:"date",dateFormat:"Y-m-d H:i:s"}])),sortInfo:{field:"name",direction:"ASC"},groupField:"path",listeners:{add:function(a){Ext.getDom("acc-pendingPatch-nb").innerHTML=a.getCount()},datachanged:function(a){Ext.getDom("acc-pendingPatch-nb").innerHTML=a.getCount()}}});ui.component._PendingPatchGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Posted by"),width:45,sortable:true,dataIndex:"by"},{header:_("Date"),width:45,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._PendingPatchGrid.view=new Ext.grid.GroupingView({forceFit:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',emptyText:'<div style="text-align: center;">'+_("No pending Patch")+"</div>",deferEmptyText:false});ui.component._PendingPatchGrid.menu=function(a){Ext.apply(this,a);this.init();ui.component._PendingPatchGrid.menu.superclass.constructor.call(this)};Ext.extend(ui.component._PendingPatchGrid.menu,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"PendingPatch",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},"-",{scope:this,text:_("Reject this patch"),disabled:(phpDoc.userLogin==="anonymous"),iconCls:"iconPageDelete",handler:function(){var a=new ui.task.RejectPatchTask({fid:this.fid,fuid:this.fuid,storeRecord:this.grid.store.getAt(this.rowIdx)})}}]})}});ui.component.PendingPatchGrid=Ext.extend(Ext.grid.GridPanel,{store:ui.component._PendingPatchGrid.store,columns:ui.component._PendingPatchGrid.columns,view:ui.component._PendingPatchGrid.view,loadMask:true,border:false,autoExpandColumn:"name",listeners:{rowcontextmenu:function(c,i,h){h.stopEvent();var d=c.store.getAt(i).data.path,a=c.store.getAt(i).data.name,f=c.store.getAt(i).data.uniqID,g=Ext.util.md5("PP-"+f+d+a),b;c.getSelectionModel().selectRow(i);b=new ui.component._PendingPatchGrid.menu({grid:c,rowIdx:i,event:h,fid:g,fpath:d,fname:a,fuid:f}).showAt(h.getXY())},rowdblclick:function(b,i,h){var f=b.store.getAt(i),c=f.data.path,a=f.data.name,d=f.data.uniqID,g=Ext.util.md5("PP-"+d+c+a);if(!Ext.getCmp("main-panel").findById("PP-"+g)){Ext.getCmp("main-panel").add({id:"PP-"+g,layout:"border",iconCls:"PendingPatch",title:a,originTitle:a,tabTip:String.format(_("Patch for {0}"),c+a),closable:true,defaults:{split:true},items:[{xtype:"panel",id:"PP-patch-desc-"+g,title:_("Patch content"),layout:"fit",region:"north",border:false,height:250,autoScroll:true,collapsible:true,collapsed:true,html:'<div id="diff_content_'+g+'" class="diff-content"></div>',listeners:{render:function(){XHR({params:{task:"getDiff",FilePath:c,FileName:a,type:"patch",uniqID:d},success:function(e){var j=Ext.util.JSON.decode(e.responseText);Ext.get("diff_content_"+g).dom.innerHTML=j.content}})}}},{region:"west",xtype:"panel",title:_("VCSLog"),layout:"fit",bodyBorder:false,collapsible:true,collapsed:true,width:375,items:{xtype:"tabpanel",activeTab:0,tabPosition:"bottom",defaults:{autoScroll:true},items:new ui.component.VCSLogGrid({layout:"fit",title:_("Log"),prefix:"PP",fid:g,fpath:c,fname:a,loadStore:phpDoc.userConf.patchDisplayLog})}},new ui.component.FilePanel({id:"PP-PATCH-PANEL-"+g,region:"center",title:String.format(_("Proposed Patch for {0}"),c+a),prefix:"PP",ftype:"PATCH",fid:g,fpath:c,fname:a,isPatch:true,fuid:d,parser:"xml",storeRecord:f,syncScrollCB:true,syncScroll:true,syncScrollConf:"patchScrollbars"}),new ui.component.FilePanel({id:"PP-ORIGIN-PANEL-"+g,region:"east",width:575,title:_("Original File: ")+c+a,prefix:"PP",ftype:"ORIGIN",fid:g,fpath:c,fname:a,lang:"",readOnly:true,parser:"xml",syncScroll:true,syncScrollConf:"patchScrollbars"})]});if(Ext.getCmp("PP-"+g).getLayout().north.collapsedEl){Ext.getCmp("PP-"+g).getLayout().north.collapsedEl.addClass("x-layout-collapsed-east-patch-desc")}}Ext.getCmp("main-panel").setActiveTab("PP-"+g)}},initComponent:function(){Ext.apply(this,{store:new ui.component._PendingPatchGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesPendingPatch"})})});ui.component.PendingPatchGrid.superclass.initComponent.call(this)}});ui.component._PendingPatchGrid.instance=null;ui.component.PendingPatchGrid.getInstance=function(a){if(!ui.component._PendingPatchGrid.instance){if(!a){a={}}ui.component._PendingPatchGrid.instance=new ui.component.PendingPatchGrid(a)}return ui.component._PendingPatchGrid.instance};Ext.namespace("ui","ui.component","ui.component._PendingReviewGrid");ui.component._PendingReviewGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"reviewed",mapping:"reviewed"},{name:"maintainer",mapping:"maintainer"},{name:"needcommit",mapping:"needcommit"}])),sortInfo:{field:"name",direction:"ASC"},groupField:"path",listeners:{datachanged:function(a){Ext.getDom("acc-need-reviewed-nb").innerHTML=a.getCount()}}});ui.component._PendingReviewGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Reviewed"),width:45,sortable:true,dataIndex:"reviewed"},{header:_("Maintainer"),width:45,sortable:true,dataIndex:"maintainer"},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._PendingReviewGrid.view=new Ext.grid.GroupingView({forceFit:true,startCollapsed:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',getRowClass:function(a,d,c,b){if(a.data.needcommit){return"file-need-commit"}},deferEmptyText:false,emptyText:'<div style="text-align: center;">'+_("No Files")+"</div>"});Ext.namespace("ui.component._PendingReviewGrid.menu");ui.component._PendingReviewGrid.menu.diff=function(a){Ext.apply(this,a);this.init();ui.component._PendingReviewGrid.menu.diff.superclass.constructor.call(this)};Ext.extend(ui.component._PendingReviewGrid.menu.diff,Ext.menu.Item,{text:_("View Diff"),iconCls:"iconViewDiff",init:function(){Ext.apply(this,{handler:function(){Ext.getCmp("main-panel").add({xtype:"panel",id:"diff_panel_"+this.rowIdx,title:_("Diff"),tabTip:_("Diff"),closable:true,autoScroll:true,iconCls:"iconTabLink",html:'<div id="diff_content_'+this.rowIdx+'" class="diff-content"></div>'});Ext.getCmp("main-panel").setActiveTab("diff_panel_"+this.rowIdx);Ext.get("diff_panel_"+this.rowIdx).mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Please, wait..."));XHR({scope:this,params:{task:"getDiff",FilePath:phpDoc.userLang+this.fpath,FileName:this.fname},success:function(a){var b=Ext.util.JSON.decode(a.responseText);Ext.get("diff_content_"+this.rowIdx).dom.innerHTML=b.content;Ext.get("diff_panel_"+this.rowIdx).unmask()}})}})}});ui.component._PendingReviewGrid.menu.group=function(a){Ext.apply(this,a);this.init();ui.component._PendingReviewGrid.menu.group.superclass.constructor.call(this)};Ext.extend(ui.component._PendingReviewGrid.menu.group,Ext.menu.Item,{iconCls:"iconViewDiff",init:function(){Ext.apply(this,{text:String.format(_("Open all files about {0} extension"),this.gname),handler:function(){Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+String.format(_("Open all files about {0} extension"),this.gname)+". "+_("Please, wait..."));XHR({params:{task:"getAllFilesAboutExtension",ExtName:this.gname},success:function(a){var c=Ext.util.JSON.decode(a.responseText);phpDoc.filePendingOpen=[];for(var b=0;b<c.files.length;b=b+1){phpDoc.filePendingOpen[b]={fpath:phpDoc.userLang+c.files[b].path,fname:c.files[b].name}}ui.component.RepositoryTree.getInstance().openFile(phpDoc.filePendingOpen[0].fpath,phpDoc.filePendingOpen[0].fname);Ext.getBody().unmask()}})}})}});ui.component._PendingReviewGrid.menu.main=function(a){Ext.apply(this,a);this.init();ui.component._PendingReviewGrid.menu.main.superclass.constructor.call(this)};Ext.extend(ui.component._PendingReviewGrid.menu.main,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconFilesNeedReviewed",scope:this,handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},new ui.component._PendingReviewGrid.menu.diff({fpath:this.fpath,fname:this.fname,rowIdx:this.rowIdx,hidden:this.hideDiff}),"-",new ui.component._PendingReviewGrid.menu.group({gname:this.gname,hidden:this.hideGroup})]})}});ui.component.PendingReviewGrid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,border:false,autoExpandColumn:"name",columns:ui.component._PendingReviewGrid.columns,view:ui.component._PendingReviewGrid.view,listeners:{rowcontextmenu:function(c,i,g){g.stopEvent();var f=c.store.getAt(i),d=f.data.path,a=f.data.name,h=d.split("/"),b;c.getSelectionModel().selectRow(i);b=new ui.component._PendingReviewGrid.menu.main({grid:c,rowIdx:i,event:g,fpath:d,fname:a,hideDiff:(!f.data.needcommit),hideGroup:(h[1]!=="reference"),gname:h[2]}).showAt(g.getXY())},rowdblclick:function(a,c,b){this.openFile(a.store.getAt(c).data.id)}},openFile:function(e){var c=this.store.getById(e),b=c.data.path,a=c.data.name,d=Ext.util.md5("FNR-"+phpDoc.userLang+b+a);if(!Ext.getCmp("main-panel").findById("FNR-"+d)){Ext.getCmp("main-panel").add({id:"FNR-"+d,title:a,layout:"border",iconCls:"iconTabNeedReviewed",closable:true,originTitle:a,defaults:{split:true},tabTip:String.format(_("Need Reviewed in: {0}"),b),listeners:{resize:function(f){Ext.getCmp("FNR-EN-PANEL-"+d).setWidth(f.getWidth()/2)}},items:[{region:"west",xtype:"panel",title:_("VCSLog"),collapsible:true,collapsed:true,layout:"fit",bodyBorder:false,width:375,items:{xtype:"tabpanel",activeTab:0,tabPosition:"bottom",defaults:{autoScroll:true},items:[new ui.component.VCSLogGrid({layout:"fit",title:phpDoc.userLang,prefix:"FNR-LANG",fid:d,fpath:phpDoc.userLang+b,fname:a,loadStore:phpDoc.userConf.reviewedDisplaylog}),new ui.component.VCSLogGrid({layout:"fit",title:"en",prefix:"FNR-EN",fid:d,fpath:"en"+b,fname:a,loadStore:phpDoc.userConf.reviewedDisplaylog})]}},new ui.component.FilePanel({id:"FNR-LANG-PANEL-"+d,region:"center",title:String.format(_("{0} File: "),phpDoc.userLang)+b+a,prefix:"FNR",ftype:"LANG",fid:d,fpath:b,fname:a,lang:phpDoc.userLang,parser:"xml",storeRecord:c,syncScrollCB:true,syncScroll:true,syncScrollConf:"reviewedScrollbars"}),new ui.component.FilePanel({id:"FNR-EN-PANEL-"+d,region:"east",title:_("en File: ")+b+a,prefix:"FNR",ftype:"EN",fid:d,fpath:b,fname:a,lang:"en",parser:"xml",storeRecord:c,syncScroll:true,syncScrollConf:"reviewedScrollbars"})]})}Ext.getCmp("main-panel").setActiveTab("FNR-"+d)},initComponent:function(){Ext.apply(this,{store:new ui.component._PendingReviewGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesNeedReviewed"})}),tbar:[_("Filter: ")," ",new Ext.form.TwinTriggerField({id:"FNR-filter",width:180,hideTrigger1:true,enableKeyEvents:true,validateOnBlur:false,validationEvent:false,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",listeners:{keypress:function(b,a){if(a.getKey()==a.ENTER){this.onTrigger2Click()}}},onTrigger1Click:function(){this.setValue("");this.triggers[0].hide();ui.component._PendingReviewGrid.instance.store.clearFilter()},onTrigger2Click:function(){var a=this.getValue();if(a===""||a.length<3){this.markInvalid(_("Your filter must contain at least 3 characters"));return}this.clearInvalid();this.triggers[0].show();ui.component._PendingReviewGrid.instance.store.filter("maintainer",a)}})]});ui.component.PendingReviewGrid.superclass.initComponent.call(this)}});ui.component._PendingReviewGrid.instance=null;ui.component.PendingReviewGrid.getInstance=function(a){if(!ui.component._PendingReviewGrid.instance){if(!a){a={}}ui.component._PendingReviewGrid.instance=new ui.component.PendingReviewGrid(a)}return ui.component._PendingReviewGrid.instance};Ext.namespace("ui","ui.component","ui.component._PendingTranslateGrid");ui.component._PendingTranslateGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"needcommit",mapping:"needcommit"}])),sortInfo:{field:"name",direction:"ASC"},groupField:"path",listeners:{datachanged:function(a){Ext.getDom("acc-need-translate-nb").innerHTML=a.getCount()}}});ui.component._PendingTranslateGrid.view=new Ext.grid.GroupingView({forceFit:true,startCollapsed:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',deferEmptyText:false,getRowClass:function(a,d,c,b){if(a.data.needcommit){return"file-need-commit"}},emptyText:'<div style="text-align: center;">'+_("No Files")+"</div>"});ui.component._PendingTranslateGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._PendingTranslateGrid.menu=function(a){Ext.apply(this,a);this.init();ui.component._StaleFileGrid.menu.superclass.constructor.call(this)};Ext.extend(ui.component._PendingTranslateGrid.menu,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconTabNeedTranslate",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}}]})}});ui.component.PendingTranslateGrid=Ext.extend(Ext.grid.GridPanel,{view:ui.component._PendingTranslateGrid.view,loadMask:true,autoExpandColumn:"name",border:false,listeners:{rowcontextmenu:function(c,g,f){f.stopEvent();var d=c.store.getAt(g).data.path,a=c.store.getAt(g).data.name,b;c.getSelectionModel().selectRow(g);b=new ui.component._PendingTranslateGrid.menu({hideCommit:(c.store.getAt(g).data.needcommit===false),grid:c,event:f,rowIdx:g,lang:phpDoc.userLang,fpath:d,fname:a}).showAt(f.getXY())},rowdblclick:function(a,c,b){this.openFile(a.store.getAt(c).data.id)}},openFile:function(f){var c=this.store.getById(f),b=c.data.path,a=c.data.name,e=Ext.util.md5("FNU-"+phpDoc.userLang+b+a),d="";if(!Ext.getCmp("main-panel").findById("FNT-"+e)){Ext.getCmp("main-panel").add({id:"FNT-"+e,layout:"border",title:a,originTitle:a,iconCls:"iconTabNeedTranslate",closable:true,defaults:{split:true},tabTip:String.format(_("Need Translate: in {0}"),b),items:[new ui.component.FilePanel({id:"FNT-TRANS-PANEL-"+e,region:"center",title:_("New File: ")+phpDoc.userLang+b+a,isTrans:true,prefix:"FNT",ftype:"TRANS",fid:e,fpath:b,fname:a,lang:phpDoc.userLang,parser:"xml",storeRecord:c,syncScrollCB:false})]})}Ext.getCmp("main-panel").setActiveTab("FNT-"+e)},initComponent:function(){Ext.apply(this,{columns:ui.component._PendingTranslateGrid.columns,store:new ui.component._PendingTranslateGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesNeedTranslate"})}),tbar:[_("Filter: ")," ",new Ext.form.TwinTriggerField({id:"FNT-filter",width:180,hideTrigger1:true,enableKeyEvents:true,validateOnBlur:false,validationEvent:false,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",listeners:{keypress:function(b,a){if(a.getKey()==a.ENTER){this.onTrigger2Click()}}},onTrigger1Click:function(){this.setValue("");this.triggers[0].hide();ui.component._PendingTranslateGrid.instance.store.clearFilter()},onTrigger2Click:function(){var a=this.getValue();if(a===""||a.length<3){this.markInvalid(_("Your filter must contain at least 3 characters"));return}this.clearInvalid();this.triggers[0].show();ui.component._PendingTranslateGrid.instance.store.filter("maintainer",a)}})]});ui.component.PendingTranslateGrid.superclass.initComponent.call(this)}});ui.component._PendingTranslateGrid.instance=null;ui.component.PendingTranslateGrid.getInstance=function(a){if(!ui.component._PendingTranslateGrid.instance){if(!a){a={}}ui.component._PendingTranslateGrid.instance=new ui.component.PendingTranslateGrid(a)}return ui.component._PendingTranslateGrid.instance};Ext.namespace("ui","ui.component","ui.component._PortletBugs");ui.component._PortletBugs.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getOpenBugs"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"title",mapping:"title",},{name:"link",mapping:"link"},{name:"description",mapping:"description"}]))});ui.component._PortletBugs.gridFormatTitle=function(a){return String.format('<div class="topic"><b>{0}</b></div>',a)};ui.component._PortletBugs.gridColumns=[{id:"GridBugTitle",header:_("Title"),sortable:true,dataIndex:"title",renderer:ui.component._PortletBugs.gridFormatTitle}];ui.component._PortletBugs.gridView=new Ext.grid.GridView({forceFit:true,emptyText:'<div style="text-align: center">'+_("You must manually load this data.<br>Use the refresh button !")+"</div>",deferEmptyText:false,enableRowBody:true,showPreview:false,getRowClass:function(a,d,c,b){if(this.showPreview){c.body="<p>"+a.data.description+"</p>";return"x-grid3-row-expanded"}return"x-grid3-row-collapsed"}});ui.component._PortletBugs.grid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,autoScroll:true,height:250,autoExpandColumn:"GridBugTitle",id:"PortletBugs-grid-id",store:ui.component._PortletBugs.store,columns:ui.component._PortletBugs.gridColumns,view:ui.component._PortletBugs.gridView,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),onRowDblClick:function(c,g,f){var a=c.store.getAt(g).data.id,b=c.store.getAt(g).data.link,d=c.store.getAt(g).data.title;if(!Ext.getCmp("main-panel").findById("bugs-"+a)){Ext.getCmp("main-panel").add({id:"bugs-"+a,xtype:"panel",title:Ext.util.Format.substr(d,0,20)+"...",tabTip:d,iconCls:"iconBugs",closable:true,layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-bugs-"+a,url:b})]})}Ext.getCmp("main-panel").setActiveTab("bugs-"+a)},onContextClick:function(a,c,b){if(!this.menu){this.menu=new Ext.menu.Menu({id:"submenu-bugs",items:[{scope:this,text:"<b>"+_("Open in a new Tab")+"</b>",iconCls:"iconOpenInTab",handler:function(){this.fireEvent("rowdblclick",a,this.ctxIndex,b);this.menu.hide()}},"-",{scope:this,text:_("Refresh this grid"),iconCls:"iconRefresh",handler:function(){this.ctxIndex=null;ui.component._PortletBugs.reloadData()}}]})}this.getSelectionModel().selectRow(c);b.stopEvent();if(this.ctxIndex){this.ctxIndex=null}this.ctxIndex=c;this.menu.showAt(b.getXY())},togglePreview:function(a){this.view.showPreview=a;this.view.refresh()},initComponent:function(a){this.tbar=[{text:_("Summary"),pressed:false,enableToggle:true,iconCls:"iconSummary",scope:this,toggleHandler:function(b,c){this.togglePreview(c)}}];ui.component._PortletBugs.grid.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowcontextmenu",this.onContextClick,this);this.on("rowdblclick",this.onRowDblClick,this)}});ui.component._PortletBugs.reloadData=function(){ui.component._PortletBugs.store.reload({callback:function(a,c,b){if(!b){Ext.getCmp("PortletBugs-grid-id").getView().mainBody.update('<div id="PortletBugs-grid-defaultMess-id" style="text-align: center" class="x-grid-empty">'+_("Error when loading open bugs from Php.net !")+"</div>");Ext.get("PortletBugs-grid-defaultMess-id").highlight()}else{if(ui.component._PortletBugs.store.getTotalCount()==0){Ext.getCmp("PortletBugs-grid-id").getView().mainBody.update('<div id="PortletBugs-grid-defaultMess-id" style="text-align: center" class="x-grid-empty">'+_("No open Bugs")+"</div>");Ext.get("PortletBugs-grid-defaultMess-id").highlight()}}}})};ui.component.PortletBugs=Ext.extend(Ext.ux.Portlet,{title:"",iconCls:"iconBugs",layout:"fit",store:ui.component._PortletBugs.store,reloadData:ui.component._PortletBugs.reloadData,tools:[{id:"refresh",qtip:_("Refresh this grid"),handler:function(){ui.component._PortletBugs.reloadData()}}],initComponent:function(a){ui.component.PortletBugs.superclass.initComponent.call(this);Ext.apply(this,a);this.title=String.format(_("Open bugs for {0}"),"doc-"+this.lang);this.add(new ui.component._PortletBugs.grid())}});ui.component._PortletBugs.instance=null;ui.component.PortletBugs.getInstance=function(a){if(!ui.component._PortletBugs.instance){if(!a){a={}}ui.component._PortletBugs.instance=new ui.component.PortletBugs(a)}return ui.component._PortletBugs.instance};Ext.namespace("ui","ui.component","ui.component._PortletLocalMail");ui.component._PortletLocalMail.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getLastNews"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"title",mapping:"title"},{name:"link",mapping:"link"},{name:"description",mapping:"description"},{name:"pubDate",mapping:"pubDate",type:"date",dateFormat:"Y/m/d H:i:s"}]))});ui.component._PortletLocalMail.store.setDefaultSort("pubDate","desc");ui.component._PortletLocalMail.columns=[new Ext.grid.RowNumberer(),{id:"GridMailingTitle",header:_("Title"),sortable:true,dataIndex:"title"},{header:_("By"),width:100,sortable:true,dataIndex:"description"},{header:_("Date"),width:100,sortable:true,dataIndex:"pubDate",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))}];ui.component._PortletLocalMail.grid=Ext.extend(Ext.grid.GridPanel,{autoHeight:true,loadMask:true,autoScroll:true,height:250,autoExpandColumn:"GridMailingTitle",id:"PortletLocalMail-grid-id",store:ui.component._PortletLocalMail.store,columns:ui.component._PortletLocalMail.columns,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),view:new Ext.grid.GridView({forceFit:true,enableRowBody:true,ignoreAdd:true,emptyText:'<div style="text-align: center">'+_("You must manually load this data.<br>Use the refresh button !")+"</div>",deferEmptyText:false}),onRowDblClick:function(b,g,d){var a=b.store.getAt(g).data.pubDate,f=b.store.getAt(g).data.link,c=b.store.getAt(g).data.title;if(!Ext.getCmp("main-panel").findById("mail-"+a)){Ext.getCmp("main-panel").add({xtype:"panel",id:"mail-"+a,title:Ext.util.Format.substr(c,0,20)+"...",tabTip:c,iconCls:"iconMailing",closable:true,layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-mail-"+a,url:f})]})}Ext.getCmp("main-panel").setActiveTab("mail-"+a)},onContextClick:function(a,c,b){if(!this.menu){this.menu=new Ext.menu.Menu({id:"submenu-mail",items:[{scope:this,text:"<b>"+_("Open in a new Tab")+"</b>",iconCls:"iconOpenInTab",handler:function(){this.fireEvent("rowdblclick",a,this.ctxIndex,b);this.menu.hide()}},"-",{scope:this,text:_("Refresh this grid"),iconCls:"iconRefresh",handler:function(){this.ctxIndex=null;ui.component._PortletLocalMail.reloadData()}}]})}this.getSelectionModel().selectRow(c);b.stopEvent();if(this.ctxIndex){this.ctxIndex=null}this.ctxIndex=c;this.menu.showAt(b.getXY())},initComponent:function(a){ui.component._PortletLocalMail.grid.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowcontextmenu",this.onContextClick,this);this.on("rowdblclick",this.onRowDblClick,this)}});ui.component._PortletLocalMail.reloadData=function(){ui.component._PortletLocalMail.store.reload({callback:function(a,c,b){if(!b){Ext.getCmp("PortletLocalMail-grid-id").getView().mainBody.update('<div id="PortletLocalMail-grid-defaultMess-id" style="text-align: center" class="x-grid-empty">'+_("Error when loading mails from this mailing list !")+"</div>");Ext.get("PortletLocalMail-grid-defaultMess-id").highlight()}}})};ui.component.PortletLocalMail=Ext.extend(Ext.ux.Portlet,{title:"",iconCls:"iconMailing",layout:"fit",store:ui.component._PortletLocalMail.store,reloadData:ui.component._PortletLocalMail.reloadData,tools:[{id:"refresh",qtip:_("Refresh this grid"),handler:function(){ui.component._PortletLocalMail.reloadData()}}],initComponent:function(a){ui.component.PortletLocalMail.superclass.initComponent.call(this);Ext.apply(this,a);this.title=String.format(_("Mails from {0}"),"doc-"+this.lang);this.add(new ui.component._PortletLocalMail.grid())}});ui.component._PortletLocalMail.instance=null;ui.component.PortletLocalMail.getInstance=function(a){if(!ui.component._PortletLocalMail.instance){if(!a){a={}}ui.component._PortletLocalMail.instance=new ui.component.PortletLocalMail(a)}return ui.component._PortletLocalMail.instance};Ext.namespace("ui","ui.component","ui.component._PortletSummary");ui.component._PortletSummary.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getSummaryInfo"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"libel",mapping:"libel"},{name:"nbFiles",mapping:"nbFiles"},{name:"percentFiles",mapping:"percentFiles"},{name:"sizeFiles",mapping:"sizeFiles"},{name:"percentSize",mapping:"percentSize"}])),listeners:{load:function(){this.each(function(a){switch(a.id){case 1:a.set("libel",_("Up to date files"));break;case 2:a.set("libel",_("Stale files"));break;case 3:a.set("libel",_("Files available for translation"));break;case 4:a.set("libel",_("Total"));break;default:a.set("libel","");break}a.commit()})}}});ui.component._PortletSummary.gridColumns=[new Ext.grid.RowNumberer(),{id:"StatusType",header:_("File status type"),width:180,sortable:true,dataIndex:"libel"},{header:_("Number of files"),width:110,sortable:true,dataIndex:"nbFiles"},{header:_("Percent of files"),width:110,sortable:true,dataIndex:"percentFiles"},{header:_("Size of files (kB)"),width:110,sortable:true,dataIndex:"sizeFiles"},{header:_("Percent of size"),width:110,sortable:true,dataIndex:"percentSize"}];ui.component._PortletSummary.gridView=new Ext.grid.GridView({getRowClass:function(a,d,c,b){switch(a.data.id){case 1:return"summary_1";case 2:return"summary_2";case 3:return"summary_3";case 4:return"summary_4";default:return""}}});ui.component._PortletSummary.grid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,autoScroll:true,autoHeight:true,store:ui.component._PortletSummary.store,columns:ui.component._PortletSummary.gridColumns,view:ui.component._PortletSummary.gridView,listeners:{rowdblclick:function(a,d,b){var c=a.store.getAt(d).data.id;if(c===2){Ext.getCmp("acc-need-update").expand()}if(c===3){Ext.getCmp("acc-need-translate").expand()}}},initComponent:function(a){ui.component._PortletSummary.grid.superclass.initComponent.call(this);Ext.apply(this,a)}});ui.component.PortletSummary=Ext.extend(Ext.ux.Portlet,{title:_("Summary"),iconCls:"",layout:"fit",store:ui.component._PortletSummary.store,tools:[{id:"refresh",qtip:_("Refresh this grid"),handler:function(){ui.component._PortletSummary.store.reload()}}],initComponent:function(a){ui.component.PortletSummary.superclass.initComponent.call(this);Ext.apply(this,a);this.add(new ui.component._PortletSummary.grid())},afterRender:function(){ui.component.PortletSummary.superclass.afterRender.call(this);this.header.insertFirst({tag:"div",id:Ext.id(),style:"float: left; margin-right: 2px;",cls:"flags flag-"+this.lang,},"first")}});ui.component._PortletSummary.instance=null;ui.component.PortletSummary.getInstance=function(a){if(!ui.component._PortletSummary.instance){if(!a){a={}}ui.component._PortletSummary.instance=new ui.component.PortletSummary(a)}return ui.component._PortletSummary.instance};Ext.namespace("ui","ui.component","ui.component._PortletTranslationGraph");function renderLibel(a){return _(a)}ui.component._PortletTranslationGraph.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getGraphLang"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"libel",mapping:"libel",convert:renderLibel},{name:"total",mapping:"total"}]))});ui.component._PortletTranslationGraph.chart=Ext.extend(Ext.chart.PieChart,{height:400,url:"js/extjs/resources/charts.swf",dataField:"total",categoryField:"libel",store:ui.component._PortletTranslationGraph.store,extraStyle:{legend:{display:"bottom",padding:5,font:{family:"Tahoma",size:13}}},initComponent:function(a){ui.component._PortletTranslationGraph.chart.superclass.initComponent.call(this);Ext.apply(this,a)}});ui.component.PortletTranslationGraph=Ext.extend(Ext.ux.Portlet,{title:_("Graphics"),iconCls:"iconGraphic",layout:"fit",store:ui.component._PortletTranslationGraph.store,tools:[{id:"refresh",qtip:_("Refresh this graph"),handler:function(){ui.component._PortletTranslationGraph.store.reload()}}],initComponent:function(a){ui.component.PortletTranslationGraph.superclass.initComponent.call(this);Ext.apply(this,a);this.add(new ui.component._PortletTranslationGraph.chart())}});ui.component._PortletTranslationGraph.instance=null;ui.component.PortletTranslationGraph.getInstance=function(a){if(!ui.component._PortletTranslationGraph.instance){if(!a){a={}}ui.component._PortletTranslationGraph.instance=new ui.component.PortletTranslationGraph(a)}return ui.component._PortletTranslationGraph.instance};Ext.namespace("ui","ui.component","ui.component._PortletTranslationsGraph");ui.component._PortletTranslationsGraph.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getGraphLangs"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"libel",mapping:"libel",type:"string"},{name:"total",mapping:"total",type:"int"}]))});ui.component._PortletTranslationsGraph.chart=Ext.extend(Ext.chart.ColumnChart,{height:400,url:"js/extjs/resources/charts.swf",xField:"libel",series:[{type:"column",displayName:"Total",yField:"total",style:{image:"themes/img/bar.gif",mode:"stretch",color:10075112}}],store:ui.component._PortletTranslationsGraph.store,initComponent:function(a){ui.component._PortletTranslationsGraph.chart.superclass.initComponent.call(this);Ext.apply(this,a)}});ui.component.PortletTranslationsGraph=Ext.extend(Ext.ux.Portlet,{title:_("Graphics for all language"),iconCls:"iconGraphic",layout:"fit",store:ui.component._PortletTranslationsGraph.store,tools:[{id:"refresh",qtip:_("Refresh this graph"),handler:function(){ui.component._PortletTranslationsGraph.store.reload()}}],initComponent:function(a){ui.component.PortletTranslationsGraph.superclass.initComponent.call(this);Ext.apply(this,a);this.add(new ui.component._PortletTranslationsGraph.chart())}});ui.component._PortletTranslationsGraph.instance=null;ui.component.PortletTranslationsGraph.getInstance=function(a){if(!ui.component._PortletTranslationsGraph.instance){if(!a){a={}}ui.component._PortletTranslationsGraph.instance=new ui.component.PortletTranslationsGraph(a)}return ui.component._PortletTranslationsGraph.instance};Ext.namespace("ui","ui.component","ui.component._PortletTranslator");ui.component._PortletTranslator.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"./do/getTranslatorInfo"}),reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"name",mapping:"name"},{name:"email",mapping:"mail"},{name:"nick",mapping:"nick"},{name:"vcs",mapping:"vcs"},{name:"uptodate",mapping:"uptodate",type:"int"},{name:"stale",mapping:"stale",type:"int"},{name:"sum",mapping:"sum",type:"int"}]))});ui.component._PortletTranslator.store.setDefaultSort("nick","asc");ui.component._PortletTranslator.translatorSumRenderer=function(b){if(b){var a=(b===0||b>1)?b:1;return String.format("("+_("{0} Translators")+")",a)}else{return}};ui.component._PortletTranslator.uptodateRenderer=function(a){if(a==="0"){return}else{return'<span style="color:green; font-weight: bold;">'+a+"</span>"}};ui.component._PortletTranslator.staleRenderer=function(a){if(a==="0"){return}else{return'<span style="color:red; font-weight: bold;">'+a+"</span>"}};ui.component._PortletTranslator.sumRenderer=function(a){return(a==="0")?"":a};ui.component._PortletTranslator.gridColumns=[new Ext.grid.RowNumberer(),{id:"GridTransName",header:_("Name"),sortable:true,dataIndex:"name",summaryType:"count",summaryRenderer:ui.component._PortletTranslator.translatorSumRenderer},{header:_("Email"),width:110,sortable:true,dataIndex:"email"},{header:_("Nick"),width:70,sortable:true,dataIndex:"nick"},{header:_("VCS"),width:45,sortable:true,dataIndex:"vcs"},{header:_("UptoDate"),width:60,sortable:true,renderer:ui.component._PortletTranslator.uptodateRenderer,dataIndex:"uptodate",summaryType:"sum"},{header:_("Stale"),width:90,sortable:true,renderer:ui.component._PortletTranslator.staleRenderer,dataIndex:"stale",summaryType:"sum"},{header:_("Sum"),width:50,sortable:true,renderer:ui.component._PortletTranslator.sumRenderer,dataIndex:"sum",summaryType:"sum"}];ui.component._PortletTranslator.grid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,autoScroll:true,autoHeight:true,plugins:[new Ext.ux.grid.GridSummary()],store:ui.component._PortletTranslator.store,columns:ui.component._PortletTranslator.gridColumns,autoExpandColumn:"GridTransName",sm:new Ext.grid.RowSelectionModel({singleSelect:true}),lang:this.lang,EmailPrompt:new ui.component.EmailPrompt(),listeners:{rowdblclick:function(a,c,b){this.getSelectionModel().selectRow(c);if(this.ctxTranslatorName){this.ctxTranslatorEmail=null;this.ctxTranslatorName=null}this.ctxTranslatorEmail=this.store.getAt(c).data.email;this.ctxTranslatorName=this.store.getAt(c).data.name;this.EmailPrompt.setData(this.ctxTranslatorName,this.ctxTranslatorEmail);this.EmailPrompt.show("lastUpdateTime")}},onContextClick:function(a,c,b){if(!this.menu){this.menu=new Ext.menu.Menu({id:"submenu-translators",items:[{scope:this,text:"",iconCls:"iconSendEmail",handler:function(){this.EmailPrompt.setData(this.ctxTranslatorName,this.ctxTranslatorEmail);this.EmailPrompt.show("lastUpdateTime")}},"-",{scope:this,text:String.format(_("Send an email to the {0}"),"doc-"+this.lang+"@lists.php.net"),iconCls:"iconSendEmail",handler:function(){this.EmailPrompt.setData("Php Doc Team "+this.lang,"doc-"+this.lang+"@lists.php.net");this.EmailPrompt.show("lastUpdateTime")}}]})}this.getSelectionModel().selectRow(c);b.stopEvent();if(this.ctxTranslatorName){this.ctxTranslatorName=null;this.ctxTranslatorEmail=null}this.ctxTranslatorName=this.store.getAt(c).data.name;this.ctxTranslatorEmail=this.store.getAt(c).data.email;this.menu.items.items[0].setText("<b>"+String.format(_("Send an email to {0}"),this.ctxTranslatorName)+"</b>");this.menu.showAt(b.getXY())},initComponent:function(a){ui.component._PortletTranslator.grid.superclass.initComponent.call(this);Ext.apply(this,a);this.on("rowcontextmenu",this.onContextClick,this)}});ui.component.PortletTranslator=Ext.extend(Ext.ux.Portlet,{title:_("Translators"),iconCls:"iconTranslator",layout:"fit",store:ui.component._PortletTranslator.store,tools:[{id:"refresh",qtip:_("Refresh this grid"),handler:function(){ui.component._PortletTranslator.store.reload()}}],initComponent:function(a){ui.component.PortletTranslator.superclass.initComponent.call(this);Ext.apply(this,a);this.add(new ui.component._PortletTranslator.grid({lang:this.lang}))}});ui.component._PortletTranslator.instance=null;ui.component.PortletTranslator.getInstance=function(a){if(!ui.component._PortletTranslator.instance){if(!a){a={}}ui.component._PortletTranslator.instance=new ui.component.PortletTranslator(a)}return ui.component._PortletTranslator.instance};Ext.namespace("ui","ui.component","ui.component._RepositoryTree");ui.component._RepositoryTree.root={nodeType:"async",id:"/",text:_("Repository")};ui.component._RepositoryTree.loader=new Ext.tree.TreeLoader({dataUrl:"./do/getAllFiles"});Ext.namespace("ui.component._RepositoryTree.menu");ui.component._RepositoryTree.menu.folder=function(a){Ext.apply(this,a);this.init();ui.component._RepositoryTree.menu.folder.superclass.constructor.call(this)};Ext.extend(ui.component._RepositoryTree.menu.folder,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{text:(this.node.isExpanded())?"<b>"+_("Collapse")+"</b>":"<b>"+_("Expand")+"</b>",iconCls:"iconFolderClose",scope:this,handler:function(){if(this.node.isExpanded()){this.node.collapse()}else{this.node.expand()}}}]})}});ui.component._RepositoryTree.menu.file=function(a){Ext.apply(this,a);this.init();ui.component._RepositoryTree.menu.file.superclass.constructor.call(this)};Ext.extend(ui.component._RepositoryTree.menu.file,Ext.menu.Menu,{init:function(){var a=this.node.attributes.text,b=this.node.attributes.id.split("/"),d,c;b.shift();d=b[0];b.shift();b.pop();c=b.join("/")+"/";Ext.apply(this,{items:[{text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconTabNeedReviewed",scope:this,handler:function(){ui.component._RepositoryTree.instance.fireEvent("dblclick",this.node)}},{hidden:(this.node.attributes.from==="search"||phpDoc.userLang=="en"),text:(d==="en")?String.format(_("Open the same file in <b>{0}</b>"),Ext.util.Format.uppercase(phpDoc.userLang)):String.format(_("Open the same file in <b>{0}</b>"),"EN"),iconCls:"iconTabNeedReviewed",scope:this,handler:function(){if(d==="en"){ui.component._RepositoryTree.instance.openFile(phpDoc.userLang+"/"+c,a)}else{ui.component._RepositoryTree.instance.openFile("en/"+c,a)}}}]})}});ui.component.RepositoryTree=Ext.extend(Ext.tree.TreePanel,{animate:true,enableDD:false,useArrows:true,autoScroll:true,border:false,containerScroll:true,root:ui.component._RepositoryTree.root,loader:ui.component._RepositoryTree.loader,listeners:{contextmenu:function(b,c){c.stopEvent();var a;b.select();if(b.attributes.type==="folder"||b.isRoot){a=new ui.component._RepositoryTree.menu.folder({node:b}).showAt(c.getXY())}else{if(b.attributes.type==="file"){a=new ui.component._RepositoryTree.menu.file({node:b}).showAt(c.getXY())}}},dblclick:function(f,h){if(f.attributes.type==="file"){var a=f.attributes.id,i=Ext.util.md5("AF-"+a),k=f.attributes.extension,l,d,c,b,g,j;if(!Ext.getCmp("main-panel").findById("AF-"+i)){l=a.split("/");l.shift();c=l.pop();d=l.shift();a=(l.length>0)?"/"+l.join("/")+"/":"/";if(k!=="html"&&k!=="php"){b=k}else{b="xml"}if(k==="gif"||k==="png"){g={};j={xtype:"panel",layout:"fit",bodyStyle:"padding:5px 5px 0",html:'<img src="/data/'+this.userLogin+"/phpdoc-"+this.userLang+a+'" />'}}else{g={xtype:"panel",region:"west",title:_("VCSLog"),layout:"fit",bodyBorder:false,split:true,collapsible:true,collapsed:true,width:375,items:{xtype:"tabpanel",activeTab:0,tabPosition:"bottom",defaults:{autoScroll:true},items:[{title:"Log",layout:"fit",items:[new ui.component.VCSLogGrid({prefix:"AF",fid:i,fpath:d+a,fname:c,loadStore:phpDoc.userConf.allFilesDisplayLog})]}]}};j=new ui.component.FilePanel({id:"AF-ALL-PANEL-"+i,region:"center",title:_("File: ")+d+a+c,prefix:"AF",ftype:"ALL",fid:i,fpath:a,fname:c,lang:d,parser:b,storeRecord:f,syncScrollCB:false,syncScroll:false})}Ext.getCmp("main-panel").add({id:"AF-"+i,layout:"border",title:c,originTitle:c,closable:true,tabTip:String.format(_("in {0}"),a),iconCls:"iconAllFiles",items:[j,g]});Ext.getCmp("main-panel").setActiveTab("AF-"+i)}else{Ext.getCmp("main-panel").setActiveTab("AF-"+i);if(phpDoc.filePendingOpen[0]){if(phpDoc.filePendingOpen[0]){if(phpDoc.filePendingOpen[0].fpath){this.openFile(phpDoc.filePendingOpen[0].fpath,phpDoc.filePendingOpen[0].fname)}}}}}}},initComponent:function(){Ext.apply(this,{tbar:[_("Search: ")," ",new Ext.form.TwinTriggerField({id:"AF-search",validationEvent:false,validateOnBlur:false,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",hideTrigger1:true,width:180,enableKeyEvents:true,listeners:{keypress:function(c,b){if(b.getKey()==b.ENTER){this.onTrigger2Click()}}},onTrigger1Click:function(){var b=ui.component._RepositoryTree.instance;this.setValue("");this.triggers[0].hide();b.root.setText(_("Repository"));delete b.loader.baseParams.search;b.root.reload()},onTrigger2Click:function(){var b=ui.component._RepositoryTree.instance,c=this.getValue();if(c===""||c.length<3){this.markInvalid(_("Your search must contain at least 3 characters"));return}this.clearInvalid();this.triggers[0].show();b.loader.baseParams.search=c;b.root.reload(function(){b.root.setText(String.format(_("Search result: {0}"),b.root.childNodes.length))})}})]});ui.component.RepositoryTree.superclass.initComponent.call(this);var a=new Ext.tree.TreeSorter(this,{folderSort:true})},openFile:function(c,d){Ext.getCmp("acc-all-files").expand();var b=c.split("/"),a=function(g){g.ensureVisible();if(b[0]&&b[0]!==""){for(var e=0;e<g.childNodes.length;++e){if(g.childNodes[e].text===b[0]){b.shift();g.childNodes[e].expand(false,true,a.createDelegate(this))}}}else{for(var f=0;f<g.childNodes.length;++f){if(g.childNodes[f].text===d){g.childNodes[f].ensureVisible();g.childNodes[f].ui.highlight();this.fireEvent("dblclick",g.childNodes[f])}}}};this.root.expand(false,true,a.createDelegate(this))}});ui.component._RepositoryTree.instance=null;ui.component.RepositoryTree.getInstance=function(a){if(!ui.component._RepositoryTree.instance){if(!a){a={}}ui.component._RepositoryTree.instance=new ui.component.RepositoryTree(a)}return ui.component._RepositoryTree.instance};Ext.namespace("ui","ui.component","ui.component._StaleFileGrid");ui.component._StaleFileGrid.store=Ext.extend(Ext.data.GroupingStore,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"path",mapping:"path"},{name:"name",mapping:"name"},{name:"revision",mapping:"revision"},{name:"en_revision",mapping:"en_revision"},{name:"maintainer",mapping:"maintainer"},{name:"needCommitEN",mapping:"needCommitEN"},{name:"needCommitLang",mapping:"needCommitLang"}])),sortInfo:{field:"path",direction:"ASC"},groupField:"path",listeners:{datachanged:function(a){Ext.getDom("acc-need-update-nb").innerHTML=a.getCount()}}});ui.component._StaleFileGrid.view=new Ext.grid.GroupingView({forceFit:true,startCollapsed:true,groupTextTpl:'{[values.rs[0].data["path"]]} ({[values.rs.length]} {[values.rs.length > 1 ? "'+_("Files")+'" : "'+_("File")+'"]})',deferEmptyText:false,getRowClass:function(a,d,c,b){if(a.data.needCommitEN||a.data.needCommitLang){return"file-need-commit"}},emptyText:'<div style="text-align: center;">'+_("No Files")+"</div>"});ui.component._StaleFileGrid.columns=[{id:"name",header:_("Files"),sortable:true,dataIndex:"name"},{header:_("EN revision"),width:45,sortable:true,dataIndex:"en_revision"},{header:"",width:45,sortable:true,dataIndex:"revision"},{header:_("Maintainer"),width:45,sortable:true,dataIndex:"maintainer"},{header:_("Path"),dataIndex:"path",hidden:true}];ui.component._StaleFileGrid.menu=function(a){Ext.apply(this,a);this.init();ui.component._StaleFileGrid.menu.superclass.constructor.call(this)};Ext.extend(ui.component._StaleFileGrid.menu,Ext.menu.Menu,{init:function(){Ext.apply(this,{items:[{scope:this,text:"<b>"+_("Edit in a new Tab")+"</b>",iconCls:"iconTabNeedUpdate",handler:function(){this.grid.fireEvent("rowdblclick",this.grid,this.rowIdx,this.event)}},{scope:this,hidden:this.hideCommit,text:_("View Diff..."),iconCls:"iconViewDiff",menu:new Ext.menu.Menu({items:[{scope:this,hidden:(this.grid.store.getAt(this.rowIdx).data.needCommitEN===false),text:String.format(_("... of the {0} file"),"EN"),handler:function(){this.openTab(this.rowIdx,"en",this.fpath,this.fname)}},{scope:this,hidden:(this.grid.store.getAt(this.rowIdx).data.needCommitLang===false),text:String.format(_("... of the {0} file"),phpDoc.userLang),handler:function(){this.openTab(this.rowIdx,phpDoc.userLang,this.fpath,this.fname)}}]})}]})},openTab:function(b,c,a,d){if(!Ext.getCmp("main-panel").findById("diff_panel_"+c+"_"+b)){Ext.getCmp("main-panel").add({xtype:"panel",id:"diff_panel_"+c+"_"+b,title:_("Diff"),tabTip:String.format(_("Diff for file: {0}"),c+a+d),closable:true,autoScroll:true,iconCls:"iconTabLink",html:'<div id="diff_content_'+c+"_"+b+'" class="diff-content"></div>'});Ext.get("diff_panel_"+c+"_"+b).mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" />'+_("Please, wait..."));XHR({params:{task:"getDiff",FilePath:c+a,FileName:d},success:function(e){var f=Ext.util.JSON.decode(e.responseText);Ext.get("diff_content_"+c+"_"+b).dom.innerHTML=f.content;Ext.get("diff_panel_"+c+"_"+b).unmask()}})}Ext.getCmp("main-panel").setActiveTab("diff_panel_"+c+"_"+b)}});ui.component.StaleFileGrid=Ext.extend(Ext.grid.GridPanel,{view:ui.component._StaleFileGrid.view,loadMask:true,autoExpandColumn:"name",border:false,listeners:{rowcontextmenu:function(c,g,f){f.stopEvent();var d=c.store.getAt(g).data.path,a=c.store.getAt(g).data.name,b;c.getSelectionModel().selectRow(g);b=new ui.component._StaleFileGrid.menu({hideCommit:(c.store.getAt(g).data.needCommitEN===false&&c.store.getAt(g).data.needCommitLang===false),grid:c,event:f,rowIdx:g,lang:phpDoc.userLang,fpath:d,fname:a}).showAt(f.getXY())},rowdblclick:function(a,c,b){this.openFile(a.store.getAt(c).data.id)}},openFile:function(h){var e=this.store.getById(h),d=e.data.path,a=e.data.name,b=e.data.en_revision,c=e.data.revision,g=Ext.util.md5("FNU-"+phpDoc.userLang+d+a),f="";if(!Ext.getCmp("main-panel").findById("FNU-"+g)){if(phpDoc.userConf.needUpdateDiff==="using-viewvc"){f=ui.component.ViewVCDiff}else{if(phpDoc.userConf.needUpdateDiff==="using-exec"){f=ui.component.ExecDiff}}Ext.getCmp("main-panel").add({id:"FNU-"+g,layout:"border",title:a,originTitle:a,iconCls:"iconTabNeedUpdate",closable:true,defaults:{split:true},tabTip:String.format(_("Need Update: in {0}"),d),listeners:{resize:function(i){Ext.getCmp("FNU-EN-PANEL-"+g).setWidth(i.getWidth()/2)}},items:[new f({region:"north",collapsible:true,prefix:"FNU",fid:g,fpath:d,fname:a,rev1:c,rev2:b}),{region:"west",xtype:"panel",title:_("VCSLog"),collapsible:true,collapsed:true,layout:"fit",bodyBorder:false,width:375,items:{xtype:"tabpanel",activeTab:0,tabPosition:"bottom",defaults:{autoScroll:true},items:[new ui.component.VCSLogGrid({layout:"fit",title:phpDoc.userLang,prefix:"FNU-LANG",fid:g,fpath:phpDoc.userLang+d,fname:a,loadStore:phpDoc.userConf.needUpdateDisplaylog}),new ui.component.VCSLogGrid({layout:"fit",title:"en",prefix:"FNU-EN",fid:g,fpath:"en"+d,fname:a,loadStore:phpDoc.userConf.needUpdateDisplaylog})]}},new ui.component.FilePanel({id:"FNU-LANG-PANEL-"+g,region:"center",title:String.format(_("{0} File: "),phpDoc.userLang)+d+a,prefix:"FNU",ftype:"LANG",fid:g,fpath:d,fname:a,lang:phpDoc.userLang,parser:"xml",storeRecord:e,syncScrollCB:true,syncScroll:true,syncScrollConf:"needUpdateScrollbars"}),new ui.component.FilePanel({id:"FNU-EN-PANEL-"+g,region:"east",title:_("en File: ")+d+a,prefix:"FNU",ftype:"EN",fid:g,fpath:d,fname:a,lang:"en",parser:"xml",storeRecord:e,syncScroll:true,syncScrollConf:"needUpdateScrollbars"})]})}Ext.getCmp("main-panel").setActiveTab("FNU-"+g)},initComponent:function(){ui.component._StaleFileGrid.columns[2].header=String.format(_("{0} revision"),Ext.util.Format.uppercase(phpDoc.userLang));Ext.apply(this,{columns:ui.component._StaleFileGrid.columns,store:new ui.component._StaleFileGrid.store({proxy:new Ext.data.HttpProxy({url:"./do/getFilesNeedUpdate"})}),tbar:[_("Filter: ")," ",new Ext.form.TwinTriggerField({id:"FNU-filter",width:180,hideTrigger1:true,enableKeyEvents:true,validateOnBlur:false,validationEvent:false,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",listeners:{keypress:function(b,a){if(a.getKey()==a.ENTER){this.onTrigger2Click()}}},onTrigger1Click:function(){this.setValue("");this.triggers[0].hide();ui.component._StaleFileGrid.instance.store.clearFilter()},onTrigger2Click:function(){var a=this.getValue();if(a===""||a.length<3){this.markInvalid(_("Your filter must contain at least 3 characters"));return}this.clearInvalid();this.triggers[0].show();ui.component._StaleFileGrid.instance.store.filter("maintainer",a)}})]});ui.component.StaleFileGrid.superclass.initComponent.call(this)}});ui.component._StaleFileGrid.instance=null;ui.component.StaleFileGrid.getInstance=function(a){if(!ui.component._StaleFileGrid.instance){if(!a){a={}}ui.component._StaleFileGrid.instance=new ui.component.StaleFileGrid(a)}return ui.component._StaleFileGrid.instance};Ext.namespace("ui","ui.component");ui.component.SystemUpdatePrompt=Ext.extend(Ext.Window,{id:"sys-update-win",title:_("Refresh all data"),layout:"form",width:300,height:200,resizable:false,modal:true,bodyStyle:"padding:15px 15px 0",iconCls:"iconRefresh",html:['<div id="wizard-step-1" class="wizard-step-before">',_("Update all files from VCS"),"</div>",'<div id="wizard-step-1.1" class="wizard-wait">',_("This may take time. Thank you for your patience..."),"</div>",'<div id="wizard-step-2" class="wizard-step-before">',_("Apply all tools"),"</div>",'<div id="wizard-step-3" class="wizard-step-before">',_("Reload data"),"</div>"].join(""),buttons:[{id:"btn-start-refresh",text:_("Start"),iconCls:"iconStartRefresh",handler:function(){Ext.getCmp("btn-start-refresh").disable();this.ownerCt.ownerCt.tools.close.setVisible(false);Ext.getDom("lastUpdateTime").innerHTML=_("update in progress...");var a=new ui.task.SystemUpdateTask()}}]});Ext.namespace("ui","ui.component","ui.component._VCSLogGrid");ui.component._VCSLogGrid.store=Ext.extend(Ext.data.Store,{reader:new Ext.data.JsonReader({root:"Items",totalProperty:"nbItems",id:"id"},Ext.data.Record.create([{name:"id",mapping:"id"},{name:"revision",mapping:"revision"},{name:"date",mapping:"date",type:"date",dateFormat:"Y/m/d H:i:s"},{name:"author",mapping:"author"},{name:"content",mapping:"content"}]))});ui.component._VCSLogGrid.sm=Ext.extend(Ext.grid.CheckboxSelectionModel,{singleSelect:false,header:"",width:22,listeners:{beforerowselect:function(b){var a=b.getCount();if(a===2){return false}},rowselect:function(b){var a=b.getCount();if(a===2){Ext.getCmp(b.prefix+"-PANEL-btn-log-"+b.fid).enable();Ext.get(b.prefix+"-PANEL-btn-log-"+b.fid).frame("3F8538")}else{Ext.getCmp(b.prefix+"-PANEL-btn-log-"+b.fid).disable()}},rowdeselect:function(b){var a=b.getCount();if(a===2){Ext.getCmp(b.prefix+"-PANEL-btn-log-"+b.fid).enable();Ext.get(b.prefix+"-PANEL-btn-log-"+b.fid).frame("3F8538")}else{Ext.getCmp(b.prefix+"-PANEL-btn-log-"+b.fid).disable()}}}});ui.component._VCSLogGrid.columns=[{id:"id",header:_("Rev."),width:40,sortable:false,dataIndex:"revision"},{header:_("Content"),width:130,sortable:true,dataIndex:"content"},{header:_("By"),width:50,sortable:true,dataIndex:"author"},{header:_("Date"),width:85,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer(_("Y-m-d, H:i"))}];ui.component.VCSLogGrid=Ext.extend(Ext.grid.GridPanel,{loadMask:true,autoScroll:true,bodyBorder:false,autoExpandColumn:"content",initComponent:function(){var d=new ui.component._VCSLogGrid.sm({fid:this.fid,prefix:this.prefix}),a=new ui.component._VCSLogGrid.store({autoLoad:this.loadStore,proxy:new Ext.data.HttpProxy({url:"./do/getLog"}),baseParams:{Path:this.fpath,File:this.fname}}),c=[];c.push(d);for(var b=0;b<ui.component._VCSLogGrid.columns.length;++b){c.push(ui.component._VCSLogGrid.columns[b])}a.setDefaultSort("date","desc");Ext.apply(this,{sm:d,store:a,columns:c,view:new Ext.grid.GridView({forceFit:true,emptyText:'<div style="text-align: center">'+_("You must manually load this data.<br>Use the refresh button !")+"<br><br>"+_("(You can change this behavior by setting an option in the configuration window)")+"</div>",deferEmptyText:false,}),tbar:[{scope:this,id:this.prefix+"-PANEL-btn-log-"+this.fid,tooltip:_("<b>View</b> the diff"),iconCls:"iconViewDiff",disabled:true,handler:function(){var g=this.getSelectionModel().getSelections(),f=g[0].data.revision,e=g[1].data.revision;Ext.getBody().mask('<img src="themes/img/loading.gif" style="vertical-align: middle;" /> '+_("Finding the diff. Please, wait..."));XHR({params:{task:"getDiff2",FilePath:this.fpath,FileName:this.fname,Rev1:f,Rev2:e},success:function(i){var j=Ext.util.JSON.decode(i.responseText);Ext.getBody().unmask();var h=new Ext.Window({title:String.format(_("Diff between {0} & {1}"),f,e),width:650,height:350,resizable:false,modal:true,autoScroll:true,bodyStyle:"background-color: white; padding: 5px;",html:'<div class="diff-content">'+j.content+"</div>",buttons:[{text:_("Close"),handler:function(){h.close()}}]});h.show()}})}},{scope:this,id:this.prefix+"-PANEL-btn-refreshlog-"+this.fid,tooltip:_("<b>Load/Refresh</b> revisions"),iconCls:"iconRefresh",handler:function(){this.store.reload()}}]});ui.component.VCSLogGrid.superclass.initComponent.call(this)}});Ext.namespace("ui","ui.component");ui.component.ViewVCDiff=Ext.extend(Ext.Panel,{layout:"fit",title:_("Diff From VCS"),height:150,initComponent:function(){Ext.apply(this,{items:{id:this.prefix+"-diff-"+this.fid,xtype:"panel",layout:"fit",items:[new Ext.ux.IFrameComponent({id:"frame-"+this.prefix+"-diff-"+this.fid,url:"http://svn.php.net/viewvc/phpdoc/en/trunk"+this.fpath+this.fname+"?r1="+this.rev1+"&r2="+this.rev2})]}});ui.component.ViewVCDiff.superclass.initComponent.call(this)}});var phpDoc=function(){Ext.QuickTips.init();return{userLogin:null,userLang:null,appName:"PhpDocumentation Online Editor",appVer:"0.2",uiRevision:"$Revision: 292760 $",userConf:"",filePendingOpen:"",init:function(){new ui.task.LoadConfigTask()},notify:function(b,e,c){var d,a;if(b=="info"){a="iconInfo"}if(b=="error"){a="iconError"}d=new Ext.ux.Notification({iconCls:a,title:e,html:c,autoDestroy:true,hideDelay:5000});d.show(document)},winForbidden:function(a){var b=_("Forbidden"),c=_("You can't do this action as anonymous user.");switch(a){case"fs_error":b=_("Error");c=_("File system error. Check read/write permission under data folder.");break}Ext.MessageBox.alert(b,c)},afterLoadAllStore:function(){if(this.userConf.mainAppLoadMailsAtStartUp){ui.component.PortletLocalMail.getInstance().reloadData()}if(this.userConf.mainAppLoadBugsAtStartUp){ui.component.PortletBugs.getInstance().reloadData()}},loadAllStore:function(){var a=new Ext.ProgressBar({width:300,renderTo:"loading-progressBar"});a.show();if(phpDoc.userLang!=="en"){document.getElementById("loading-msg").innerHTML="Loading data...";a.updateProgress(1/12,"1 of 12...");ui.component._MainMenu.store.load({callback:function(){a.updateProgress(2/12,"2 of 12...");ui.component.StaleFileGrid.getInstance().store.load({callback:function(){a.updateProgress(3/12,"3 of 12...");ui.component.ErrorFileGrid.getInstance().store.load({callback:function(){a.updateProgress(4/12,"4 of 12...");ui.component.PendingReviewGrid.getInstance().store.load({callback:function(){a.updateProgress(5/12,"5 of 12...");ui.component.NotInENGrid.getInstance().store.load({callback:function(){a.updateProgress(6/12,"6 of 12...");ui.component.PendingCommitGrid.getInstance().store.load({callback:function(){a.updateProgress(7/12,"7 of 12...");ui.component.PendingPatchGrid.getInstance().store.load({callback:function(){a.updateProgress(8/12,"8 of 12...");ui.component.PortletSummary.getInstance().store.load({callback:function(){a.updateProgress(9/12,"9 of 12...");ui.component.PortletTranslationGraph.getInstance().store.load({callback:function(){a.updateProgress(10/12,"10 of 12...");ui.component.PortletTranslationsGraph.getInstance().store.load({callback:function(){a.updateProgress(11/12,"11 of 12...");ui.component.PortletTranslator.getInstance().store.load({callback:function(){a.updateProgress(12/12,"12 of 12...");ui.component.PendingTranslateGrid.getInstance().store.load({callback:function(){Ext.get("loading").remove();Ext.fly("loading-mask").fadeOut({remove:true});a.destroy();phpDoc.afterLoadAllStore()}})}})}})}})}})}})}})}})}})}})}})}})}else{document.getElementById("loading-msg").innerHTML="Loading data...";a.updateProgress(1/4,"1 of 4...");ui.component._MainMenu.store.load({callback:function(){a.updateProgress(2/4,"2 of 4...");ui.component.PendingPatchGrid.getInstance().store.load({callback:function(){a.updateProgress(3/4,"3 of 4...");ui.component.PortletTranslationsGraph.getInstance().store.load({callback:function(){a.updateProgress(4/4,"4 of 4...");ui.component.PendingCommitGrid.getInstance().store.load({callback:function(){Ext.get("loading").remove();Ext.fly("loading-mask").fadeOut({remove:true});a.destroy();phpDoc.afterLoadAllStore()}})}})}})}})}},reloadAllStore:function(){if(phpDoc.userLang!=="en"){ui.component.PendingTranslateGrid.getInstance().store.reload({callback:function(){ui.component.StaleFileGrid.getInstance().store.reload({callback:function(){ui.component.ErrorFileGrid.getInstance().store.reload({callback:function(){ui.component.PendingReviewGrid.getInstance().store.reload({callback:function(){ui.component.NotInENGrid.getInstance().store.reload({callback:function(){ui.component.PendingCommitGrid.getInstance().store.reload({callback:function(){ui.component.PendingPatchGrid.getInstance().store.reload({callback:function(){ui.component.PortletSummary.getInstance().store.reload({callback:function(){ui.component.PortletTranslator.getInstance().store.reload({callback:function(){ui.component.PortletTranslationGraph.getInstance().store.reload({callback:function(){ui.component.PortletTranslationsGraph.getInstance().store.reload()}})}})}})}})}})}})}})}})}})}})}else{ui.component.PendingCommitGrid.getInstance().store.reload({callback:function(){ui.component.PendingPatchGrid.getInstance().store.reload()}})}},removeTabEvent:function(d,e){var b,c,f,a=e.id.split("-");if((a[0]==="FE"||a[0]==="FNU"||a[0]==="FNR"||a[0]==="PP"||a[0]==="AF"||a[0]==="FNT")&&a[1]!=="help"){if(a[0]==="FE"){b=Ext.getCmp("FE-LANG-FILE-"+a[1]).isModified}if(a[0]==="FNU"){b=Ext.getCmp("FNU-LANG-FILE-"+a[1]).isModified}if(a[0]==="FNR"){b=Ext.getCmp("FNR-LANG-FILE-"+a[1]).isModified}if(a[0]==="FE"){c=Ext.getCmp("FE-EN-FILE-"+a[1]).isModified}if(a[0]==="FNU"){c=Ext.getCmp("FNU-EN-FILE-"+a[1]).isModified}if(a[0]==="FNR"){c=Ext.getCmp("FNR-EN-FILE-"+a[1]).isModified}if(a[0]==="PP"){f=Ext.getCmp("PP-PATCH-FILE-"+a[1]).isModified}if(a[0]==="AF"){f=Ext.getCmp("AF-ALL-FILE-"+a[1]).isModified}if(a[0]==="FNT"){f=Ext.getCmp("FNT-TRANS-FILE-"+a[1]).isModified}if(c||b||f){Ext.Msg.show({scope:this,title:_("Confirm"),msg:_("This file has been modified without being saved.<br/>Do you really want to close?"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(g,h){if(g==="yes"){d.un("beforeremove",this.removeTabEvent,this);d.remove(e);d.addListener("beforeremove",this.removeTabEvent,this)}}});return false}else{return true}}else{return true}},drawInterface:function(){ui.task.PingTask.getInstance().delay(30000);mainContentLeft=(this.userLang==="en")?[ui.component.PortletLocalMail.getInstance({lang:this.userLang}),ui.component.PortletBugs.getInstance({lang:this.userLang})]:[ui.component.PortletSummary.getInstance({lang:this.userLang}),ui.component.PortletTranslator.getInstance({lang:this.userLang}),ui.component.PortletLocalMail.getInstance({lang:this.userLang})];mainContentRight=(this.userLang==="en")?[ui.component.PortletTranslationsGraph.getInstance()]:[ui.component.PortletTranslationGraph.getInstance(),ui.component.PortletTranslationsGraph.getInstance(),ui.component.PortletBugs.getInstance({lang:this.userLang})];new Ext.Viewport({layout:"border",items:[{region:"north",html:'<h1 class="x-panel-header"><img src="themes/img/mini_php.png" style="vertical-align: middle;" />&nbsp;&nbsp;'+this.appName+"</h1>",autoHeight:true,border:false,margins:"0 0 5 0"},{region:"west",layout:"accordion",collapsible:true,collapseMode:"mini",animate:true,split:true,width:300,header:false,tbar:[{text:_("Main Menu"),iconCls:"MainMenu",menu:new ui.component.MainMenu()}],items:[{id:"acc-need-translate",title:_("Files Need Translate")+' (<em id="acc-need-translate-nb">0</em>)',layout:"fit",border:false,iconCls:"iconFilesNeedTranslate",hidden:(this.userLang==="en"),items:[ui.component.PendingTranslateGrid.getInstance()],collapsed:true},{id:"acc-need-update",title:_("Files Need Update")+' (<em id="acc-need-update-nb">0</em>)',layout:"fit",border:false,iconCls:"iconFilesNeedUpdate",hidden:(this.userLang==="en"),items:[ui.component.StaleFileGrid.getInstance()],collapsed:true},{id:"acc-error",title:_("Error in current translation")+' (<em id="acc-error-nb">0</em>)',layout:"fit",border:false,iconCls:"iconFilesError",hidden:(this.userLang==="en"),items:[ui.component.ErrorFileGrid.getInstance()],collapsed:true},{id:"acc-need-reviewed",title:_("Files Need Reviewed")+' (<em id="acc-need-reviewed-nb">0</em>)',layout:"fit",border:false,iconCls:"iconFilesNeedReviewed",hidden:(this.userLang==="en"),items:[ui.component.PendingReviewGrid.getInstance()],collapsed:true},{id:"acc-notInEn",title:_("Not in EN tree")+' (<em id="acc-notInEn-nb">0</em>)',layout:"fit",border:false,iconCls:"iconNotInEn",hidden:(this.userLang==="en"),items:[ui.component.NotInENGrid.getInstance()],collapsed:true},{id:"acc-all-files",title:_("All files"),layout:"fit",border:false,iconCls:"iconAllFiles",items:[ui.component.RepositoryTree.getInstance()],collapsed:true},{id:"acc-need-pendingCommit",tools:[{id:"gear",hidden:(this.userLogin=="anonymous"),qtip:_("Open the Log Message Manager"),handler:function(){if(!Ext.getCmp("commit-log-win")){var a=new ui.component.CommitLogManager()}Ext.getCmp("commit-log-win").show("acc-need-pendingCommit")}}],title:_("Pending for commit")+' (<em id="acc-pendingCommit-nb">0</em>)',layout:"fit",border:false,iconCls:"iconPendingCommit",items:[ui.component.PendingCommitGrid.getInstance()],collapsed:true},{id:"acc-need-pendingPatch",title:_("Pending Patch")+' (<em id="acc-pendingPatch-nb">0</em>)',layout:"fit",border:false,iconCls:"iconPendingPatch",items:[ui.component.PendingPatchGrid.getInstance()],collapsed:true}]},{xtype:"tabpanel",id:"main-panel",region:"center",activeTab:0,enableTabScroll:true,plugins:new Ext.ux.TabCloseMenu(),listeners:{scope:this,beforeremove:this.removeTabEvent},items:[{xtype:"panel",id:"MainInfoTabPanel",title:_("Home"),baseCls:"MainInfoTabPanel",autoScroll:true,plain:true,items:[{xtype:"panel",border:false,html:'<div class="res-block"><div class="res-block-inner"><h3>'+((this.userLogin!="anonymous")?String.format(_("Connected as <em>{0}</em>"),this.userLogin):String.format(_("Connected as <em>{0}</em>"),_("anonymous")))+"<br/><br/>"+String.format(_('Last data update: <em id="lastUpdateTime">{0}</em>'),"-")+"</h3></div></div>"},{xtype:"portal",border:false,items:[{columnWidth:0.5,style:"padding:10px 5px 10px 5px",items:mainContentLeft},{columnWidth:0.5,style:"padding:10px 5px 10px 5px",items:mainContentRight}]}]}]}]});this.loadAllStore();if(directAccess){ui.component.RepositoryTree.getInstance().openFile(directAccess.lang+directAccess.path,directAccess.name)}}}}();Ext.EventManager.onDocumentReady(phpDoc.init,phpDoc,true);